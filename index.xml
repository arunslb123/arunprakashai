<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Explained Intuitively</title>
<link>https://arunprakash.ai/index.html</link>
<atom:link href="https://arunprakash.ai/index.xml" rel="self" type="application/rss+xml"/>
<description>A blog about large language models and tools</description>
<generator>quarto-1.3.340</generator>
<lastBuildDate>Thu, 21 Mar 2024 14:00:00 GMT</lastBuildDate>
<item>
  <title>Anthropic Claude3: Messages API with Streaming</title>
  <dc:creator>Arun Prakash</dc:creator>
  <link>https://arunprakash.ai/posts/anthropic-messages-api-streaming-python/messages_api_streaming.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install anthropic --upgrade</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dotenv <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dotenv</span>
<span id="cb2-3"></span>
<span id="cb2-4">load_dotenv()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="1">
<pre><code>True</code></pre>
</div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">api_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ANTHROPIC_API_KEY"</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> anthropic</span>
<span id="cb5-2"></span>
<span id="cb5-3">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> anthropic.Anthropic(</span>
<span id="cb5-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># defaults to os.environ.get("ANTHROPIC_API_KEY")</span></span>
<span id="cb5-5">    api_key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>api_key,</span>
<span id="cb5-6">)</span></code></pre></div>
</div>
<section id="without-streaming" class="level1">
<h1>Without Streaming</h1>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.messages.create(</span>
<span id="cb6-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"claude-3-opus-20240229"</span>,</span>
<span id="cb6-3">    max_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb6-4">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>,</span>
<span id="cb6-5">    system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are an expert travel guide"</span>,</span>
<span id="cb6-6">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb6-7">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top places to visit in Sydney"</span>}</span>
<span id="cb6-8">    ]</span>
<span id="cb6-9">)</span>
<span id="cb6-10"></span>
<span id="cb6-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(message.content)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[ContentBlock(text="Here are some of the top places to visit in Sydney, Australia:\n\n1. Sydney Opera House - This iconic building is a UNESCO World Heritage site and a must-see attraction.\n\n2. Sydney Harbour Bridge - Take a walk across the bridge or participate in a guided climb for stunning views of the city and harbor.\n\n3. Bondi Beach - One of Australia's most famous beaches, known for its golden sand, surfing, and vibrant beach culture.\n\n4. The Rocks - A historic neighborhood with cobblestone streets, colonial buildings, museums, and markets.\n\n5. Darling Harbour - A waterfront precinct with restaurants, shops, and attractions like the SEA LIFE Sydney Aquarium and the Australian National Maritime Museum.\n\n6. Royal Botanic Garden Sydney - A beautiful park featuring diverse plant collections, harbor views, and a colony of flying foxes.\n\n7. Taronga Zoo - Located on the shores of Sydney Harbour, this zoo is home to a wide variety of native Australian and exotic animals.\n\n8. Manly Beach - Take a ferry from Circular Quay to Manly to enjoy the beach, walk along the Manly Corso, and visit the Manly SEA LIFE Sanctuary.\n\n9. Queen Victoria Building (QVB) - A historic shopping center with intricate Romanesque architecture and high-end boutiques.\n\n10. Blue Mountains National Park - Located about 1.5 hours from Sydney, this stunning park offers hiking trails, waterfalls, and the famous Three Sisters rock formation.", type='text')]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> display, HTML, Markdown</span></code></pre></div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">display(Markdown(message.content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>Here are some of the top places to visit in Sydney, Australia:</p>
<ol type="1">
<li><p>Sydney Opera House - This iconic building is a UNESCO World Heritage site and a must-see attraction.</p></li>
<li><p>Sydney Harbour Bridge - Take a walk across the bridge or participate in a guided climb for stunning views of the city and harbor.</p></li>
<li><p>Bondi Beach - One of Australia’s most famous beaches, known for its golden sand, surfing, and vibrant beach culture.</p></li>
<li><p>The Rocks - A historic neighborhood with cobblestone streets, colonial buildings, museums, and markets.</p></li>
<li><p>Darling Harbour - A waterfront precinct with restaurants, shops, and attractions like the SEA LIFE Sydney Aquarium and the Australian National Maritime Museum.</p></li>
<li><p>Royal Botanic Garden Sydney - A beautiful park featuring diverse plant collections, harbor views, and a colony of flying foxes.</p></li>
<li><p>Taronga Zoo - Located on the shores of Sydney Harbour, this zoo is home to a wide variety of native Australian and exotic animals.</p></li>
<li><p>Manly Beach - Take a ferry from Circular Quay to Manly to enjoy the beach, walk along the Manly Corso, and visit the Manly SEA LIFE Sanctuary.</p></li>
<li><p>Queen Victoria Building (QVB) - A historic shopping center with intricate Romanesque architecture and high-end boutiques.</p></li>
<li><p>Blue Mountains National Park - Located about 1.5 hours from Sydney, this stunning park offers hiking trails, waterfalls, and the famous Three Sisters rock formation.</p></li>
</ol>
</div>
</div>
<p>It took ~22 seconds to process the output</p>
</section>
<section id="with-streaming" class="level1">
<h1>With Streaming</h1>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> client.messages.stream(</span>
<span id="cb10-2">    max_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>,</span>
<span id="cb10-3">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb10-4">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top places to visit in Sydney"</span>}</span>
<span id="cb10-5">    ],</span>
<span id="cb10-6">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"claude-3-opus-20240229"</span>,</span>
<span id="cb10-7">) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> stream:</span>
<span id="cb10-8">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> text <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> stream.text_stream:</span>
<span id="cb10-9">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(text, end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, flush<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Here are some of the top places to visit in Sydney, Australia:

1. Sydney Opera House - This iconic building is a UNESCO World Heritage site and a must-see attraction.

2. Sydney Harbour Bridge - Climb the bridge for stunning views of the city or walk across it for free.

3. Bondi Beach - One of Australia's most famous beaches, known for its surf, sand, and cafes.

4. The Rocks - A historic neighborhood with cobblestone streets, markets, and museums.

5. Royal Botanic Garden Sydney - A beautiful park with stunning views of the harbor and city skyline.

6. Taronga Zoo - A world-class zoo with a wide variety of animals and stunning views of the city.

7. Darling Harbour - A waterfront precinct with restaurants, bars, and entertainment venues.

8. Sydney Tower Eye - The tallest structure in Sydney, offering panoramic views of the city.

9. Manly Beach - A popular beach town that can be reached by ferry from Circular Quay.

10. Blue Mountains National Park - A stunning national park with hiking trails, waterfalls, and scenic lookouts, located just outside the city.

These are just a few of the many attractions Sydney has to offer. The city is also known for its diverse food scene, vibrant nightlife, and cultural events throughout the year.</code></pre>
</div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(stream)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>anthropic.lib.streaming._messages.MessageStream</code></pre>
</div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">[f <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> f <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span>(stream) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> f.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>)]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>['close',
 'current_message_snapshot',
 'get_final_message',
 'get_final_text',
 'on_content_block',
 'on_end',
 'on_exception',
 'on_message',
 'on_stream_event',
 'on_text',
 'on_timeout',
 'response',
 'text_stream',
 'until_done']</code></pre>
</div>
</div>
<p>When you receive data from a server using Server-Sent Events (SSE), the server sends events to your application. Each event has a specific name and some associated data in JSON format. The event name tells you what kind of event it is, and the JSON data provides more details about that event.</p>
<p>Here’s a step-by-step explanation of how the events flow:</p>
<ol type="1">
<li><p>First, you’ll receive a <code>message_start</code> event. This event includes a <code>Message</code> object, but the <code>content</code> of the message will be empty at this point. It’s like a placeholder for the message that will be filled in later.</p></li>
<li><p>Next, you’ll receive a series of content blocks. Each content block represents a part of the message’s content. The content blocks come in three stages:</p>
<ul>
<li><code>content_block_start</code>: This event indicates the start of a new content block.</li>
<li><code>content_block_delta</code>: You might receive one or more of these events. They contain the actual content of the block.</li>
<li><code>content_block_stop</code>: This event marks the end of the content block.</li>
</ul>
<p>Each content block has an <code>index</code> number that tells you its position in the final <code>Message</code> object’s <code>content</code> array.</p></li>
<li><p>After receiving all the content blocks, you’ll receive one or more <code>message_delta</code> events. These events indicate changes or updates to the overall <code>Message</code> object.</p></li>
<li><p>Finally, you’ll receive a <code>message_stop</code> event. This event signifies that the server has finished sending the complete message.</p></li>
</ol>
<p>So, in summary, the server sends events to your application, piece by piece, to gradually build up the complete message. It starts with a <code>message_start</code> event, followed by content blocks, <code>message_delta</code> events for updates, and ends with a <code>message_stop</code> event.</p>
<p>By following this event flow, your application can receive and process the message data from the server in a structured way, even if the message is sent in multiple parts.</p>



</section>

<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>llm</category>
  <category>claude3</category>
  <category>messages-api</category>
  <guid>https://arunprakash.ai/posts/anthropic-messages-api-streaming-python/messages_api_streaming.html</guid>
  <pubDate>Thu, 21 Mar 2024 14:00:00 GMT</pubDate>
  <media:content url="https://arunprakash.ai/posts/anthropic-messages-api-streaming-python/streaming.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>Anthropic Claude3: Messages API with Multimodal Input</title>
  <dc:creator>Arun Prakash</dc:creator>
  <link>https://arunprakash.ai/posts/anthropic-claude3-messages-api-python/messages_api.html</link>
  <description><![CDATA[ 




<p>The Claude 3 family represents Anthropic’s latest, most advanced AI models, offering state-of-the-art performance, versatility, and ease of use for open-ended conversation, idea collaboration, coding, and text processing.</p>
<ul>
<li><p>The family includes three models:</p>
<ul>
<li>Claude 3 Opus (most powerful)</li>
<li>Claude 3 Sonnet (balanced intelligence and speed)<br>
</li>
<li>Claude 3 Haiku (fastest and most compact)</li>
</ul></li>
<li><p>Key features of Claude 3 models:</p>
<ul>
<li>Improved multilingual capabilities (e.g.&nbsp;Spanish, Japanese)</li>
<li>Visual input processing for documents, web UIs, image metadata</li>
<li>Enhanced steerability for greater control and predictability</li>
<li>Periodic updates to expand capabilities while maintaining version stability</li>
</ul></li>
<li><p>The visual processing capabilities allow extracting insights from docs, analyzing charts/graphs/photos, generating image metadata and more.</p></li>
<li><p>Claude 3 models are designed to be easy to use and steer, providing developers with more control to achieve high-quality, predictable results. Model updates will be version-controlled to ensure existing workflows aren’t disrupted.</p></li>
</ul>
<section id="installation" class="level2">
<h2 class="anchored" data-anchor-id="installation">Installation</h2>
<div class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install anthropic --upgrade</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="31">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dotenv <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dotenv</span>
<span id="cb2-3"></span>
<span id="cb2-4">load_dotenv()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="31">
<pre><code>True</code></pre>
</div>
</div>
<div class="cell" data-execution_count="32">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">api_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ANTHROPIC_API_KEY"</span>)</span></code></pre></div>
</div>
</section>
<section id="messages-api" class="level1">
<h1>Messages API</h1>
<div class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> anthropic</span>
<span id="cb5-2"></span>
<span id="cb5-3">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> anthropic.Anthropic(</span>
<span id="cb5-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># defaults to os.environ.get("ANTHROPIC_API_KEY")</span></span>
<span id="cb5-5">    api_key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>api_key,</span>
<span id="cb5-6">)</span>
<span id="cb5-7"></span>
<span id="cb5-8">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.messages.create(</span>
<span id="cb5-9">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"claude-3-opus-20240229"</span>,</span>
<span id="cb5-10">    max_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb5-11">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>,</span>
<span id="cb5-12">    system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are an expert travel guide"</span>,</span>
<span id="cb5-13">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb5-14">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top places to visit in Sydney"</span>}</span>
<span id="cb5-15">    ]</span>
<span id="cb5-16">)</span>
<span id="cb5-17"></span>
<span id="cb5-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(message.content)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[ContentBlock(text="Here are some of the top places to visit in Sydney, Australia:\n\n1. Sydney Opera House - This iconic building is a UNESCO World Heritage site and a must-see attraction.\n\n2. Sydney Harbour Bridge - Take a walk across the bridge or participate in a guided climb for stunning views of the city and harbor.\n\n3. Bondi Beach - One of Australia's most famous beaches, known for its golden sand, surfing, and vibrant beach culture.\n\n4. The Rocks - A historic neighborhood with cobblestone streets, museums, galleries, and markets.\n\n5. Darling Harbour - A waterfront precinct with restaurants, shops, and attractions like the SEA LIFE Sydney Aquarium and the Australian National Maritime Museum.\n\n6. Royal Botanic Garden Sydney - A beautiful oasis in the heart of the city, with diverse plant collections and stunning harbor views.\n\n7. Taronga Zoo - Located on the shores of Sydney Harbour, this zoo is home to a wide variety of native Australian and exotic animals.\n\n8. Queen Victoria Building (QVB) - A historic shopping center with over 200 high-end stores, cafes, and restaurants.\n\n9. Manly Beach - Take a ferry from Circular Quay to Manly for a day of swimming, sunbathing, and exploring the charming beachside town.\n\n10. Blue Mountains National Park - Located just outside Sydney, this stunning park offers hiking trails, waterfalls, and the famous Three Sisters rock formation.", type='text')]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="34">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> display, HTML, Markdown</span></code></pre></div>
</div>
<div class="cell" data-execution_count="35">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">display(Markdown(message.content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>Here are some of the top places to visit in Sydney, Australia:</p>
<ol type="1">
<li><p>Sydney Opera House - This iconic building is a UNESCO World Heritage site and a must-see attraction.</p></li>
<li><p>Sydney Harbour Bridge - Take a walk across the bridge or participate in a guided climb for stunning views of the city and harbor.</p></li>
<li><p>Bondi Beach - One of Australia’s most famous beaches, known for its golden sand, surfing, and vibrant beach culture.</p></li>
<li><p>The Rocks - A historic neighborhood with cobblestone streets, museums, galleries, and markets.</p></li>
<li><p>Darling Harbour - A waterfront precinct with restaurants, shops, and attractions like the SEA LIFE Sydney Aquarium and the Australian National Maritime Museum.</p></li>
<li><p>Royal Botanic Garden Sydney - A beautiful oasis in the heart of the city, with diverse plant collections and stunning harbor views.</p></li>
<li><p>Taronga Zoo - Located on the shores of Sydney Harbour, this zoo is home to a wide variety of native Australian and exotic animals.</p></li>
<li><p>Queen Victoria Building (QVB) - A historic shopping center with over 200 high-end stores, cafes, and restaurants.</p></li>
<li><p>Manly Beach - Take a ferry from Circular Quay to Manly for a day of swimming, sunbathing, and exploring the charming beachside town.</p></li>
<li><p>Blue Mountains National Park - Located just outside Sydney, this stunning park offers hiking trails, waterfalls, and the famous Three Sisters rock formation.</p></li>
</ol>
</div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/anthropic-claude3-messages-api-python/messages_api_files/figure-html/c96efd9a-1-image.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image.png</figcaption>
</figure>
</div>
</section>
<section id="claude-3-sonnet" class="level1">
<h1>Claude 3 Sonnet</h1>
<div class="cell" data-execution_count="36">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.messages.create(</span>
<span id="cb9-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"claude-3-sonnet-20240229"</span>,</span>
<span id="cb9-3">    max_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb9-4">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>,</span>
<span id="cb9-5">    system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are an expert travel guide"</span>,</span>
<span id="cb9-6">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb9-7">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top places to visit in Sydney"</span>}</span>
<span id="cb9-8">    ]</span>
<span id="cb9-9">)</span>
<span id="cb9-10"></span>
<span id="cb9-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(message.content)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[ContentBlock(text="Here are some of the top places to visit in Sydney, Australia:\n\n1. Sydney Opera House: This iconic UNESCO World Heritage Site is a must-see with its distinctive sail-like design and excellent performances.\n\n2. Sydney Harbour Bridge: Climb to the top of this steel arch bridge for breathtaking views or just admire it from the ground.\n\n3. Bondi Beach: One of Australia's most famous beaches, known for its great surfing, coastal walk, and lively atmosphere.\n\n4. The Rocks: This historic district offers a glimpse into Sydney's past with its cobblestone streets, museums, galleries, and lively markets.\n\n5. Darling Harbour: A popular waterfront area with restaurants, shops, attractions like the SEA LIFE Sydney Aquarium and Chinese Garden of Friendship.\n\n6. Royal Botanic Garden: Sprawling gardens right next to the Sydney Opera House, perfect for a stroll or picnic.\n\n7. Taronga Zoo: This zoo set on shores of Sydney Harbour is home to Australian wildlife like kangaroos and koalas.\n\n8. Manly Beach: Catch a ferry across the harbor to this laid-back beach suburb with great surfing and scenic walks.\n\n9. Sydney Tower Eye: Get 360-degree panoramic views from the observation deck of this tall tower.\n\n10. The Grounds of Alexandria: A charming outdoor precinct with gardens, cafes, markets and more in an old industrial area.", type='text')]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="37">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">display(Markdown(message.content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>Here are some of the top places to visit in Sydney, Australia:</p>
<ol type="1">
<li><p>Sydney Opera House: This iconic UNESCO World Heritage Site is a must-see with its distinctive sail-like design and excellent performances.</p></li>
<li><p>Sydney Harbour Bridge: Climb to the top of this steel arch bridge for breathtaking views or just admire it from the ground.</p></li>
<li><p>Bondi Beach: One of Australia’s most famous beaches, known for its great surfing, coastal walk, and lively atmosphere.</p></li>
<li><p>The Rocks: This historic district offers a glimpse into Sydney’s past with its cobblestone streets, museums, galleries, and lively markets.</p></li>
<li><p>Darling Harbour: A popular waterfront area with restaurants, shops, attractions like the SEA LIFE Sydney Aquarium and Chinese Garden of Friendship.</p></li>
<li><p>Royal Botanic Garden: Sprawling gardens right next to the Sydney Opera House, perfect for a stroll or picnic.</p></li>
<li><p>Taronga Zoo: This zoo set on shores of Sydney Harbour is home to Australian wildlife like kangaroos and koalas.</p></li>
<li><p>Manly Beach: Catch a ferry across the harbor to this laid-back beach suburb with great surfing and scenic walks.</p></li>
<li><p>Sydney Tower Eye: Get 360-degree panoramic views from the observation deck of this tall tower.</p></li>
<li><p>The Grounds of Alexandria: A charming outdoor precinct with gardens, cafes, markets and more in an old industrial area.</p></li>
</ol>
</div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/anthropic-claude3-messages-api-python/messages_api_files/figure-html/16f6deb5-1-image.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image.png</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/anthropic-claude3-messages-api-python/messages_api_files/figure-html/7784b9a0-1-image.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image.png</figcaption>
</figure>
</div>
<p>https://www-cdn.anthropic.com/de8ba9b01c9ab7cbabf5c33b80b7bbc618857627/Model_Card_Claude_3.pdf</p>
</section>
<section id="messages-api-parameters" class="level1">
<h1>Messages API Parameters</h1>
<p>Create a Message - Send a list of input messages with text and/or image content in a specific format - The model will generate the next message in the conversation based on the input - The Messages API is suitable for single queries or multi-turn conversations without maintaining state</p>
<p>Required Body Parameters - <code>model</code>: A string specifying the AI model that will process your prompt - <code>messages</code>: An array of message objects representing the conversation history - <code>max_tokens</code>: An integer specifying the maximum number of tokens to generate in the response</p>
<p>Message Format - Each input message must have a <code>role</code> (either <code>"user"</code> or <code>"assistant"</code>) and <code>content</code> - You can send a single <code>"user"</code> message or multiple alternating <code>"user"</code> and <code>"assistant"</code> messages - The first message must always have the <code>"user"</code> role - If the last message has the <code>"assistant"</code> role, the model will continue directly from the content in that message</p>
<p>Content Format - Message <code>content</code> can be a simple string or an array of content blocks - Each content block must have a <code>type</code> (e.g., <code>"text"</code> or <code>"image"</code>) - Using a string for <code>content</code> is the same as using an array with one <code>"text"</code> content block</p>
<p>Examples Single <code>"user"</code> message:</p>
<pre><code>[{"role": "user", "content": "What are the top 5 must-visit places in Sydney, Australia?"}]</code></pre>
<p>Multiple conversation turns:</p>
<pre><code>[
  {"role": "user", "content": "I'm planning a trip to Sydney. What should I see there?"},
  {"role": "assistant", "content": "Some top attractions in Sydney include the Opera House, Bondi Beach, Harbor Bridge, Taronga Zoo, and the Royal Botanic Garden. What kind of activities interest you?"},
  {"role": "user", "content": "I love outdoor activities and beautiful views. Any recommendations?"}
]</code></pre>
<p>Partially-filled response:</p>
<pre><code>[
  {"role": "user", "content": "What's the best way to see the Sydney Opera House?"},
  {"role": "assistant", "content": "To get the most out of your visit to the Sydney Opera House, I recommend"}
]</code></pre>
<p>Image content (supported in Claude 3 models and above):</p>
<pre><code>{"role": "user", "content": [
  {
    "type": "image", 
    "source": {
      "type": "base64",
      "media_type": "image/jpeg",
      "data": "/9j/4AAQSkZJRg..."
    }
  },
  {"type": "text", "text": "Can you identify this famous Sydney landmark in the image?"}
]}</code></pre>
</section>
<section id="max_tokens" class="level1">
<h1>max_tokens</h1>
<div class="cell" data-execution_count="38">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.messages.create(</span>
<span id="cb16-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"claude-3-sonnet-20240229"</span>,</span>
<span id="cb16-3">    max_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb16-4">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>,</span>
<span id="cb16-5">    system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are an expert travel guide"</span>,</span>
<span id="cb16-6">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb16-7">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top resources to learn python"</span>}</span>
<span id="cb16-8">    ]</span>
<span id="cb16-9">)</span>
<span id="cb16-10"></span>
<span id="cb16-11">display(Markdown(message.content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>Here are some of the top resources to learn Python:</p>
<ol type="1">
<li><p><strong>Official Python Documentation</strong>: The official Python documentation (https://docs.python.org/) is a comprehensive resource that covers everything from the basics to advanced topics. It’s a great reference for learning the language and its standard library.</p></li>
<li><p><strong>Python for Everybody</strong> (Coursera): This is a free online course offered by the University of Michigan on Coursera. It’s designed for beginners and covers the</p></li>
</ol>
</div>
</div>
</section>
<section id="stop_sequences" class="level1">
<h1>stop_sequences</h1>
<div class="cell" data-execution_count="39">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.messages.create(</span>
<span id="cb17-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"claude-3-sonnet-20240229"</span>,</span>
<span id="cb17-3">    max_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb17-4">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>,</span>
<span id="cb17-5">    system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are an expert travel guide"</span>,</span>
<span id="cb17-6">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb17-7">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top 10 places to visit in Sydney"</span>}</span>
<span id="cb17-8">    ],</span>
<span id="cb17-9">    stop_sequences<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5."</span>]</span>
<span id="cb17-10">)</span>
<span id="cb17-11"></span>
<span id="cb17-12">display(Markdown(message.content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>Here are the top 10 places to visit in Sydney, Australia:</p>
<ol type="1">
<li><p>Sydney Opera House - This iconic UNESCO World Heritage Site is a must-see with its distinctive sail-like design and excellent performances.</p></li>
<li><p>Sydney Harbour Bridge - Climb to the top of this steel arch bridge for breathtaking views or just admire it from the ground.</p></li>
<li><p>Bondi Beach - One of Australia’s most famous beaches, known for its great surfing, coastal walk, and lively atmosphere.</p></li>
<li><p>The Rocks - This historic district offers a glimpse into Sydney’s past with its cobblestone streets, museums, galleries, and lively markets.</p></li>
</ol>
</div>
</div>
</section>
<section id="temperature" class="level1">
<h1>temperature</h1>
<ul>
<li><p>Amount of randomness injected into the response.</p></li>
<li><p>Defaults to 1.0. Ranges from 0.0 to 1.0. Use temperature closer to 0.0 for analytical / multiple choice, and closer to 1.0 for creative and generative tasks.</p></li>
<li><p>Note that even with temperature of 0.0, the results will not be fully deterministic.</p></li>
</ul>
<div class="cell" data-execution_count="40">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.messages.create(</span>
<span id="cb18-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"claude-3-opus-20240229"</span>,</span>
<span id="cb18-3">    max_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb18-4">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>,</span>
<span id="cb18-5">    system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are an expert python programmer"</span>,</span>
<span id="cb18-6">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb18-7">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top 10 places to visit in Sydney with marketing slogan for each place"</span>}</span>
<span id="cb18-8">    ],</span>
<span id="cb18-9">)</span>
<span id="cb18-10"></span>
<span id="cb18-11">display(Markdown(message.content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>Here are the top 10 places to visit in Sydney, along with a marketing slogan for each place:</p>
<ol type="1">
<li><p>Sydney Opera House Slogan: “Experience the iconic symbol of Australia’s cultural heart.”</p></li>
<li><p>Sydney Harbour Bridge Slogan: “Climb to the top for breathtaking views and unforgettable memories.”</p></li>
<li><p>Bondi Beach Slogan: “Dive into the quintessential Aussie beach lifestyle at Bondi.”</p></li>
<li><p>Taronga Zoo Slogan: “Discover the wonders of Australian wildlife with a view like no other.”</p></li>
<li><p>The Rocks Slogan: “Step back in time and explore the birthplace of modern Sydney.”</p></li>
<li><p>Royal Botanic Garden Slogan: “Immerse yourself in a lush oasis in the heart of the city.”</p></li>
<li><p>Darling Harbour Slogan: “Indulge in a vibrant waterfront playground for all ages.”</p></li>
<li><p>Blue Mountains National Park Slogan: “Escape to a world of natural beauty and adventure, just a stone’s throw from Sydney.”</p></li>
<li><p>Manly Beach Slogan: “Ride the waves and soak up the laid-back charm of this iconic seaside suburb.”</p></li>
<li><p>Sydney Tower Eye Slogan: “Elevate your Sydney experience with 360-degree views from the city’s highest point.”</p></li>
</ol>
</div>
</div>
<div class="cell" data-execution_count="41">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.messages.create(</span>
<span id="cb19-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"claude-3-opus-20240229"</span>,</span>
<span id="cb19-3">    max_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb19-4">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>,</span>
<span id="cb19-5">    system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are an expert travel guide"</span>,</span>
<span id="cb19-6">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb19-7">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top 10 places to visit in Sydney with marketing slogan for each place"</span>}</span>
<span id="cb19-8">    ],</span>
<span id="cb19-9">)</span>
<span id="cb19-10"></span>
<span id="cb19-11">display(Markdown(message.content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>Here are the top 10 places to visit in Sydney, along with a marketing slogan for each:</p>
<ol type="1">
<li><p>Sydney Opera House Slogan: “Experience the heart of Sydney’s cultural scene”</p></li>
<li><p>Sydney Harbour Bridge Slogan: “Climb to the top for unforgettable views”</p></li>
<li><p>Bondi Beach Slogan: “Surf, sun, and sand: The ultimate Aussie beach experience”</p></li>
<li><p>Taronga Zoo Slogan: “Discover Australia’s unique wildlife with a view”</p></li>
<li><p>The Rocks Slogan: “Step back in time and explore Sydney’s historic heart”</p></li>
<li><p>Royal Botanic Garden Slogan: “Escape to an oasis of tranquility in the city”</p></li>
<li><p>Darling Harbour Slogan: “Entertainment, dining, and fun for the whole family”</p></li>
<li><p>Blue Mountains National Park Slogan: “Immerse yourself in nature’s breathtaking beauty”</p></li>
<li><p>Sydney Tower Eye Slogan: “See Sydney from a new perspective”</p></li>
<li><p>Manly Beach Slogan: “Take a ferry ride to paradise”</p></li>
</ol>
<p>These slogans highlight the unique features and experiences each location offers, enticing visitors to explore and enjoy the best of Sydney.</p>
</div>
</div>
</section>
<section id="top_p" class="level1">
<h1>top_p</h1>
<p>Use nucleus sampling.</p>
<p>In nucleus sampling, we compute the cumulative distribution over all the options for each subsequent token in decreasing probability order and cut it off once it reaches a particular probability specified by top_p.&nbsp;You should either alter temperature or top_p, but not both.</p>
<p>Recommended for advanced use cases only. You usually only need to use temperature.</p>
<div class="cell" data-execution_count="42">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.messages.create(</span>
<span id="cb20-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"claude-3-opus-20240229"</span>,</span>
<span id="cb20-3">    max_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb20-4">    top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb20-5">    system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are an expert travel guide"</span>,</span>
<span id="cb20-6">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb20-7">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top 10 places to visit in Sydney with marketing slogan for each place"</span>}</span>
<span id="cb20-8">    ],</span>
<span id="cb20-9">)</span>
<span id="cb20-10"></span>
<span id="cb20-11">display(Markdown(message.content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>Here are the top 10 places to visit in Sydney, along with a marketing slogan for each:</p>
<ol type="1">
<li><p>Sydney Opera House Slogan: “Experience the iconic symbol of Australia’s cultural heart”</p></li>
<li><p>Sydney Harbour Bridge Slogan: “Climb to the top for unforgettable views of the city”</p></li>
<li><p>Bondi Beach Slogan: “Soak up the sun, surf, and laid-back lifestyle at Australia’s most famous beach”</p></li>
<li><p>The Rocks Slogan: “Discover Sydney’s historic heart and vibrant entertainment precinct”</p></li>
<li><p>Taronga Zoo Slogan: “Get up close with Australia’s unique wildlife in a stunning harbourside setting”</p></li>
<li><p>Royal Botanic Garden Slogan: “Immerse yourself in a lush oasis in the heart of the city”</p></li>
<li><p>Darling Harbour Slogan: “Indulge in waterfront dining, entertainment, and family fun”</p></li>
<li><p>Blue Mountains National Park Slogan: “Escape to a world of natural wonders and breathtaking landscapes”</p></li>
<li><p>Manly Beach Slogan: “Ride the ferry to Sydney’s premier seaside destination”</p></li>
<li><p>Queen Victoria Building (QVB) Slogan: “Shop in style at Sydney’s most elegant and historic shopping arcade”</p></li>
</ol>
</div>
</div>
<div class="cell" data-execution_count="43">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.messages.create(</span>
<span id="cb21-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"claude-3-opus-20240229"</span>,</span>
<span id="cb21-3">    max_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb21-4">    top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>,</span>
<span id="cb21-5">    system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are an expert travel guide"</span>,</span>
<span id="cb21-6">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb21-7">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top 10 places to visit in Sydney with marketing slogan for each place"</span>}</span>
<span id="cb21-8">    ],</span>
<span id="cb21-9">)</span>
<span id="cb21-10"></span>
<span id="cb21-11">display(Markdown(message.content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>Here are the top 10 places to visit in Sydney, along with a marketing slogan for each place:</p>
<ol type="1">
<li><p>Sydney Opera House - “Experience the iconic masterpiece that defines Sydney’s skyline.”</p></li>
<li><p>Sydney Harbour Bridge - “Climb to the top and witness the city from a breathtaking perspective.”</p></li>
<li><p>Bondi Beach - “Dive into the heart of Sydney’s beach culture and soak up the sun.”</p></li>
<li><p>The Rocks - “Step back in time and explore the birthplace of modern Sydney.”</p></li>
<li><p>Royal Botanic Garden Sydney - “Immerse yourself in a lush oasis in the heart of the city.”</p></li>
<li><p>Taronga Zoo Sydney - “Embark on a wildlife adventure with stunning harbor views.”</p></li>
<li><p>Darling Harbour - “Indulge in a waterfront paradise of entertainment, dining, and leisure.”</p></li>
<li><p>Sydney Tower Eye - “Elevate your senses and take in the city’s panoramic views from above.”</p></li>
<li><p>Manly Beach - “Escape to a coastal getaway just a ferry ride away from the city center.”</p></li>
<li><p>Museum of Contemporary Art Australia - “Discover the cutting edge of Australian and international art in a historic setting.”</p></li>
</ol>
</div>
</div>
</section>
<section id="top_k" class="level1">
<h1>top_k</h1>
<p>Only sample from the top K options for each subsequent token.</p>
<p>Used to remove “long tail” low probability responses.</p>
<p>Recommended for advanced use cases only. You usually only need to use temperature.</p>
<div class="cell" data-execution_count="44">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.messages.create(</span>
<span id="cb22-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"claude-3-opus-20240229"</span>,</span>
<span id="cb22-3">    max_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb22-4">    top_k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb22-5">    system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are an expert travel guide"</span>,</span>
<span id="cb22-6">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb22-7">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top 10 places to visit in Sydney with marketing slogan for each place"</span>}</span>
<span id="cb22-8">    ],</span>
<span id="cb22-9">)</span>
<span id="cb22-10"></span>
<span id="cb22-11">display(Markdown(message.content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>Here are the top 10 places to visit in Sydney, along with a marketing slogan for each place:</p>
<ol type="1">
<li><p>Sydney Opera House Slogan: “Experience the iconic symbol of Australia’s cultural heart”</p></li>
<li><p>Sydney Harbour Bridge Slogan: “Climb to the top for breathtaking views of the city”</p></li>
<li><p>Bondi Beach Slogan: “Surf, sun, and sand: the ultimate Aussie beach experience”</p></li>
<li><p>Taronga Zoo Slogan: “Discover the wonders of Australian wildlife with a view”</p></li>
<li><p>The Rocks Slogan: “Step back in time and explore Sydney’s historic heart”</p></li>
<li><p>Royal Botanic Garden Slogan: “Immerse yourself in a green oasis in the heart of the city”</p></li>
<li><p>Darling Harbour Slogan: “Dine, shop, and play at Sydney’s vibrant waterfront precinct”</p></li>
<li><p>Museum of Contemporary Art Australia Slogan: “Ignite your creativity at Sydney’s cutting-edge art museum”</p></li>
<li><p>Manly Beach Slogan: “Escape the city and embrace the laid-back beach lifestyle”</p></li>
<li><p>Blue Mountains National Park Slogan: “Adventure awaits in the rugged beauty of the Blue Mountains”</p></li>
</ol>
</div>
</div>
<div class="cell" data-execution_count="45">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.messages.create(</span>
<span id="cb23-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"claude-3-opus-20240229"</span>,</span>
<span id="cb23-3">    max_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb23-4">    top_k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>,</span>
<span id="cb23-5">    system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are an expert travel guide"</span>,</span>
<span id="cb23-6">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb23-7">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top 10 places to visit in Sydney with marketing slogan for each place"</span>}</span>
<span id="cb23-8">    ],</span>
<span id="cb23-9">)</span>
<span id="cb23-10"></span>
<span id="cb23-11">display(Markdown(message.content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>Here are the top 10 places to visit in Sydney, along with a marketing slogan for each place:</p>
<ol type="1">
<li><p>Sydney Opera House - “Experience the harmony of architecture and the arts.”</p></li>
<li><p>Sydney Harbour Bridge - “Climb to the top for unforgettable views.”</p></li>
<li><p>Bondi Beach - “Surf, sun, and sand: the ultimate Aussie beach experience.”</p></li>
<li><p>Taronga Zoo - “Discover the wonders of wildlife with a view like no other.”</p></li>
<li><p>The Rocks - “Step back in time and explore Sydney’s historic heart.”</p></li>
<li><p>Darling Harbour - “Entertainment, dining, and adventure all in one place.”</p></li>
<li><p>Royal Botanic Garden - “Immerse yourself in the beauty of nature in the city’s oasis.”</p></li>
<li><p>Sydney Tower Eye - “Reach new heights and see Sydney from a different perspective.”</p></li>
<li><p>Manly Beach - “Escape the city and embrace the laid-back beach lifestyle.”</p></li>
<li><p>Blue Mountains National Park - “Explore the rugged beauty of the great outdoors, just a stone’s throw from the city.”</p></li>
</ol>
</div>
</div>
</section>
<section id="putting-it-all-together" class="level1">
<h1>Putting it all together</h1>
<div class="cell" data-execution_count="46">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.messages.create(</span>
<span id="cb24-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"claude-3-opus-20240229"</span>,</span>
<span id="cb24-3">    max_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb24-4">    top_k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,</span>
<span id="cb24-5">    top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>,</span>
<span id="cb24-6">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb24-7">    system<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are an expert travel guide"</span>,</span>
<span id="cb24-8">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb24-9">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top 10 places to visit in Sydney with marketing slogan for each place"</span>}</span>
<span id="cb24-10">    ],</span>
<span id="cb24-11">)</span>
<span id="cb24-12"></span>
<span id="cb24-13">display(Markdown(message.content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text))</span></code></pre></div>
<div class="cell-output cell-output-display">
<ol type="1">
<li><p>Sydney Opera House - “Experience the iconic wonder of architecture and the arts”</p></li>
<li><p>Bondi Beach - “Soak up the sun, surf, and style at Australia’s most famous beach”</p></li>
<li><p>Sydney Harbour Bridge - “Climb to the top for unforgettable views of the city and beyond”</p></li>
<li><p>The Rocks - “Discover the historic heart of Sydney, where the past meets the present”</p></li>
<li><p>Taronga Zoo - “Embark on a wildlife adventure with breathtaking harbour views”</p></li>
<li><p>Royal Botanic Garden - “Immerse yourself in a lush oasis in the heart of the city”</p></li>
<li><p>Darling Harbour - “Indulge in waterfront dining, entertainment, and family fun”</p></li>
<li><p>Blue Mountains - “Escape to a world of natural wonders, just a stone’s throw from the city”</p></li>
<li><p>Manly Beach - “Ride the ferry to paradise and experience the laid-back coastal lifestyle”</p></li>
<li><p>Sydney Tower Eye - “Elevate your perspective and see the city from new heights”</p></li>
</ol>
</div>
</div>



</section>

<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>llm</category>
  <category>claude3</category>
  <category>messages-api</category>
  <guid>https://arunprakash.ai/posts/anthropic-claude3-messages-api-python/messages_api.html</guid>
  <pubDate>Thu, 21 Mar 2024 14:00:00 GMT</pubDate>
  <media:content url="https://arunprakash.ai/posts/anthropic-claude3-messages-api-python/messages_api.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>crewAI: Simulating a Classroom with CrewAI Agents</title>
  <dc:creator>Arun Prakash</dc:creator>
  <link>https://arunprakash.ai/posts/ai-assistants-crewai/classroom_crew.html</link>
  <description><![CDATA[ 




<p>I’ve developed several AI Assistants using OpenAI’s API. In one project, I created an assistant that sifts through my social media and a few other websites, capturing screenshots, analyzing content, and preparing personalized news. Every morning, it sends me a voice message and a report on Telegram. In another project, I built a personalized travel planner. This assistant, upon receiving a city I plan to visit, checks its weather, creates a color-coded map, devises a personalized itinerary with an optimized travel path, and compiles a travel guide complete with cultural insights.</p>
<p>A recurring challenge in these projects was that a single assistant couldn’t handle all the tasks. I had to design specialized assistants: one excelled at creating Word documents, another was adept at recommending places, and so on.</p>
<p>Upon exploring the Crew Library, I realized that it enables the creation of multiple agents, each with specialized skills, roles, and tools. Importantly, these agents can share a common memory, allowing each to be aware of the others’ actions and progress.</p>
<p>In this blog post, let’s construct an AI Assistant/Agent to simulate a classroom setting. One agent will act as a teacher, instructing on a topic, while other agents will play the role of students, asking questions. The teacher agent will then incorporate these questions to make the class more engaging and interactive.</p>
<p><strong>Introduction:</strong> The realm of AI development is constantly evolving, offering innovative ways to utilize technology in everyday tasks. In a recent project, we explored the capabilities of the Crew Library, a powerful tool for creating multiple AI agents, each with specialized skills. This article delves into a fascinating application of the Crew Library: simulating a classroom environment with AI agents.</p>
<p><strong>Project Overview:</strong> The project aimed to simulate a classroom setting with AI agents acting as a teacher and students. Using the Crew Library, we developed a teacher agent specialized in deep learning and multiple student agents at different comprehension levels: beginner, intermediate, and advanced. This setup allowed for an interactive and engaging educational experience, mimicking a real classroom.</p>
<p><strong>Implementation:</strong> 1. <strong>Agent Creation:</strong> We began by creating a teacher agent with a role as a deep learning instructor, equipped with goals, a backstory, and the ability to search the internet. The teacher’s primary goal was to teach deep learning to a diverse group of students. Similarly, student agents were created, each with their own goals and backstories corresponding to their understanding levels.</p>
<ol start="2" type="1">
<li><p><strong>Tasks and Classroom Crew:</strong> We defined tasks for each agent. The student agents were tasked with asking questions based on their understanding levels, while the teacher agent’s task was to incorporate these questions into a more comprehensive teaching script. We then integrated these agents and tasks into a ‘classroom crew’ using the Crew Library, enabling sequential processing of tasks.</p></li>
<li><p><strong>Execution and Results:</strong> The classroom simulation was executed, where initially the teacher taught a topic in deep learning. Then, student agents asked questions according to their levels, which the teacher later integrated into a revised teaching script. The Crew Library’s sequential task processing allowed for a smooth flow of the classroom simulation.</p></li>
<li><p><strong>Display and Analysis:</strong> We utilized IPython’s display and markdown features to present the results. The final output showcased the teacher’s initial lecture, the students’ questions, and the final, enriched teaching script that included answers to these questions.</p></li>
</ol>
<p><strong>Conclusion:</strong> This project demonstrated the versatility and potential of the Crew Library in creating interactive and dynamic AI-driven environments. The successful simulation of a classroom setting not only underscores the importance of specialized AI agents in handling diverse tasks but also opens up new possibilities for AI-assisted learning and other applications.</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dotenv <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dotenv</span>
<span id="cb1-4">load_dotenv()</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> openai</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> openai <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> OpenAI</span>
<span id="cb1-7">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OpenAI()</span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># openai key</span></span>
<span id="cb1-9">OPENAI_API_KEY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OPENAI_API_KEY"</span>)</span>
<span id="cb1-10">client.api_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OPENAI_API_KEY</span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install git+https://github.com/joaomdmoura/crewAI.git</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install openai --upgrade</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install crewai --upgrade</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install duckduckgo-search</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain.tools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DuckDuckGoSearchRun</span>
<span id="cb5-2">search_tool <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DuckDuckGoSearchRun()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb6-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> crewai <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Agent, Task, Crew, Process</span>
<span id="cb6-3"></span>
<span id="cb6-4">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OPENAI_API_KEY"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OPENAI_API_KEY</span></code></pre></div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install -U langchain-openai</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> langchain_openai.chat_models <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ChatOpenAI</span></code></pre></div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"></span>
<span id="cb9-2">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ChatOpenAI(model_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-turbo-preview"</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">topic <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Deep Learning"</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"></span>
<span id="cb11-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a classroom with a teacher and 5 students</span></span>
<span id="cb11-3">teacher <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Agent(</span>
<span id="cb11-4">    role<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Teacher'</span>,</span>
<span id="cb11-5">    goal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Teach </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> to a diverse group of students'</span>,</span>
<span id="cb11-6">    backstory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"""You are an experienced teacher specializing in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb11-7"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    Your goal is to impart knowledge to a class with varying levels of understanding.</span></span>
<span id="cb11-8"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    You enjoy challenges and strive to make complex concepts accessible.You answer students' questions and provide feedback on their understanding."""</span>,</span>
<span id="cb11-9">    verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb11-10">    allow_delegation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb11-11">    tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[search_tool],</span>
<span id="cb11-12">    llm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model</span>
<span id="cb11-13">)</span>
<span id="cb11-14"></span>
<span id="cb11-15">advanced_student1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Agent(</span>
<span id="cb11-16">    role<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Advanced Level Student'</span>,</span>
<span id="cb11-17">    goal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Understand advanced concepts in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb11-18">    backstory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""You are an advanced level student who excels in grasping complex</span></span>
<span id="cb11-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    scientific principles. You enjoy pushing the boundaries of your understanding and</span></span>
<span id="cb11-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    asking challenging questions."""</span>,</span>
<span id="cb11-21">    verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb11-22">    allow_delegation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb11-23">    tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># No specific tools for now</span></span>
<span id="cb11-24">    llm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model</span>
<span id="cb11-25">)</span>
<span id="cb11-26"></span>
<span id="cb11-27">advanced_student2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Agent(</span>
<span id="cb11-28">    role<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Advanced Level Student'</span>,</span>
<span id="cb11-29">    goal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Understand advanced concepts in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb11-30">    backstory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"""You are another advanced level student who has a keen interest</span></span>
<span id="cb11-31"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    in the intricate details of </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">. You aim to explore the subject</span></span>
<span id="cb11-32"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    at an advanced level and may pose challenging questions."""</span>,</span>
<span id="cb11-33">    verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb11-34">    allow_delegation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb11-35">    tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[],</span>
<span id="cb11-36">    llm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model</span>
<span id="cb11-37">)</span>
<span id="cb11-38"></span>
<span id="cb11-39">intermediate_student1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Agent(</span>
<span id="cb11-40">    role<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Intermediate Level Student'</span>,</span>
<span id="cb11-41">    goal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Grasp fundamental concepts in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb11-42">    backstory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"""You are an intermediate level student with a good understanding of basic</span></span>
<span id="cb11-43"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> principles. Your goal is to </span></span>
<span id="cb11-44"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    ask questions that clarify fundamental concepts."""</span>,</span>
<span id="cb11-45">    verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb11-46">    allow_delegation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb11-47">    tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[],</span>
<span id="cb11-48">    llm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model</span>
<span id="cb11-49">)</span>
<span id="cb11-50"></span>
<span id="cb11-51">intermediate_student2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Agent(</span>
<span id="cb11-52">    role<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Intermediate Level Student'</span>,</span>
<span id="cb11-53">    goal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Grasp fundamental concepts in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb11-54">    backstory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"""You are another intermediate level student aiming to ask questions to strengthen your grasp</span></span>
<span id="cb11-55"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    on fundamental </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> concepts. """</span>,</span>
<span id="cb11-56">    verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb11-57">    allow_delegation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb11-58">    tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[],</span>
<span id="cb11-59">    llm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model</span>
<span id="cb11-60">)</span>
<span id="cb11-61"></span>
<span id="cb11-62">beginner_student <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Agent(</span>
<span id="cb11-63">    role<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Beginner Level Student'</span>,</span>
<span id="cb11-64">    goal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Understand basic concepts in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb11-65">    backstory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""You are a beginner student who is working hard to understand</span></span>
<span id="cb11-66"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    the basic principles of </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{topic}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">. Your questions may be more basic,</span></span>
<span id="cb11-67"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    focusing on fundamental concepts."""</span>,</span>
<span id="cb11-68">    verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb11-69">    allow_delegation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb11-70">    tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[],</span>
<span id="cb11-71">    llm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model</span>
<span id="cb11-72">)</span>
<span id="cb11-73"></span>
<span id="cb11-74"></span>
<span id="cb11-75"></span>
<span id="cb11-76"></span></code></pre></div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create tasks for the students to ask questions</span></span>
<span id="cb12-2">question1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Task(</span>
<span id="cb12-3">    description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Ask a challenging question related to advanced </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">. Use the content taught by the teacher to frame your question. Your question can be independent to other students question"</span>,</span>
<span id="cb12-4">    agent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>advanced_student1)</span>
<span id="cb12-5"></span>
<span id="cb12-6">question2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Task(</span>
<span id="cb12-7">    description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Ask a challenging question related to advanced </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Use the content taught by the teacher to frame your question. Your question can be independent to other students question"</span>,</span>
<span id="cb12-8">    agent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>advanced_student2</span>
<span id="cb12-9">)</span>
<span id="cb12-10"></span>
<span id="cb12-11">question3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Task(</span>
<span id="cb12-12">    description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Ask an average level question related to fundamental </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Use the content taught by the teacher to frame your question. Your question can be independent to other students question"</span>,</span>
<span id="cb12-13">    agent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>intermediate_student1</span>
<span id="cb12-14">)</span>
<span id="cb12-15"></span>
<span id="cb12-16">question4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Task(</span>
<span id="cb12-17">    description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Ask an average level question related to fundamental </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Use the content taught by the teacher to frame your question. Your question can be independent to other students question"</span>,</span>
<span id="cb12-18">    agent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>intermediate_student2</span>
<span id="cb12-19">)</span>
<span id="cb12-20"></span>
<span id="cb12-21">question5 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Task(</span>
<span id="cb12-22">    description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Ask a basic question related to fundamental </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Use the content taught by the teacher to frame your question. Your question can be independent to other students question"</span>,</span>
<span id="cb12-23">    agent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>beginner_student</span>
<span id="cb12-24">)</span>
<span id="cb12-25"></span>
<span id="cb12-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a task for the teacher to answer questions</span></span>
<span id="cb12-27">teach1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Task(</span>
<span id="cb12-28">    description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Write your teaching script for the class. Your main goal is to teach </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">. write 1000-1200 words"</span>,</span>
<span id="cb12-29">    agent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>teacher</span>
<span id="cb12-30">)</span>
<span id="cb12-31"></span>
<span id="cb12-32">teach2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Task(</span>
<span id="cb12-33">    description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Now re-write your teaching script based on your earlier script, incorporate the questions asked by the students, and include your answer in your script for maximum engagment.Your main goal is to write the script for the topic </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, we are just including students relevant question to the topic along with answers for better understanding of the topic. So stick with the topic </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>topic<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb12-34">    agent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>teacher</span>
<span id="cb12-35">)</span>
<span id="cb12-36"></span></code></pre></div>
</div>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Instantiate the crew with a sequential process</span></span>
<span id="cb13-2">classroom_crew <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Crew(</span>
<span id="cb13-3">    agents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[teacher, advanced_student1, advanced_student2, intermediate_student1, intermediate_student2, beginner_student],</span>
<span id="cb13-4">    tasks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[teach1, question1, question2, question3, question4, question5, teach2],</span>
<span id="cb13-5">    verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb13-6">    process<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Process.sequential,</span>
<span id="cb13-7">    </span>
<span id="cb13-8">)</span>
<span id="cb13-9"></span>
<span id="cb13-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start the class!</span></span>
<span id="cb13-11">classroom_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> classroom_crew.kickoff()</span>
<span id="cb13-12"></span>
<span id="cb13-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"######################"</span>)</span>
<span id="cb13-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(classroom_result)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
[DEBUG]: Working Agent: Deep Learning Teacher

[INFO]: Starting Task: Write your teaching script for the class. Your main goal is to teach Deep Learning. write 1000-1200 words


&gt; Entering new CrewAgentExecutor chain...
**Introduction to Deep Learning**

Welcome, everyone. As we embark on this journey together into the world of deep learning, I want you to remember one thing: deep learning is not just a set of algorithms or an accumulation of complex mathematical formulas; it is a way to give machines a semblance of understanding, akin to the way we, humans, perceive the world.

**Understanding the Basics**

Deep learning is a subset of machine learning, which in turn falls under the broader umbrella of artificial intelligence (AI). The key idea behind deep learning is to mimic the way the human brain processes information. This is achieved through structures called artificial neural networks, which are inspired by the biological neural networks in our brains.

At its core, a neural network consists of layers of nodes, or "neurons," each of which performs simple computations. When these neurons are interconnected and layered, they can process complex data, learn patterns, and make predictions or decisions based on input data.

**Why Deep Learning?**

The "deep" in deep learning refers to the use of multiple layers in neural networks. This depth allows the model to learn hierarchical representations of data. In simpler terms, deep learning models can learn from raw data by building increasingly sophisticated features through its layers. This capability has revolutionized fields such as image and speech recognition, natural language processing, and even autonomous driving.

**Key Components of Deep Learning**

1. **Data**: Deep learning models require large amounts of data to learn effectively. This data serves as the foundation upon which these models build their understanding.

2. **Neural Networks**: At the heart of deep learning are neural networks, which are designed to mimic the way human brains operate. These networks consist of input layers, hidden layers, and output layers.

3. **Activation Functions**: Activation functions help decide whether a neuron should be activated or not. They introduce non-linearity into the network, enabling it to learn complex patterns.

4. **Backpropagation and Gradient Descent**: These are algorithms used for training neural networks. Backpropagation helps in adjusting the weights of the network based on the error rate, while gradient descent is a way to minimize the error by iteratively moving towards the minimum of a loss function.

**Challenges and Solutions**

Deep learning, while powerful, comes with its set of challenges. Overfitting, where a model learns the noise in the training data instead of the actual pattern, can lead to poor performance on unseen data. Techniques such as dropout, regularization, and data augmentation are used to combat this.

Another challenge is the requirement for large amounts of labeled data and computational resources. Transfer learning and unsupervised learning are some of the strategies used to address these issues.

**Ethics and Future Perspectives**

As we develop increasingly capable deep learning models, ethical considerations become paramount. Issues such as bias in AI, privacy concerns, and the impact on employment need careful consideration and proactive measures.

Looking ahead, the future of deep learning is incredibly promising. From enhancing medical diagnoses to improving environmental protection efforts, the potential applications are vast and impactful. However, achieving these outcomes requires not just technical skills, but also a thoughtful approach to the ethical implications of our work.

**Conclusion**

In this class, we will dive deeper into each of these topics, unraveling the complexities and uncovering the potentials of deep learning. Through lectures, hands-on projects, and discussions, you will gain a comprehensive understanding of deep learning and how it can be applied to solve real-world problems.

Remember, the field of deep learning is evolving rapidly, and continuous learning is key. Stay curious, be open to making mistakes, and learn from them. Together, we will explore the fascinating world of deep learning, and I am here to guide you every step of the way.

Your journey into deep learning starts now. Embrace the challenges, and let's make the most of this opportunity to learn and grow together. Welcome aboard!Invalid Format: Missing 'Action:' after 'Thought:Do I need to use a tool? No
Final Answer: **Introduction to Deep Learning**

Welcome, everyone. As we embark on this journey together into the world of deep learning, I want you to remember one thing: deep learning is not just a set of algorithms or an accumulation of complex mathematical formulas; it is a way to give machines a semblance of understanding, akin to the way we, humans, perceive the world.

**Understanding the Basics**

Deep learning is a subset of machine learning, which in turn falls under the broader umbrella of artificial intelligence (AI). The key idea behind deep learning is to mimic the way the human brain processes information. This is achieved through structures called artificial neural networks, which are inspired by the biological neural networks in our brains.

At its core, a neural network consists of layers of nodes, or "neurons," each of which performs simple computations. When these neurons are interconnected and layered, they can process complex data, learn patterns, and make predictions or decisions based on input data.

**Why Deep Learning?**

The "deep" in deep learning refers to the use of multiple layers in neural networks. This depth allows the model to learn hierarchical representations of data. In simpler terms, deep learning models can learn from raw data by building increasingly sophisticated features through its layers. This capability has revolutionized fields such as image and speech recognition, natural language processing, and even autonomous driving.

**Key Components of Deep Learning**

1. **Data**: Deep learning models require large amounts of data to learn effectively. This data serves as the foundation upon which these models build their understanding.

2. **Neural Networks**: At the heart of deep learning are neural networks, which are designed to mimic the way human brains operate. These networks consist of input layers, hidden layers, and output layers.

3. **Activation Functions**: Activation functions help decide whether a neuron should be activated or not. They introduce non-linearity into the network, enabling it to learn complex patterns.

4. **Backpropagation and Gradient Descent**: These are algorithms used for training neural networks. Backpropagation helps in adjusting the weights of the network based on the error rate, while gradient descent is a way to minimize the error by iteratively moving towards the minimum of a loss function.

**Challenges and Solutions**

Deep learning, while powerful, comes with its set of challenges. Overfitting, where a model learns the noise in the training data instead of the actual pattern, can lead to poor performance on unseen data. Techniques such as dropout, regularization, and data augmentation are used to combat this.

Another challenge is the requirement for large amounts of labeled data and computational resources. Transfer learning and unsupervised learning are some of the strategies used to address these issues.

**Ethics and Future Perspectives**

As we develop increasingly capable deep learning models, ethical considerations become paramount. Issues such as bias in AI, privacy concerns, and the impact on employment need careful consideration and proactive measures.

Looking ahead, the future of deep learning is incredibly promising. From enhancing medical diagnoses to improving environmental protection efforts, the potential applications are vast and impactful. However, achieving these outcomes requires not just technical skills, but also a thoughtful approach to the ethical implications of our work.

**Conclusion**

In this class, we will dive deeper into each of these topics, unraveling the complexities and uncovering the potentials of deep learning. Through lectures, hands-on projects, and discussions, you will gain a comprehensive understanding of deep learning and how it can be applied to solve real-world problems.

Remember, the field of deep learning is evolving rapidly, and continuous learning is key. Stay curious, be open to making mistakes, and learn from them. Together, we will explore the fascinating world of deep learning, and I am here to guide you every step of the way.

Your journey into deep learning starts now. Embrace the challenges, and let's make the most of this opportunity to learn and grow together. Welcome aboard!

&gt; Finished chain.

[DEBUG]: [Deep Learning Teacher] Task output: **Introduction to Deep Learning**

Welcome, everyone. As we embark on this journey together into the world of deep learning, I want you to remember one thing: deep learning is not just a set of algorithms or an accumulation of complex mathematical formulas; it is a way to give machines a semblance of understanding, akin to the way we, humans, perceive the world.

**Understanding the Basics**

Deep learning is a subset of machine learning, which in turn falls under the broader umbrella of artificial intelligence (AI). The key idea behind deep learning is to mimic the way the human brain processes information. This is achieved through structures called artificial neural networks, which are inspired by the biological neural networks in our brains.

At its core, a neural network consists of layers of nodes, or "neurons," each of which performs simple computations. When these neurons are interconnected and layered, they can process complex data, learn patterns, and make predictions or decisions based on input data.

**Why Deep Learning?**

The "deep" in deep learning refers to the use of multiple layers in neural networks. This depth allows the model to learn hierarchical representations of data. In simpler terms, deep learning models can learn from raw data by building increasingly sophisticated features through its layers. This capability has revolutionized fields such as image and speech recognition, natural language processing, and even autonomous driving.

**Key Components of Deep Learning**

1. **Data**: Deep learning models require large amounts of data to learn effectively. This data serves as the foundation upon which these models build their understanding.

2. **Neural Networks**: At the heart of deep learning are neural networks, which are designed to mimic the way human brains operate. These networks consist of input layers, hidden layers, and output layers.

3. **Activation Functions**: Activation functions help decide whether a neuron should be activated or not. They introduce non-linearity into the network, enabling it to learn complex patterns.

4. **Backpropagation and Gradient Descent**: These are algorithms used for training neural networks. Backpropagation helps in adjusting the weights of the network based on the error rate, while gradient descent is a way to minimize the error by iteratively moving towards the minimum of a loss function.

**Challenges and Solutions**

Deep learning, while powerful, comes with its set of challenges. Overfitting, where a model learns the noise in the training data instead of the actual pattern, can lead to poor performance on unseen data. Techniques such as dropout, regularization, and data augmentation are used to combat this.

Another challenge is the requirement for large amounts of labeled data and computational resources. Transfer learning and unsupervised learning are some of the strategies used to address these issues.

**Ethics and Future Perspectives**

As we develop increasingly capable deep learning models, ethical considerations become paramount. Issues such as bias in AI, privacy concerns, and the impact on employment need careful consideration and proactive measures.

Looking ahead, the future of deep learning is incredibly promising. From enhancing medical diagnoses to improving environmental protection efforts, the potential applications are vast and impactful. However, achieving these outcomes requires not just technical skills, but also a thoughtful approach to the ethical implications of our work.

**Conclusion**

In this class, we will dive deeper into each of these topics, unraveling the complexities and uncovering the potentials of deep learning. Through lectures, hands-on projects, and discussions, you will gain a comprehensive understanding of deep learning and how it can be applied to solve real-world problems.

Remember, the field of deep learning is evolving rapidly, and continuous learning is key. Stay curious, be open to making mistakes, and learn from them. Together, we will explore the fascinating world of deep learning, and I am here to guide you every step of the way.

Your journey into deep learning starts now. Embrace the challenges, and let's make the most of this opportunity to learn and grow together. Welcome aboard!



[DEBUG]: Working Agent: Advanced Level Student

[INFO]: Starting Task: Ask a challenging question related to advanced Deep Learning. Use the content taught by the teacher to frame your question. Your question can be independent to other students question


&gt; Entering new CrewAgentExecutor chain...
```
Thought: Do I need to use a tool? No
Final Answer: Given the increasing complexity and depth of neural networks, how can we design more efficient algorithms for training these networks that not only reduce computational resources and time but also minimize the environmental impact, considering the growing concerns around the carbon footprint of training large-scale AI models?
```

&gt; Finished chain.

[DEBUG]: [Advanced Level Student] Task output: Given the increasing complexity and depth of neural networks, how can we design more efficient algorithms for training these networks that not only reduce computational resources and time but also minimize the environmental impact, considering the growing concerns around the carbon footprint of training large-scale AI models?
```



[DEBUG]: Working Agent: Advanced Level Student

[INFO]: Starting Task: Ask a challenging question related to advanced Deep Learning Use the content taught by the teacher to frame your question. Your question can be independent to other students question


&gt; Entering new CrewAgentExecutor chain...
Thought: Do I need to use a tool? No
Final Answer: Given the increasing complexity and depth of neural networks, how can we design more efficient algorithms for training these networks that not only reduce computational resources and time but also minimize the environmental impact, considering the growing concerns around the carbon footprint of training large-scale AI models?

&gt; Finished chain.

[DEBUG]: [Advanced Level Student] Task output: Given the increasing complexity and depth of neural networks, how can we design more efficient algorithms for training these networks that not only reduce computational resources and time but also minimize the environmental impact, considering the growing concerns around the carbon footprint of training large-scale AI models?



[DEBUG]: Working Agent: Intermediate Level Student

[INFO]: Starting Task: Ask an average level question related to fundamental Deep Learning Use the content taught by the teacher to frame your question. Your question can be independent to other students question


&gt; Entering new CrewAgentExecutor chain...
Thought: Do I need to use a tool? No
Final Answer: In light of the concerns regarding the environmental impact of training large-scale deep learning models, a fundamental question arises: What are some of the emerging techniques or methodologies in deep learning that are aimed at reducing the computational intensity and, consequently, the carbon footprint of training these models, while still maintaining or enhancing their performance?

&gt; Finished chain.

[DEBUG]: [Intermediate Level Student] Task output: In light of the concerns regarding the environmental impact of training large-scale deep learning models, a fundamental question arises: What are some of the emerging techniques or methodologies in deep learning that are aimed at reducing the computational intensity and, consequently, the carbon footprint of training these models, while still maintaining or enhancing their performance?



[DEBUG]: Working Agent: Intermediate Level Student

[INFO]: Starting Task: Ask an average level question related to fundamental Deep Learning Use the content taught by the teacher to frame your question. Your question can be independent to other students question


&gt; Entering new CrewAgentExecutor chain...
Thought: Do I need to use a tool? No
Final Answer: In the quest to address the environmental concerns associated with training deep learning models, what are some of the innovative approaches being adopted to minimize computational demands and carbon emissions without compromising the effectiveness of these models?

&gt; Finished chain.

[DEBUG]: [Intermediate Level Student] Task output: In the quest to address the environmental concerns associated with training deep learning models, what are some of the innovative approaches being adopted to minimize computational demands and carbon emissions without compromising the effectiveness of these models?



[DEBUG]: Working Agent: Beginner Level Student

[INFO]: Starting Task: Ask a basic question related to fundamental Deep Learning Use the content taught by the teacher to frame your question. Your question can be independent to other students question


&gt; Entering new CrewAgentExecutor chain...
Thought: Do I need to use a tool? No
Final Answer: In addressing environmental concerns related to deep learning model training, several innovative approaches are being adopted. One fundamental approach is the development and use of more efficient algorithms that require less computational power, thereby reducing energy consumption. Another approach is the utilization of model pruning and quantization techniques, which streamline models by removing unnecessary parameters or reducing the precision of the calculations, making them less resource-intensive without significantly affecting performance. Additionally, there's a growing trend towards using renewable energy sources for powering data centers where these models are trained, further minimizing the carbon footprint associated with deep learning. Lastly, transfer learning is also gaining popularity as it allows developers to leverage pre-trained models on new tasks with minimal additional training required, significantly cutting down on the resources and energy needed for training models from scratch.

&gt; Finished chain.

[DEBUG]: [Beginner Level Student] Task output: In addressing environmental concerns related to deep learning model training, several innovative approaches are being adopted. One fundamental approach is the development and use of more efficient algorithms that require less computational power, thereby reducing energy consumption. Another approach is the utilization of model pruning and quantization techniques, which streamline models by removing unnecessary parameters or reducing the precision of the calculations, making them less resource-intensive without significantly affecting performance. Additionally, there's a growing trend towards using renewable energy sources for powering data centers where these models are trained, further minimizing the carbon footprint associated with deep learning. Lastly, transfer learning is also gaining popularity as it allows developers to leverage pre-trained models on new tasks with minimal additional training required, significantly cutting down on the resources and energy needed for training models from scratch.



[DEBUG]: Working Agent: Deep Learning Teacher

[INFO]: Starting Task: Now re-write your teaching script based on your earlier script, incorporate the questions asked by the students, and include your answer in your script for maximum engagment.Your main goal is to write the script for the topic Deep Learning, we are just including students relevant question to the topic along with answers for better understanding of the topic. So stick with the topic Deep Learning


&gt; Entering new CrewAgentExecutor chain...
### Deep Learning: A Comprehensive Introduction with Student Queries Integrated

Welcome to our deep learning module, an exciting and dynamic field that stands at the forefront of artificial intelligence (AI). Deep learning gives machines an ability akin to human perception, enabling them to recognize patterns and make decisions in ways that were unimaginable just a few decades ago. As we embark on this journey together, our goal is to demystify deep learning, making it accessible to all, regardless of your prior understanding.

#### The Essence of Deep Learning

At its core, deep learning is a subset of machine learning. It leverages artificial neural networks to mimic the human brain's functionality, thereby processing data in complex, layered manners. This hierarchical approach allows deep learning models to tackle tasks of increasing sophistication, from recognizing handwritten digits to understanding natural language and beyond.

A student once asked, "Why do we need multiple layers in neural networks?" The answer lies in the power of hierarchy. Just as the human brain processes information in stages (from simple to complex), deep learning models use layers to learn increasingly abstract representations. This is crucial for tasks like image recognition, where initial layers may detect edges, while deeper layers may identify more complex shapes or objects.

#### Key Components and Challenges

Let's break down the essential components of deep learning: data, neural networks, activation functions, backpropagation, and gradient descent. Each plays a pivotal role in the learning process, with data being the fuel for training our models. Activation functions introduce non-linearity, allowing for complex decision-making, while backpropagation and gradient descent are the mechanisms through which models learn from their mistakes, continuously improving their accuracy.

However, deep learning is not without its challenges. Overfitting, the need for vast amounts of data, and significant computational resources are among the hurdles we face. Solutions such as dropout and regularization help combat overfitting by making our models more robust. Meanwhile, the advent of transfer learning and unsupervised learning techniques has made it easier to train models with less data and computational power.

#### Addressing Environmental Concerns

A pertinent question from a student highlighted a growing concern: "How does deep learning impact the environment?" Indeed, the computational demands of training sophisticated models have a carbon footprint. To mitigate this, the field is moving towards more energy-efficient algorithms and utilizing renewable energy sources for data centers. Techniques like model pruning and quantization reduce the computational load without compromising performance significantly. Furthermore, transfer learning emerges as a sustainable practice, leveraging existing models to reduce the resources required for new tasks.

#### Ethical Considerations and Future Potential

As we delve deeper into deep learning, ethical considerations must guide our exploration. The potential for bias, privacy implications, and the responsible use of AI are topics we must engage with critically. Looking ahead, the possibilities are boundless. From revolutionizing medicine with predictive diagnostics to tackling climate change through advanced modeling, deep learning holds the promise of significant societal impacts.

#### Continuous Learning and Exploration

In conclusion, deep learning is a field marked by rapid evolution and profound potential. As your guide, I encourage you to embrace curiosity, engage with challenges, and explore the myriad applications of deep learning. Together, we can navigate the complexities of this fascinating field, unlocking new knowledge and innovative solutions for the betterment of society.

Remember, the journey into deep learning is one of continuous learning and discovery. Your engagement, questions, and insights enrich our collective understanding and drive the field forward. So, let's embark on this exciting journey together, ready to learn, question, and innovate.

---

This script integrates the essence of deep learning with answers to students' queries, aiming to foster an engaging and informative learning environment. By addressing real-world concerns and emphasizing continuous exploration, we prepare students for the dynamic and evolving field of deep learning.Invalid Format: Missing 'Action:' after 'Thought:Thought: Do I need to use a tool? No
Final Answer: Deep Learning: A Comprehensive Introduction with Student Queries Integrated

Welcome to our deep learning module, an exciting and dynamic field that stands at the forefront of artificial intelligence (AI). Deep learning gives machines an ability akin to human perception, enabling them to recognize patterns and make decisions in ways that were unimaginable just a few decades ago. As we embark on this journey together, our goal is to demystify deep learning, making it accessible to all, regardless of your prior understanding.

#### The Essence of Deep Learning

At its core, deep learning is a subset of machine learning. It leverages artificial neural networks to mimic the human brain's functionality, thereby processing data in complex, layered manners. This hierarchical approach allows deep learning models to tackle tasks of increasing sophistication, from recognizing handwritten digits to understanding natural language and beyond.

A student once asked, "Why do we need multiple layers in neural networks?" The answer lies in the power of hierarchy. Just as the human brain processes information in stages (from simple to complex), deep learning models use layers to learn increasingly abstract representations. This is crucial for tasks like image recognition, where initial layers may detect edges, while deeper layers may identify more complex shapes or objects.

#### Key Components and Challenges

Let's break down the essential components of deep learning: data, neural networks, activation functions, backpropagation, and gradient descent. Each plays a pivotal role in the learning process, with data being the fuel for training our models. Activation functions introduce non-linearity, allowing for complex decision-making, while backpropagation and gradient descent are the mechanisms through which models learn from their mistakes, continuously improving their accuracy.

However, deep learning is not without its challenges. Overfitting, the need for vast amounts of data, and significant computational resources are among the hurdles we face. Solutions such as dropout and regularization help combat overfitting by making our models more robust. Meanwhile, the advent of transfer learning and unsupervised learning techniques has made it easier to train models with less data and computational power.

#### Addressing Environmental Concerns

A pertinent question from a student highlighted a growing concern: "How does deep learning impact the environment?" Indeed, the computational demands of training sophisticated models have a carbon footprint. To mitigate this, the field is moving towards more energy-efficient algorithms and utilizing renewable energy sources for data centers. Techniques like model pruning and quantization reduce the computational load without compromising performance significantly. Furthermore, transfer learning emerges as a sustainable practice, leveraging existing models to reduce the resources required for new tasks.

#### Ethical Considerations and Future Potential

As we delve deeper into deep learning, ethical considerations must guide our exploration. The potential for bias, privacy implications, and the responsible use of AI are topics we must engage with critically. Looking ahead, the possibilities are boundless. From revolutionizing medicine with predictive diagnostics to tackling climate change through advanced modeling, deep learning holds the promise of significant societal impacts.

#### Continuous Learning and Exploration

In conclusion, deep learning is a field marked by rapid evolution and profound potential. As your guide, I encourage you to embrace curiosity, engage with challenges, and explore the myriad applications of deep learning. Together, we can navigate the complexities of this fascinating field, unlocking new knowledge and innovative solutions for the betterment of society.

Remember, the journey into deep learning is one of continuous learning and discovery. Your engagement, questions, and insights enrich our collective understanding and drive the field forward. So, let's embark on this exciting journey together, ready to learn, question, and innovate.

---

This script integrates the essence of deep learning with answers to students' queries, aiming to foster an engaging and informative learning environment. By addressing real-world concerns and emphasizing continuous exploration, we prepare students for the dynamic and evolving field of deep learning.

&gt; Finished chain.

[DEBUG]: [Deep Learning Teacher] Task output: Deep Learning: A Comprehensive Introduction with Student Queries Integrated

Welcome to our deep learning module, an exciting and dynamic field that stands at the forefront of artificial intelligence (AI). Deep learning gives machines an ability akin to human perception, enabling them to recognize patterns and make decisions in ways that were unimaginable just a few decades ago. As we embark on this journey together, our goal is to demystify deep learning, making it accessible to all, regardless of your prior understanding.

#### The Essence of Deep Learning

At its core, deep learning is a subset of machine learning. It leverages artificial neural networks to mimic the human brain's functionality, thereby processing data in complex, layered manners. This hierarchical approach allows deep learning models to tackle tasks of increasing sophistication, from recognizing handwritten digits to understanding natural language and beyond.

A student once asked, "Why do we need multiple layers in neural networks?" The answer lies in the power of hierarchy. Just as the human brain processes information in stages (from simple to complex), deep learning models use layers to learn increasingly abstract representations. This is crucial for tasks like image recognition, where initial layers may detect edges, while deeper layers may identify more complex shapes or objects.

#### Key Components and Challenges

Let's break down the essential components of deep learning: data, neural networks, activation functions, backpropagation, and gradient descent. Each plays a pivotal role in the learning process, with data being the fuel for training our models. Activation functions introduce non-linearity, allowing for complex decision-making, while backpropagation and gradient descent are the mechanisms through which models learn from their mistakes, continuously improving their accuracy.

However, deep learning is not without its challenges. Overfitting, the need for vast amounts of data, and significant computational resources are among the hurdles we face. Solutions such as dropout and regularization help combat overfitting by making our models more robust. Meanwhile, the advent of transfer learning and unsupervised learning techniques has made it easier to train models with less data and computational power.

#### Addressing Environmental Concerns

A pertinent question from a student highlighted a growing concern: "How does deep learning impact the environment?" Indeed, the computational demands of training sophisticated models have a carbon footprint. To mitigate this, the field is moving towards more energy-efficient algorithms and utilizing renewable energy sources for data centers. Techniques like model pruning and quantization reduce the computational load without compromising performance significantly. Furthermore, transfer learning emerges as a sustainable practice, leveraging existing models to reduce the resources required for new tasks.

#### Ethical Considerations and Future Potential

As we delve deeper into deep learning, ethical considerations must guide our exploration. The potential for bias, privacy implications, and the responsible use of AI are topics we must engage with critically. Looking ahead, the possibilities are boundless. From revolutionizing medicine with predictive diagnostics to tackling climate change through advanced modeling, deep learning holds the promise of significant societal impacts.

#### Continuous Learning and Exploration

In conclusion, deep learning is a field marked by rapid evolution and profound potential. As your guide, I encourage you to embrace curiosity, engage with challenges, and explore the myriad applications of deep learning. Together, we can navigate the complexities of this fascinating field, unlocking new knowledge and innovative solutions for the betterment of society.

Remember, the journey into deep learning is one of continuous learning and discovery. Your engagement, questions, and insights enrich our collective understanding and drive the field forward. So, let's embark on this exciting journey together, ready to learn, question, and innovate.

---

This script integrates the essence of deep learning with answers to students' queries, aiming to foster an engaging and informative learning environment. By addressing real-world concerns and emphasizing continuous exploration, we prepare students for the dynamic and evolving field of deep learning.


######################
Deep Learning: A Comprehensive Introduction with Student Queries Integrated

Welcome to our deep learning module, an exciting and dynamic field that stands at the forefront of artificial intelligence (AI). Deep learning gives machines an ability akin to human perception, enabling them to recognize patterns and make decisions in ways that were unimaginable just a few decades ago. As we embark on this journey together, our goal is to demystify deep learning, making it accessible to all, regardless of your prior understanding.

#### The Essence of Deep Learning

At its core, deep learning is a subset of machine learning. It leverages artificial neural networks to mimic the human brain's functionality, thereby processing data in complex, layered manners. This hierarchical approach allows deep learning models to tackle tasks of increasing sophistication, from recognizing handwritten digits to understanding natural language and beyond.

A student once asked, "Why do we need multiple layers in neural networks?" The answer lies in the power of hierarchy. Just as the human brain processes information in stages (from simple to complex), deep learning models use layers to learn increasingly abstract representations. This is crucial for tasks like image recognition, where initial layers may detect edges, while deeper layers may identify more complex shapes or objects.

#### Key Components and Challenges

Let's break down the essential components of deep learning: data, neural networks, activation functions, backpropagation, and gradient descent. Each plays a pivotal role in the learning process, with data being the fuel for training our models. Activation functions introduce non-linearity, allowing for complex decision-making, while backpropagation and gradient descent are the mechanisms through which models learn from their mistakes, continuously improving their accuracy.

However, deep learning is not without its challenges. Overfitting, the need for vast amounts of data, and significant computational resources are among the hurdles we face. Solutions such as dropout and regularization help combat overfitting by making our models more robust. Meanwhile, the advent of transfer learning and unsupervised learning techniques has made it easier to train models with less data and computational power.

#### Addressing Environmental Concerns

A pertinent question from a student highlighted a growing concern: "How does deep learning impact the environment?" Indeed, the computational demands of training sophisticated models have a carbon footprint. To mitigate this, the field is moving towards more energy-efficient algorithms and utilizing renewable energy sources for data centers. Techniques like model pruning and quantization reduce the computational load without compromising performance significantly. Furthermore, transfer learning emerges as a sustainable practice, leveraging existing models to reduce the resources required for new tasks.

#### Ethical Considerations and Future Potential

As we delve deeper into deep learning, ethical considerations must guide our exploration. The potential for bias, privacy implications, and the responsible use of AI are topics we must engage with critically. Looking ahead, the possibilities are boundless. From revolutionizing medicine with predictive diagnostics to tackling climate change through advanced modeling, deep learning holds the promise of significant societal impacts.

#### Continuous Learning and Exploration

In conclusion, deep learning is a field marked by rapid evolution and profound potential. As your guide, I encourage you to embrace curiosity, engage with challenges, and explore the myriad applications of deep learning. Together, we can navigate the complexities of this fascinating field, unlocking new knowledge and innovative solutions for the betterment of society.

Remember, the journey into deep learning is one of continuous learning and discovery. Your engagement, questions, and insights enrich our collective understanding and drive the field forward. So, let's embark on this exciting journey together, ready to learn, question, and innovate.

---

This script integrates the essence of deep learning with answers to students' queries, aiming to foster an engaging and informative learning environment. By addressing real-world concerns and emphasizing continuous exploration, we prepare students for the dynamic and evolving field of deep learning.</code></pre>
</div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">classroom_result</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>'Deep Learning: A Comprehensive Introduction with Student Queries Integrated\n\nWelcome to our deep learning module, an exciting and dynamic field that stands at the forefront of artificial intelligence (AI). Deep learning gives machines an ability akin to human perception, enabling them to recognize patterns and make decisions in ways that were unimaginable just a few decades ago. As we embark on this journey together, our goal is to demystify deep learning, making it accessible to all, regardless of your prior understanding.\n\n#### The Essence of Deep Learning\n\nAt its core, deep learning is a subset of machine learning. It leverages artificial neural networks to mimic the human brain\'s functionality, thereby processing data in complex, layered manners. This hierarchical approach allows deep learning models to tackle tasks of increasing sophistication, from recognizing handwritten digits to understanding natural language and beyond.\n\nA student once asked, "Why do we need multiple layers in neural networks?" The answer lies in the power of hierarchy. Just as the human brain processes information in stages (from simple to complex), deep learning models use layers to learn increasingly abstract representations. This is crucial for tasks like image recognition, where initial layers may detect edges, while deeper layers may identify more complex shapes or objects.\n\n#### Key Components and Challenges\n\nLet\'s break down the essential components of deep learning: data, neural networks, activation functions, backpropagation, and gradient descent. Each plays a pivotal role in the learning process, with data being the fuel for training our models. Activation functions introduce non-linearity, allowing for complex decision-making, while backpropagation and gradient descent are the mechanisms through which models learn from their mistakes, continuously improving their accuracy.\n\nHowever, deep learning is not without its challenges. Overfitting, the need for vast amounts of data, and significant computational resources are among the hurdles we face. Solutions such as dropout and regularization help combat overfitting by making our models more robust. Meanwhile, the advent of transfer learning and unsupervised learning techniques has made it easier to train models with less data and computational power.\n\n#### Addressing Environmental Concerns\n\nA pertinent question from a student highlighted a growing concern: "How does deep learning impact the environment?" Indeed, the computational demands of training sophisticated models have a carbon footprint. To mitigate this, the field is moving towards more energy-efficient algorithms and utilizing renewable energy sources for data centers. Techniques like model pruning and quantization reduce the computational load without compromising performance significantly. Furthermore, transfer learning emerges as a sustainable practice, leveraging existing models to reduce the resources required for new tasks.\n\n#### Ethical Considerations and Future Potential\n\nAs we delve deeper into deep learning, ethical considerations must guide our exploration. The potential for bias, privacy implications, and the responsible use of AI are topics we must engage with critically. Looking ahead, the possibilities are boundless. From revolutionizing medicine with predictive diagnostics to tackling climate change through advanced modeling, deep learning holds the promise of significant societal impacts.\n\n#### Continuous Learning and Exploration\n\nIn conclusion, deep learning is a field marked by rapid evolution and profound potential. As your guide, I encourage you to embrace curiosity, engage with challenges, and explore the myriad applications of deep learning. Together, we can navigate the complexities of this fascinating field, unlocking new knowledge and innovative solutions for the betterment of society.\n\nRemember, the journey into deep learning is one of continuous learning and discovery. Your engagement, questions, and insights enrich our collective understanding and drive the field forward. So, let\'s embark on this exciting journey together, ready to learn, question, and innovate.\n\n---\n\nThis script integrates the essence of deep learning with answers to students\' queries, aiming to foster an engaging and informative learning environment. By addressing real-world concerns and emphasizing continuous exploration, we prepare students for the dynamic and evolving field of deep learning.'</code></pre>
</div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> display, Markdown</span></code></pre></div>
</div>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">display(Markdown(classroom_crew.tasks[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].output.result))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><strong>Introduction to Deep Learning</strong></p>
<p>Welcome, everyone. As we embark on this journey together into the world of deep learning, I want you to remember one thing: deep learning is not just a set of algorithms or an accumulation of complex mathematical formulas; it is a way to give machines a semblance of understanding, akin to the way we, humans, perceive the world.</p>
<p><strong>Understanding the Basics</strong></p>
<p>Deep learning is a subset of machine learning, which in turn falls under the broader umbrella of artificial intelligence (AI). The key idea behind deep learning is to mimic the way the human brain processes information. This is achieved through structures called artificial neural networks, which are inspired by the biological neural networks in our brains.</p>
<p>At its core, a neural network consists of layers of nodes, or “neurons,” each of which performs simple computations. When these neurons are interconnected and layered, they can process complex data, learn patterns, and make predictions or decisions based on input data.</p>
<p><strong>Why Deep Learning?</strong></p>
<p>The “deep” in deep learning refers to the use of multiple layers in neural networks. This depth allows the model to learn hierarchical representations of data. In simpler terms, deep learning models can learn from raw data by building increasingly sophisticated features through its layers. This capability has revolutionized fields such as image and speech recognition, natural language processing, and even autonomous driving.</p>
<p><strong>Key Components of Deep Learning</strong></p>
<ol type="1">
<li><p><strong>Data</strong>: Deep learning models require large amounts of data to learn effectively. This data serves as the foundation upon which these models build their understanding.</p></li>
<li><p><strong>Neural Networks</strong>: At the heart of deep learning are neural networks, which are designed to mimic the way human brains operate. These networks consist of input layers, hidden layers, and output layers.</p></li>
<li><p><strong>Activation Functions</strong>: Activation functions help decide whether a neuron should be activated or not. They introduce non-linearity into the network, enabling it to learn complex patterns.</p></li>
<li><p><strong>Backpropagation and Gradient Descent</strong>: These are algorithms used for training neural networks. Backpropagation helps in adjusting the weights of the network based on the error rate, while gradient descent is a way to minimize the error by iteratively moving towards the minimum of a loss function.</p></li>
</ol>
<p><strong>Challenges and Solutions</strong></p>
<p>Deep learning, while powerful, comes with its set of challenges. Overfitting, where a model learns the noise in the training data instead of the actual pattern, can lead to poor performance on unseen data. Techniques such as dropout, regularization, and data augmentation are used to combat this.</p>
<p>Another challenge is the requirement for large amounts of labeled data and computational resources. Transfer learning and unsupervised learning are some of the strategies used to address these issues.</p>
<p><strong>Ethics and Future Perspectives</strong></p>
<p>As we develop increasingly capable deep learning models, ethical considerations become paramount. Issues such as bias in AI, privacy concerns, and the impact on employment need careful consideration and proactive measures.</p>
<p>Looking ahead, the future of deep learning is incredibly promising. From enhancing medical diagnoses to improving environmental protection efforts, the potential applications are vast and impactful. However, achieving these outcomes requires not just technical skills, but also a thoughtful approach to the ethical implications of our work.</p>
<p><strong>Conclusion</strong></p>
<p>In this class, we will dive deeper into each of these topics, unraveling the complexities and uncovering the potentials of deep learning. Through lectures, hands-on projects, and discussions, you will gain a comprehensive understanding of deep learning and how it can be applied to solve real-world problems.</p>
<p>Remember, the field of deep learning is evolving rapidly, and continuous learning is key. Stay curious, be open to making mistakes, and learn from them. Together, we will explore the fascinating world of deep learning, and I am here to guide you every step of the way.</p>
<p>Your journey into deep learning starts now. Embrace the challenges, and let’s make the most of this opportunity to learn and grow together. Welcome aboard!</p>
</div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">display(Markdown(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>classroom_result<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>Deep Learning: A Comprehensive Introduction with Student Queries Integrated</p>
<p>Welcome to our deep learning module, an exciting and dynamic field that stands at the forefront of artificial intelligence (AI). Deep learning gives machines an ability akin to human perception, enabling them to recognize patterns and make decisions in ways that were unimaginable just a few decades ago. As we embark on this journey together, our goal is to demystify deep learning, making it accessible to all, regardless of your prior understanding.</p>
<section id="the-essence-of-deep-learning" class="level4">
<h4 class="anchored" data-anchor-id="the-essence-of-deep-learning">The Essence of Deep Learning</h4>
<p>At its core, deep learning is a subset of machine learning. It leverages artificial neural networks to mimic the human brain’s functionality, thereby processing data in complex, layered manners. This hierarchical approach allows deep learning models to tackle tasks of increasing sophistication, from recognizing handwritten digits to understanding natural language and beyond.</p>
<p>A student once asked, “Why do we need multiple layers in neural networks?” The answer lies in the power of hierarchy. Just as the human brain processes information in stages (from simple to complex), deep learning models use layers to learn increasingly abstract representations. This is crucial for tasks like image recognition, where initial layers may detect edges, while deeper layers may identify more complex shapes or objects.</p>
</section>
<section id="key-components-and-challenges" class="level4">
<h4 class="anchored" data-anchor-id="key-components-and-challenges">Key Components and Challenges</h4>
<p>Let’s break down the essential components of deep learning: data, neural networks, activation functions, backpropagation, and gradient descent. Each plays a pivotal role in the learning process, with data being the fuel for training our models. Activation functions introduce non-linearity, allowing for complex decision-making, while backpropagation and gradient descent are the mechanisms through which models learn from their mistakes, continuously improving their accuracy.</p>
<p>However, deep learning is not without its challenges. Overfitting, the need for vast amounts of data, and significant computational resources are among the hurdles we face. Solutions such as dropout and regularization help combat overfitting by making our models more robust. Meanwhile, the advent of transfer learning and unsupervised learning techniques has made it easier to train models with less data and computational power.</p>
</section>
<section id="addressing-environmental-concerns" class="level4">
<h4 class="anchored" data-anchor-id="addressing-environmental-concerns">Addressing Environmental Concerns</h4>
<p>A pertinent question from a student highlighted a growing concern: “How does deep learning impact the environment?” Indeed, the computational demands of training sophisticated models have a carbon footprint. To mitigate this, the field is moving towards more energy-efficient algorithms and utilizing renewable energy sources for data centers. Techniques like model pruning and quantization reduce the computational load without compromising performance significantly. Furthermore, transfer learning emerges as a sustainable practice, leveraging existing models to reduce the resources required for new tasks.</p>
</section>
<section id="ethical-considerations-and-future-potential" class="level4">
<h4 class="anchored" data-anchor-id="ethical-considerations-and-future-potential">Ethical Considerations and Future Potential</h4>
<p>As we delve deeper into deep learning, ethical considerations must guide our exploration. The potential for bias, privacy implications, and the responsible use of AI are topics we must engage with critically. Looking ahead, the possibilities are boundless. From revolutionizing medicine with predictive diagnostics to tackling climate change through advanced modeling, deep learning holds the promise of significant societal impacts.</p>
</section>
<section id="continuous-learning-and-exploration" class="level4">
<h4 class="anchored" data-anchor-id="continuous-learning-and-exploration">Continuous Learning and Exploration</h4>
<p>In conclusion, deep learning is a field marked by rapid evolution and profound potential. As your guide, I encourage you to embrace curiosity, engage with challenges, and explore the myriad applications of deep learning. Together, we can navigate the complexities of this fascinating field, unlocking new knowledge and innovative solutions for the betterment of society.</p>
<p>Remember, the journey into deep learning is one of continuous learning and discovery. Your engagement, questions, and insights enrich our collective understanding and drive the field forward. So, let’s embark on this exciting journey together, ready to learn, question, and innovate.</p>
<hr>
<p>This script integrates the essence of deep learning with answers to students’ queries, aiming to foster an engaging and informative learning environment. By addressing real-world concerns and emphasizing continuous exploration, we prepare students for the dynamic and evolving field of deep learning.</p>
</section>
</div>
</div>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># classroom_crew.tasks[0]</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># classroom_crew.tasks[0].model_dump()</span></span></code></pre></div>
</div>




<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>llm</category>
  <category>openai</category>
  <category>agents</category>
  <guid>https://arunprakash.ai/posts/ai-assistants-crewai/classroom_crew.html</guid>
  <pubDate>Thu, 01 Feb 2024 14:00:00 GMT</pubDate>
  <media:content url="https://arunprakash.ai/posts/ai-assistants-crewai/crew.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>OpenAI ChatCompletions vs OpenAI Assistants API: A Hands-on Comparison</title>
  <dc:creator>Arun Prakash</dc:creator>
  <link>https://arunprakash.ai/posts/chatcompletions-vs-assistants-ai-openai/assistants_chatcomplettion.html</link>
  <description><![CDATA[ 




<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dotenv <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dotenv</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> openai</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> openai <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> OpenAI</span>
<span id="cb1-6">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OpenAI()</span>
<span id="cb1-7">load_dotenv()</span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># openai key</span></span>
<span id="cb1-9">OPENAI_API_KEY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OPENAI_API_KEY"</span>)</span>
<span id="cb1-10">openai.api_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OPENAI_API_KEY</span>
<span id="cb1-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> display, Markdown</span></code></pre></div>
</div>
<section id="api-keys-httpsplatform.openai.comapi-keys" class="level6">
<h6 class="anchored" data-anchor-id="api-keys-httpsplatform.openai.comapi-keys">API Keys: https://platform.openai.com/api-keys</h6>
</section>
<section id="chat-completions-api" class="level1">
<h1>Chat Completions API</h1>
<ul>
<li>Takes a user’s message and a model as inputs</li>
<li>Generates responses to user inputs</li>
<li>Messages serve as the fundamental component in Chat Completions API operations</li>
</ul>
</section>
<section id="chat-completion-models-drawbacks" class="level1">
<h1>Chat Completion Models: Drawbacks</h1>
<ul>
<li>No message history tracking</li>
<li>Lack of support for file inputs (e.g., PDFs, CSVs)</li>
<li>Challenges with computational tasks</li>
<li>No management of context windows</li>
<li>Operate synchronously</li>
</ul>
</section>
<section id="assistants-api" class="level1">
<h1>Assistants API</h1>
<ul>
<li>Manages conversation Threads for Context Maintenance</li>
<li>Tools: Code Interpreter, Retrieval, Function calling</li>
<li>Supports file handling</li>
<li>Asynchronous support</li>
<li>Can generate graphs, charts, and process various file types</li>
</ul>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip3 install openai --upgrade</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># openai version</span></span>
<span id="cb3-2">openai.__version__</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<pre><code>'1.8.0'</code></pre>
</div>
</div>
</section>
<section id="no-message-histories-in-chatcompletions" class="level1">
<h1>1. No Message Histories in ChatCompletions</h1>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb5-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span>,</span>
<span id="cb5-3">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb5-4">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"What's the capital of Japan"</span>},</span>
<span id="cb5-5">    ],</span>
<span id="cb5-6">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>,</span>
<span id="cb5-7">    seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb5-8">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">display(Markdown(response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message.content))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>The capital of Japan is Tokyo.</p>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb7-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span>,</span>
<span id="cb7-3">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb7-4">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tell me something about that city"</span>},</span>
<span id="cb7-5">    ],</span>
<span id="cb7-6">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>,</span>
<span id="cb7-7">    seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb7-8">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">display(Markdown(response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message.content))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>I’m sorry, but you didn’t specify which city you’re referring to. Could you please provide the name of the city you’re interested in learning about?</p>
</div>
</div>
</section>
<section id="no-code-interpreter---computational-tasks" class="level1">
<h1>No Code Interpreter - Computational Tasks</h1>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb9-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span>,</span>
<span id="cb9-3">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb9-4">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reverse the string openaichatgpt"</span>},</span>
<span id="cb9-5">    ],</span>
<span id="cb9-6">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>,</span>
<span id="cb9-7">    seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb9-8">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">display(Markdown(response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message.content))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>To reverse the string “openaichatgpt”, you would simply reverse the order of the characters to get “tpgtaahcianepo”.</p>
</div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"tpgtahciapeneo"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"openaichatgpt"</span>[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>False</code></pre>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb13-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span>,</span>
<span id="cb13-3">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb13-4">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"what's todays date?"</span>},</span>
<span id="cb13-5">    ],</span>
<span id="cb13-6">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>,</span>
<span id="cb13-7">    seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb13-8">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">display(Markdown(response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message.content))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>As an AI, I don’t have real-time capabilities, so I can’t provide the current date. However, you can easily check the date on your computer, smartphone, or any other device with a calendar function.</p>
</div>
</div>
</section>
<section id="context-window-handling" class="level1">
<h1>Context Window Handling</h1>
</section>
<section id="synchronous" class="level1">
<h1>Synchronous</h1>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb15-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span>,</span>
<span id="cb15-3">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb15-4">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reverse the string openaichatgpt"</span>},</span>
<span id="cb15-5">    ],</span>
<span id="cb15-6">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>,</span>
<span id="cb15-7">    seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb15-8">)</span></code></pre></div>
</div>
</section>
<section id="assistants-api-1" class="level1">
<h1>Assistants API</h1>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">assistant <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.assistants.create(</span>
<span id="cb16-2">    name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Python Tutor"</span>,</span>
<span id="cb16-3">    instructions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a python tutor teaching someone who has experience in Java"</span>,</span>
<span id="cb16-4">    tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"code_interpreter"</span>}],</span>
<span id="cb16-5">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span></span>
<span id="cb16-6">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">assistant</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<pre><code>Assistant(id='asst_4bTZR8hx96VEvyFca4hnmoe1', created_at=1705686038, description=None, file_ids=[], instructions='You are a python tutor teaching someone who has experience in Java', metadata={}, model='gpt-4-1106-preview', name='Python Tutor', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">thread <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.create()</span>
<span id="cb19-2">thread</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>Thread(id='thread_z12e0BsDI8SfaePTmRMsApXo', created_at=1705686038, metadata={}, object='thread')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.create(</span>
<span id="cb21-2">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb21-3">    role<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb21-4">    content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reverse the string openaichatgpt"</span></span>
<span id="cb21-5">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.create(</span>
<span id="cb22-2">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb22-3">    assistant_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>assistant.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(json.dumps(run.model_dump(), indent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{
    "id": "run_npuaz95TU2HdDGu3cgRhkOsW",
    "assistant_id": "asst_4bTZR8hx96VEvyFca4hnmoe1",
    "cancelled_at": null,
    "completed_at": null,
    "created_at": 1705686039,
    "expires_at": 1705686639,
    "failed_at": null,
    "file_ids": [],
    "instructions": "You are a python tutor teaching someone who has experience in Java",
    "last_error": null,
    "metadata": {},
    "model": "gpt-4-1106-preview",
    "object": "thread.run",
    "required_action": null,
    "started_at": null,
    "status": "queued",
    "thread_id": "thread_z12e0BsDI8SfaePTmRMsApXo",
    "tools": [
        {
            "type": "code_interpreter"
        }
    ]
}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.retrieve(</span>
<span id="cb25-2">  thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb25-3">  run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb25-4">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">run.status</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">
<pre><code>'in_progress'</code></pre>
</div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb28-2">  thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb28-3">)</span>
<span id="cb28-4"></span>
<span id="cb28-5">messages</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="22">
<pre><code>SyncCursorPage[ThreadMessage](data=[ThreadMessage(id='msg_j9CJRJRiYrsfl7pk6a07u72c', assistant_id=None, content=[MessageContentText(text=Text(annotations=[], value='reverse the string openaichatgpt'), type='text')], created_at=1705686038, file_ids=[], metadata={}, object='thread.message', role='user', run_id=None, thread_id='thread_z12e0BsDI8SfaePTmRMsApXo')], object='list', first_id='msg_j9CJRJRiYrsfl7pk6a07u72c', last_id='msg_j9CJRJRiYrsfl7pk6a07u72c', has_more=False)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(json.dumps(messages.model_dump(), indent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{
    "data": [
        {
            "id": "msg_j9CJRJRiYrsfl7pk6a07u72c",
            "assistant_id": null,
            "content": [
                {
                    "text": {
                        "annotations": [],
                        "value": "reverse the string openaichatgpt"
                    },
                    "type": "text"
                }
            ],
            "created_at": 1705686038,
            "file_ids": [],
            "metadata": {},
            "object": "thread.message",
            "role": "user",
            "run_id": null,
            "thread_id": "thread_z12e0BsDI8SfaePTmRMsApXo"
        }
    ],
    "object": "list",
    "first_id": "msg_j9CJRJRiYrsfl7pk6a07u72c",
    "last_id": "msg_j9CJRJRiYrsfl7pk6a07u72c",
    "has_more": false
}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">display(Markdown(messages.data[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text.value))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>reverse the string openaichatgpt</p>
</div>
</div>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.create(</span>
<span id="cb33-2">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb33-3">    role<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb33-4">    content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"make the previous input as uppercase and tell me the length of the string"</span></span>
<span id="cb33-5">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span></code></pre></div>
</div>
<div class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># new run</span></span>
<span id="cb35-2">run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.create(</span>
<span id="cb35-3">  thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb35-4">  assistant_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>assistant.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb35-5">)</span>
<span id="cb35-6"></span>
<span id="cb35-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># wait for run to complete</span></span>
<span id="cb35-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"queued"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in_progress"</span>:</span>
<span id="cb35-9">    run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.retrieve(</span>
<span id="cb35-10">      thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb35-11">      run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb35-12">    )</span>
<span id="cb35-13">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(run.status)</span>
<span id="cb35-14">    time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>in_progress
in_progress
in_progress
completed</code></pre>
</div>
</div>
<div class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1">messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb37-2">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb37-3">    )</span></code></pre></div>
</div>
<div class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1">display(Markdown(messages.data[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text.value))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>The reversed string “tpgtahcianepo” in uppercase is “TPGTAHCIANEPO”. The length of this string is 13 characters.</p>
</div>
</div>



</section>

<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>llm</category>
  <category>openai</category>
  <category>openai_assistants_api</category>
  <category>chat_completions</category>
  <category>handson</category>
  <guid>https://arunprakash.ai/posts/chatcompletions-vs-assistants-ai-openai/assistants_chatcomplettion.html</guid>
  <pubDate>Fri, 19 Jan 2024 14:00:00 GMT</pubDate>
  <media:content url="https://arunprakash.ai/posts/chatcompletions-vs-assistants-ai-openai/logo.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Morning with Jarvis: Craft Your Own News Universe from Social Media and News Digests</title>
  <dc:creator>Arun Prakash</dc:creator>
  <link>https://arunprakash.ai/posts/personalised-news-social-media-openai-assistants-api/news_assistant_tools.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/personalised-news-social-media-openai-assistants-api/0_0.webp" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Voyage Vista</figcaption>
</figure>
</div>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install selenium</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install webdriver-manager</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install fpdf</span></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install python-telegram-bot</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install nest_asyncio</span></span></code></pre></div>
</div>
<p>Imagine a tool that transforms your morning routine into a seamless experience, where the latest updates on generative AI, large language models (LLMs), OpenAI, and more are delivered directly to you, not through the usual scrolling and searching, but through a personalized audio news briefing. This innovative project does just that. It autonomously navigates through your Twitter, Reddit, GitHub, and other websites, capturing screenshots as it scrolls through the feeds. These images are then analyzed to curate news content that aligns with your interests.</p>
<p>The magic doesn’t end there. This curated content is converted into an audio format and accompanying text documents with source urls, which are then sent to your Telegram. As you sip your morning coffee, you can listen to the latest developments in your fields of interest. If a particular story piques your curiosity, you can delve deeper by exploring the links provided. This not only saves you time but also ensures you’re always informed about the topics that matter to you. Gone are the days of manually sifting through various accounts for relevant news. Now, your custom news comes to you, allowing you to start your day informed and inspired.</p>
<p>In this blog post, I go through the different components and technologies I used to build this project.</p>
<section id="tools-and-technologies" class="level1">
<h1>Tools and Technologies</h1>
<ul>
<li><strong>Selenium</strong>: This web browser automation tool is used to navigate various websites and capture screenshots, effectively simulating the process of browsing through social media feeds.</li>
<li><strong>Tesseract</strong>: This Optical Character Recognition (OCR) tool is employed to extract text from the screenshots captured by Selenium, turning images into readable and analyzable text.</li>
<li><strong>OpenAI API</strong>: This API is utilized for Large Language Models (LLMs), which are crucial for understanding and interpreting the text extracted from the screenshots.</li>
<li><strong>Telegram API</strong>: This API is used to send the curated news content, in both audio and text formats, directly to your Telegram messages.</li>
<li><strong>Streamlit</strong>: This open-source app framework is used to build the web application and chatbot that facilitate the user interaction with the tool.</li>
<li><strong>EditThisCookie</strong>: This browser extension is used to extract cookies from the browser, enabling the tool to log into your social media accounts.</li>
<li><strong>OpenAI Assistants API</strong>: This API is used to create a personalized chatbot, enhancing the tool’s ability to interact with users and provide customized content.</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/personalised-news-social-media-openai-assistants-api/news_assistant_tools_files/figure-html/c720e2dc-1-image.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image.png</figcaption>
</figure>
</div>
</section>
<section id="download-screenshots" class="level1">
<h1>Download Screenshots</h1>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> selenium <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> webdriver</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> selenium.webdriver.chrome.service <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Service</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> webdriver_manager.chrome <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ChromeDriverManager</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> selenium.webdriver.chrome.options <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Options</span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> selenium.webdriver.common.by <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> By</span>
<span id="cb2-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> selenium.webdriver.common.alert <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Alert</span>
<span id="cb2-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> selenium.common.exceptions <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> NoSuchElementException, NoAlertPresentException</span>
<span id="cb2-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb2-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb2-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> setup_driver():</span>
<span id="cb2-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb2-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Sets up and returns a Chrome WebDriver.</span></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb2-16">    chrome_options <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Options()</span>
<span id="cb2-17">    chrome_options.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--disable-notifications"</span>) </span>
<span id="cb2-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> webdriver.Chrome(service<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>Service(ChromeDriverManager().install()), options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>chrome_options)</span>
<span id="cb2-19"></span>
<span id="cb2-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> setup_headless_driver():</span>
<span id="cb2-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb2-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Sets up and returns a headless Chrome WebDriver with a user agent that mimics a supported browser.</span></span>
<span id="cb2-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb2-24">    user_agent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36"</span></span>
<span id="cb2-25"></span>
<span id="cb2-26">    chrome_options <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Options()</span>
<span id="cb2-27">    chrome_options.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--headless"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Enables headless mode</span></span>
<span id="cb2-28">    chrome_options.add_argument(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"user-agent=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>user_agent<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sets user agent to a supported browser version</span></span>
<span id="cb2-29">    chrome_options.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--no-sandbox"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bypass OS security model</span></span>
<span id="cb2-30">    chrome_options.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--disable-dev-shm-usage"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Overcome limited resource problems</span></span>
<span id="cb2-31">    chrome_options.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--disable-gpu"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Applicable to windows os only</span></span>
<span id="cb2-32">    chrome_options.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--disable-extensions"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Disabling extensions</span></span>
<span id="cb2-33">    chrome_options.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--disable-dev-shm-usage"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Overcome limited resource problems</span></span>
<span id="cb2-34">    chrome_options.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--window-size=1920,1080"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Specify the window size</span></span>
<span id="cb2-35">    chrome_options.add_argument(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--disable-notifications"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Disable notifications</span></span>
<span id="cb2-36"></span>
<span id="cb2-37"></span>
<span id="cb2-38"></span>
<span id="cb2-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> webdriver.Chrome(service<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>Service(ChromeDriverManager().install()), options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>chrome_options)</span>
<span id="cb2-40"></span>
<span id="cb2-41"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> load_and_add_cookies(driver, website_url, cookies_file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb2-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb2-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Loads a given website and adds cookies from a specified file.</span></span>
<span id="cb2-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb2-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param driver: The WebDriver instance.</span></span>
<span id="cb2-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param website_url: URL of the website to load.</span></span>
<span id="cb2-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param cookies_file: Path to the cookies file in JSON format.</span></span>
<span id="cb2-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb2-49">    driver.get(website_url)</span>
<span id="cb2-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if cookies file</span></span>
<span id="cb2-51">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> cookies_file:</span>
<span id="cb2-52">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(cookies_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> cookiesfile:</span>
<span id="cb2-53">            cookies <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(cookiesfile)</span>
<span id="cb2-54">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> cookie <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> cookies:</span>
<span id="cb2-55">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sameSite'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> cookie <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> cookie[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sameSite'</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Strict'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Lax'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'None'</span>]:</span>
<span id="cb2-56">                    cookie[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sameSite'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'None'</span></span>
<span id="cb2-57">                driver.add_cookie(cookie)</span>
<span id="cb2-58"></span>
<span id="cb2-59"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> capture_scroll_screenshots(driver, url, num_screenshots, screenshot_prefix):</span>
<span id="cb2-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb2-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Captures and saves a specified number of screenshots while scrolling through a webpage.</span></span>
<span id="cb2-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb2-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param driver: The WebDriver instance.</span></span>
<span id="cb2-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param url: URL of the page to capture.</span></span>
<span id="cb2-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param num_screenshots: Number of screenshots to take.</span></span>
<span id="cb2-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param screenshot_prefix: Prefix for naming the screenshot files.</span></span>
<span id="cb2-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb2-68">    driver.get(url)</span>
<span id="cb2-69">    time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-70">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, num_screenshots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb2-71">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb2-72">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check for the presence of the notification popup and close it</span></span>
<span id="cb2-73">            notification_popup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> driver.find_element(By.XPATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'//div[contains(@style, "notification")]//button[text()="Block"]'</span>)</span>
<span id="cb2-74">            notification_popup.click()</span>
<span id="cb2-75">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> NoSuchElementException:</span>
<span id="cb2-76">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If no popup, do nothing</span></span>
<span id="cb2-77">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">pass</span></span>
<span id="cb2-78">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> NoAlertPresentException:</span>
<span id="cb2-79">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Handle the case where the alert is not present</span></span>
<span id="cb2-80">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">pass</span></span>
<span id="cb2-81"></span>
<span id="cb2-82">        driver.save_screenshot(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'screenshots/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>screenshot_prefix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png'</span>)</span>
<span id="cb2-83">        </span>
<span id="cb2-84">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scroll to the bottom of the page</span></span>
<span id="cb2-85">        driver.execute_script(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"window.scrollTo(0, document.body.scrollHeight);"</span>)</span>
<span id="cb2-86">        time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-87"></span>
<span id="cb2-88"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_content():</span>
<span id="cb2-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb2-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Main function to perform web scraping tasks.</span></span>
<span id="cb2-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb2-92">    driver <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> setup_driver() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use this for local</span></span>
<span id="cb2-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#driver = setup_headless_driver() # use this for colab</span></span>
<span id="cb2-94"></span>
<span id="cb2-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Twitter</span></span>
<span id="cb2-96">    load_and_add_cookies(driver, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://www.twitter.com"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"twitter_cookies.json"</span>)</span>
<span id="cb2-97">    capture_scroll_screenshots(driver, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://twitter.com/search?q=openai&amp;src=typeahead_click"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'twitter_screenshot'</span>)</span>
<span id="cb2-98"></span>
<span id="cb2-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reddit</span></span>
<span id="cb2-100">    load_and_add_cookies(driver, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://www.reddit.com"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reddit_cookies.json"</span>)</span>
<span id="cb2-101">    capture_scroll_screenshots(driver, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://www.reddit.com/r/OpenAI/"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reddit_screenshot'</span>)</span>
<span id="cb2-102"></span>
<span id="cb2-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#openai</span></span>
<span id="cb2-104">    load_and_add_cookies(driver, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://community.openai.com/"</span>)</span>
<span id="cb2-105">    capture_scroll_screenshots(driver, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://community.openai.com/"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'openai_screenshot'</span>)</span>
<span id="cb2-106"></span>
<span id="cb2-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># github</span></span>
<span id="cb2-108">    load_and_add_cookies(driver, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/trending"</span>)</span>
<span id="cb2-109">    capture_scroll_screenshots(driver, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/trending"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'github_screenshot'</span>)</span>
<span id="cb2-110"></span>
<span id="cb2-111">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># hackernews</span></span>
<span id="cb2-112">    load_and_add_cookies(driver, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://news.ycombinator.com/news"</span>)</span>
<span id="cb2-113">    capture_scroll_screenshots(driver, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://news.ycombinator.com/news"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hackernews_screenshot'</span>)</span>
<span id="cb2-114"></span>
<span id="cb2-115">    driver.quit()</span>
<span id="cb2-116"></span>
<span id="cb2-117"></span>
<span id="cb2-118">get_content()</span>
<span id="cb2-119"></span></code></pre></div>
</div>
<p>The above script is a web scraping tool that uses Selenium WebDriver to automate browser interactions and capture screenshots from various websites. The script is organized into several functions, each with a specific role in the web scraping process.</p>
<p>The <code>setup_driver</code> and <code>setup_headless_driver</code> functions initialize a Chrome WebDriver instance, with the latter setting up a headless browser (a browser without a user interface). The <code>load_and_add_cookies</code> function navigates to a specified URL and loads cookies from a JSON file, if provided. This can be useful for maintaining session data or preferences across multiple browsing sessions. The <code>capture_scroll_screenshots</code> function navigates to a given URL, handles potential pop-up notifications, captures a specified number of screenshots while scrolling through the page, and saves these screenshots with a given prefix.</p>
<p>The <code>get_content</code> function is the main driver of the script. It sets up the WebDriver, loads cookies, and captures screenshots for several websites, including Twitter, Reddit, OpenAI Community, GitHub, and Hacker News. After all tasks are completed, the WebDriver is closed. This script is a practical example of how web scraping can be used to automate data collection from multiple sources that we will be utilizing in this project.</p>
<p>For account login, we can use <code>EditThisCookie</code> to extract cookies from the browser. This extension allows us to export cookies from the browser in a JSON file, which can then be loaded into the script using the <code>load_and_add_cookies</code> function. This enables the script to log into your social media accounts and capture screenshots of your feeds.</p>
</section>
<section id="screenshots-to-text" class="level1">
<h1>Screenshots to Text</h1>
<p>I attempted to convert screenshots to text using various AI models. Initially, I used GPT-4 Vision models, but they were unable to process images containing people, which made them unsuitable for social media images. I then tried Gemini Pro Vision, but the results did not meet my expectations. Finally, I used Tesseract, an open-source text recognition engine, which provided excellent results.</p>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">screenshots_folder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'screenshots'</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">twitter_files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [f <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> f <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.listdir(screenshots_folder) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> f.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'twitter_screenshot'</span>)]</span>
<span id="cb4-2">reddit_files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [f <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> f <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.listdir(screenshots_folder) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> f.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reddit_screenshot'</span>)]</span>
<span id="cb4-3">openai_files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [f <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> f <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.listdir(screenshots_folder) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> f.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'openai_screenshot'</span>)]</span>
<span id="cb4-4">github_files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [f <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> f <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.listdir(screenshots_folder) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> f.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'github_screenshot'</span>)]</span>
<span id="cb4-5">hackernews_files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [f <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> f <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.listdir(screenshots_folder) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> f.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hackernews_screenshot'</span>)]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">twitter_files</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>['twitter_screenshot_2.png',
 'twitter_screenshot_3.png',
 'twitter_screenshot_1.png',
 'twitter_screenshot_4.png',
 'twitter_screenshot_5.png']</code></pre>
</div>
</div>
<p><img src="https://arunprakash.ai/posts/personalised-news-social-media-openai-assistants-api/screenshots/openai_screenshot_2.png" width="60%"></p>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pytesseract</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the image from file</span></span>
<span id="cb7-5">image_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>screenshots_folder<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>openai_files[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb7-6">image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(image_path)</span>
<span id="cb7-7"></span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use tesseract to do OCR on the image</span></span>
<span id="cb7-9">text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pytesseract.image_to_string(image)</span>
<span id="cb7-10"></span>
<span id="cb7-11">text</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>"oo OG GO\n\nG OpenAl\n\nTopics\n\nMore\n\nRESOURCES\nDocumentation\nAPI reference\n\nHelp center\n\nCATEGORIES\nAnnouncements\n\nAPI\n\nPrompting\nDocumentation\n\nPlugins / Actions builders\n\nAll categories\n\nTAGS\n\nchatgpt\n\ngpt-4\n\napi\nplugin-development\nlost-user\n\nAlltags\n\nDocumentation\n\nAPI reference\n\nHM DUg\nHi Bugs gpt-4\n\n@ Cannot publish my GPT store because of the name while\n\nothers have published similar\n™@ GPT builders chatgpt\n\nAny tools out there to pull/scrape complete website data and\n\nfeed it into GPT?\nH API gpt-4, api\n\nBuilder Profile Website Verified, but will not activate\n® Plugins / Actions builders lost-user\n\nBuilders with the Most GPTs\nGPT builders chatgpt, gpts, gpt-builder\n\nGenerating Traffic or ads to GPT - Best way to go about it\n® Plugins / Actions builders gpt-4, plugin-development, chatgpt-plugin\n\n“4 Whisper error 400 “Unrecognized file format.”\nH API whisper\n\nGpt-4-vision-preview model for other document types not just\nimages\nBH API\n\nChatCompletionMessag is returning content=None when\nfinish_reason='stop’\nWAPI\n\nWhich Model is the Best for Writing?\nWAPI\n\nRetrieving Complete Structured Data Objects Using Assistants\n\nAPI File Search Feature\nWAPI\n\na\n\nANSE\n\n-@0:°@\n\nw2Q@e\n\nad\n\nv\n\n20\n\n14\n\nvt\n\n27\n\n7.6k\n\n148\n\n10\n\n613\n\n357\n\n88\n\n74\n\n75\n\n25\n\neu\n\n2h\n\n2h\n\n2h\n\n2h\n\n3h\n\n3h\n\n3h\n\n3h\n\n3h\n\n3h\n"</code></pre>
</div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">twitter_files</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>['twitter_screenshot_2.png',
 'twitter_screenshot_3.png',
 'twitter_screenshot_1.png',
 'twitter_screenshot_4.png',
 'twitter_screenshot_5.png']</code></pre>
</div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"></span>
<span id="cb11-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> extract_text_from_images(file_paths, folder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'screenshots'</span>):</span>
<span id="cb11-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Extracts text from a list of image file paths using OCR.</span></span>
<span id="cb11-5"></span>
<span id="cb11-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param file_paths: List of file paths for images.</span></span>
<span id="cb11-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :return: A list of strings where each string is the extracted text from an image.</span></span>
<span id="cb11-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb11-9">    extracted_texts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb11-10"></span>
<span id="cb11-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> file_path <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> file_paths:</span>
<span id="cb11-12">        file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>folder<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb11-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb11-14">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(file_path) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> image:</span>
<span id="cb11-15">                text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pytesseract.image_to_string(image)</span>
<span id="cb11-16">                extracted_texts.append(text)</span>
<span id="cb11-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">IOError</span>:</span>
<span id="cb11-18">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Error opening or reading image file: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> extracted_texts</span>
<span id="cb11-20"></span>
<span id="cb11-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> combine_texts_from_sources(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args):</span>
<span id="cb11-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb11-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Combines texts from multiple sources into a single string.</span></span>
<span id="cb11-24"></span>
<span id="cb11-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param args: Variable length argument list where each argument is a list of file paths.</span></span>
<span id="cb11-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :return: A single string containing all the extracted text.</span></span>
<span id="cb11-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb11-28">    all_texts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb11-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> file_list <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> args:</span>
<span id="cb11-30">        texts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> extract_text_from_images(file_list)</span>
<span id="cb11-31">        all_texts.extend(texts)</span>
<span id="cb11-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.join(all_texts)</span>
<span id="cb11-33"></span>
<span id="cb11-34"></span>
<span id="cb11-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract and combine texts</span></span>
<span id="cb11-36">combined_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> combine_texts_from_sources(twitter_files, reddit_files, openai_files, github_files, hackernews_files)</span>
<span id="cb11-37"></span></code></pre></div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">combined_text[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>"Q. openai aad nK\n\n#HelloMotoHelloColor @\nMotorola Razr 40 Ultra now in Pantone Color\n\nTop Latest People Media Lists\n\nSs omMN AaopoD x\n\nNX\n\nDo\n\n&gt; @o\n\nWhisper (baseline) - 73 seconds\nWhisper w/ Speculative Decoding - 33 seconds\n\nAll with zero drop in performance! 4\n\nPseudocode:\n\n1. Initialise a Teacher model ex: openai/whisper-large-v2.\n\n2. Load an assistant model ex....\n\nShow more\n\noee vaibhav@hf-dgx-01: /raid/vb/open_asr_leaderboard/transformers/scripts XH\n\nCleaderboard_env) vaibhav@hf-dgx-@1: /raid/vb/open_asr_leaderboard/transformers/\nscripts$ vi spec_dec_whisper.py\n\n0:58\n\n[&gt;\n\n© 20 tl 123 OQ 768 il 118K nN\n\nRowan Cheung @ ®) @rowancheung - Jan 11\n\nof 2024 - Peach Fuzz.\n€ Promoted by Motorola India\n\nTrending in India\n#justiceforblinkitworkers\n6,039 posts\n\nEntertainment - Trending\n#RadhikaApte\n\n1,723 posts\n\nEntertainment - Trending\n\nFamily Audience\nA8K posts\n\nShow more\n\nWho to follow\nMufaddal Vohra @\n@mufaddal vohra\n\n% Johns. @\nVY @CricCrazyJohns\n\nf Geology Page\nOpenAl's GPT Store is h"</code></pre>
</div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb14-2"></span>
<span id="cb14-3"></span>
<span id="cb14-4"></span>
<span id="cb14-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Task: As an adept assistant, your objective is to craft a news article focused on OpenAI, Large Language Models, Generative AI, drawing from textual content sourced via OCR from Twitter, Reddit, and the OpenAI community forums.</span></span>
<span id="cb14-6"></span>
<span id="cb14-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Guidelines:</span></span>
<span id="cb14-8"></span>
<span id="cb14-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1. Headline Creation: Devise a captivating and relevant headline that encapsulates the essence of the article.</span></span>
<span id="cb14-10"></span>
<span id="cb14-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">2. Article Structure: Organize the content cohesively with an engaging introduction, informative body, and a conclusive ending.</span></span>
<span id="cb14-12"></span>
<span id="cb14-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">3. Language and Style: </span></span>
<span id="cb14-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">   - Rectify any grammatical, spelling, and punctuation inaccuracies.</span></span>
<span id="cb14-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">   - Adopt a professional and clear journalistic tone, mirroring the style of a formal news report.</span></span>
<span id="cb14-16"></span>
<span id="cb14-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">4. Content Segmentation: Incorporate a distinct section titled 'Interesting Projects' to spotlight significant initiatives or ideas referenced in the source material.</span></span>
<span id="cb14-18"></span>
<span id="cb14-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">5. Anonymity and Privacy: Maintain confidentiality by excluding specific personal names unless they are public figures or their identity is openly acknowledged in the material.</span></span>
<span id="cb14-20"></span>
<span id="cb14-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">6. Enhanced Narration: </span></span>
<span id="cb14-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">   - Enrich the article by expanding on various topics.</span></span>
<span id="cb14-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">   - Provide in-depth analysis and insights while staying true to the original content's intent and meaning.</span></span>
<span id="cb14-24"></span>
<span id="cb14-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Objective: Transform social media discourse into a structured, polished, and informative news piece that reflects journalistic standards and provides a comprehensive overview of OpenAI's impact and initiatives as perceived through social media lenses.</span></span>
<span id="cb14-26"></span>
<span id="cb14-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Do not miss any important details, as information can be at the end of the article too. Aim for 1500-2000 words</span></span>
<span id="cb14-28"></span>
<span id="cb14-29"></span>
<span id="cb14-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span></code></pre></div>
</div>
<p>Alternative prompt. You can play with your own prompting based on your domain of interest.</p>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb15-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">You are a skilled assistant tasked with transforming social media text obtained through OCR into a news article centered around OpenAI. Your sources include content from Twitter, Reddit, and the OpenAI community. Structure your article with a compelling headline and body text.</span></span>
<span id="cb15-3"></span>
<span id="cb15-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Focus on enhancing the clarity and professionalism of the content by correcting grammatical errors, spelling mistakes, and punctuation issues. Craft the article to reflect the style and tone of a news report.</span></span>
<span id="cb15-5"></span>
<span id="cb15-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">In your article, include a section titled 'Interesting Projects' to highlight any notable projects or ideas mentioned in the source material. Ensure to maintain anonymity by omitting specific names unless their identity is confirmed, as the information is derived from screenshots.</span></span>
<span id="cb15-7"></span>
<span id="cb15-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Enhance the article by elaborating on different aspects and providing detailed insights while preserving the essence of the original content.</span></span>
<span id="cb15-9"></span>
<span id="cb15-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Do not miss any important details, as information can be at the end of the article too. Aim for 1500-2000 words</span></span>
<span id="cb15-11"></span>
<span id="cb15-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span></code></pre></div>
</div>
</section>
<section id="news-curation" class="level1">
<h1>News Curation</h1>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb16-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dotenv <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dotenv</span>
<span id="cb16-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> openai <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> OpenAI</span>
<span id="cb16-4">load_dotenv()</span>
<span id="cb16-5"></span>
<span id="cb16-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># openai key</span></span>
<span id="cb16-7">OPENAI_API_KEY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OPENAI_API_KEY"</span>)</span>
<span id="cb16-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> openai</span>
<span id="cb16-9">openai.api_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OPENAI_API_KEY</span>
<span id="cb16-10">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OpenAI()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"></span>
<span id="cb17-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb17-3">  model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span>,</span>
<span id="cb17-4">  messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb17-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: prompt},</span>
<span id="cb17-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: combined_text}</span>
<span id="cb17-7">  ],</span>
<span id="cb17-8">  temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb17-9">  seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb17-10">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#display markdown</span></span>
<span id="cb18-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Markdown, display</span>
<span id="cb18-3">display(Markdown(response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message.content))</span></code></pre></div>
<section id="openais-rapid-advancements-and-community-buzz-a-glimpse-into-the-future-of-ai" class="level1 cell-output cell-output-display">
<h1>OpenAI’s Rapid Advancements and Community Buzz: A Glimpse into the Future of AI</h1>
<p>OpenAI, the artificial intelligence research lab known for its groundbreaking work in the field of AI, has been making waves across social media platforms and online communities. From Twitter to Reddit, users are actively discussing the latest updates, sharing insights, and expressing their opinions on OpenAI’s projects and initiatives. This article delves into the recent buzz surrounding OpenAI, highlighting interesting projects and community reactions.</p>
<section id="interesting-projects" class="level2">
<h2 class="anchored" data-anchor-id="interesting-projects">Interesting Projects</h2>
<section id="whispers-performance-leap" class="level3">
<h3 class="anchored" data-anchor-id="whispers-performance-leap">Whisper’s Performance Leap</h3>
<p>One of the notable advancements that caught the attention of the AI community is the improvement in OpenAI’s Whisper model. Whisper, known for its robust speech-to-text capabilities, has seen a significant boost in performance with the introduction of Speculative Decoding. The processing time for transcribing audio has been nearly halved from 73 seconds to 33 seconds without any drop in accuracy. This enhancement is a testament to OpenAI’s commitment to pushing the boundaries of AI efficiency.</p>
</section>
<section id="gpt-store-and-custom-gpts" class="level3">
<h3 class="anchored" data-anchor-id="gpt-store-and-custom-gpts">GPT Store and Custom GPTs</h3>
<p>OpenAI’s GPT Store has been a hot topic, especially with the introduction of actions to custom GPTs. While some users have expressed concerns about the utility of most GPTs available in the store, others have shared advanced tutorials on how to improve GPTs by incorporating actions. This feature allows developers to rank higher and potentially monetize their custom GPTs, adding a new dimension to AI’s commercial viability.</p>
</section>
<section id="ai-hardware-innovations" class="level3">
<h3 class="anchored" data-anchor-id="ai-hardware-innovations">AI Hardware Innovations</h3>
<p>The AI hardware space is also experiencing disruption, with companies like Humane raising significant funds and OpenAI reportedly raising $1 billion for the development of the “aiPhone.” These developments indicate a shift towards AI-integrated devices that could redefine user interactions with technology.</p>
</section>
<section id="ai-and-copyrighted-material" class="level3">
<h3 class="anchored" data-anchor-id="ai-and-copyrighted-material">AI and Copyrighted Material</h3>
<p>A contentious issue that has emerged is the use of copyrighted materials in training AI models. OpenAI has acknowledged the challenge of creating effective AI tools like ChatGPT without such materials. This has sparked a debate on the ethical and legal implications of AI development, with calls for proper consent and compensation for copyright holders.</p>
</section>
<section id="openais-diverse-team" class="level3">
<h3 class="anchored" data-anchor-id="openais-diverse-team">OpenAI’s Diverse Team</h3>
<p>OpenAI’s diverse team composition has also been a subject of discussion, with the bulk of the team being in their 30s, 40s, and 50s. This diversity is seen as a strength, bringing a wealth of experience and perspectives to the organization’s mission of ensuring that artificial general intelligence benefits all of humanity.</p>
</section>
</section>
<section id="community-reactions" class="level2">
<h2 class="anchored" data-anchor-id="community-reactions">Community Reactions</h2>
<section id="gpt-4-usage-caps-and-dall-e-output" class="level3">
<h3 class="anchored" data-anchor-id="gpt-4-usage-caps-and-dall-e-output">GPT-4 Usage Caps and DALL-E Output</h3>
<p>On platforms like Reddit, users have been vocal about their experiences with OpenAI’s services. Some have noticed tighter usage caps on ChatGPT-4, leading to quicker exhaustion of their allocated resources. Others have inquired about the impact of GPT Plus subscriptions on the speed and quality of DALL-E outputs.</p>
</section>
<section id="implementing-rag-on-document-corpora" class="level3">
<h3 class="anchored" data-anchor-id="implementing-rag-on-document-corpora">Implementing RAG on Document Corpora</h3>
<p>The community has also been seeking best practices for implementing Retrieval-Augmented Generation (RAG) on document corpora with wide-ranging topics. This highlights the growing interest in leveraging OpenAI’s models for complex information retrieval tasks.</p>
</section>
<section id="gpt-stores-selection-process" class="level3">
<h3 class="anchored" data-anchor-id="gpt-stores-selection-process">GPT Store’s Selection Process</h3>
<p>Criticism has been directed at the GPT Store’s selection process, with some users pointing out a lack of vision in featuring unique and useful GPTs. The community has called for a more thoughtful curation process that prioritizes quality and utility over quantity.</p>
</section>
<section id="gpt-auth---authentication-for-custom-gpts" class="level3">
<h3 class="anchored" data-anchor-id="gpt-auth---authentication-for-custom-gpts">GPT Auth - Authentication for Custom GPTs</h3>
<p>An interesting project shared by a community member is GPT Auth, which provides authentication and analytics for custom GPTs. This tool aims to help developers track users and queries, ensuring better management of their AI services.</p>
</section>
<section id="chatgpt-gpt-4-and-assistant-api-distinctions" class="level3">
<h3 class="anchored" data-anchor-id="chatgpt-gpt-4-and-assistant-api-distinctions">ChatGPT, GPT-4, and Assistant API Distinctions</h3>
<p>There’s a growing curiosity about the differences between ChatGPT, GPT-4, and the Assistant API. While GPT-4 is the core language model, ChatGPT and the Assistant API are seen as specialized workflows built around it, each with its unique capabilities and use cases.</p>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>OpenAI continues to be at the forefront of AI research and development, with its projects and updates sparking lively discussions and debates within the tech community. From performance improvements in models like Whisper to the ethical considerations of using copyrighted materials, OpenAI’s work is shaping the future of AI and its integration into our daily lives. As the community engages with these advancements, it’s clear that OpenAI’s mission to benefit all of humanity through AI is a journey that many are keen to be a part of.</p>
</section>
</section>
</div>
<p>We are planning to develop a system that performs several tasks. First, it will convert text into audio using a text-to-speech library. Then, it will leverage the OpenAI Assistants API to call functions that interact with the audio. Additionally, we will use a code interpreter to transform news text into a Word document. Finally, we will utilize the Telegram API to distribute the news via Telegram.</p>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">news_content <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message.content</span></code></pre></div>
</div>
</section>
<section id="creating-text-to-speech" class="level1">
<h1>Creating Text to Speech</h1>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> export_audio(output_file_path):</span>
<span id="cb20-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb20-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Converts given text to speech and saves the output as an audio file.</span></span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb20-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use global text content</span></span>
<span id="cb20-6">    text_content <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> news_content</span>
<span id="cb20-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize the OpenAI client</span></span>
<span id="cb20-8">    client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OpenAI()</span>
<span id="cb20-9"></span>
<span id="cb20-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure the text content does not exceed the character limit</span></span>
<span id="cb20-11">    truncated_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> text_content[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4096</span>]</span>
<span id="cb20-12"></span>
<span id="cb20-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the speech audio from text</span></span>
<span id="cb20-14">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.audio.speech.create(</span>
<span id="cb20-15">        model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tts-1"</span>,</span>
<span id="cb20-16">        voice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alloy"</span>,</span>
<span id="cb20-17">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>truncated_text,</span>
<span id="cb20-18">    )</span>
<span id="cb20-19"></span>
<span id="cb20-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Stream the audio to the specified file</span></span>
<span id="cb20-21">    response.stream_to_file(output_file_path)</span>
<span id="cb20-22"></span></code></pre></div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> nest_asyncio</span>
<span id="cb21-2">nest_asyncio.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> asyncio</span>
<span id="cb22-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> telegram <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Bot</span>
<span id="cb22-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> telegram.error <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> TelegramError</span>
<span id="cb22-4"></span>
<span id="cb22-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> send_telegram_audio(bot_token, chat_id, audio_file_path):</span>
<span id="cb22-6">    bot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Bot(token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bot_token)</span>
<span id="cb22-7"></span>
<span id="cb22-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb22-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(audio_file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> audio_file:</span>
<span id="cb22-10">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> bot.send_audio(chat_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>chat_id, audio<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>audio_file, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'OpenAI MP3'</span>)</span>
<span id="cb22-11">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Telegram audio sent successfully.'</span>)</span>
<span id="cb22-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> TelegramError <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb22-13">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Failed to send Telegram audio: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb22-14"></span>
<span id="cb22-15"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> send_pdf(bot_token, chat_id, pdf_file_path):</span>
<span id="cb22-16">    bot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Bot(token<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bot_token)</span>
<span id="cb22-17"></span>
<span id="cb22-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb22-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(pdf_file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pdf_file:</span>
<span id="cb22-20">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> bot.send_document(chat_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>chat_id, document<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pdf_file)</span>
<span id="cb22-21">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Telegram PDF sent successfully.'</span>)</span>
<span id="cb22-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> TelegramError <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb22-23">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Failed to send Telegram PDF: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb23-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> asyncio</span>
<span id="cb23-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> aiohttp</span>
<span id="cb23-4"></span>
<span id="cb23-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> send_file(bot_token, chat_id, file_path, method):</span>
<span id="cb23-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb23-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Asynchronously sends a file to a Telegram chat.</span></span>
<span id="cb23-8"></span>
<span id="cb23-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param bot_token: Telegram Bot token.</span></span>
<span id="cb23-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param chat_id: Chat ID to send the file to.</span></span>
<span id="cb23-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param file_path: Path of the file to send.</span></span>
<span id="cb23-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param method: Telegram API method for sending the file (e.g., 'sendAudio', 'sendDocument').</span></span>
<span id="cb23-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb23-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> bot_token <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> chat_id:</span>
<span id="cb23-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ValueError</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bot token and chat ID must be provided"</span>)</span>
<span id="cb23-16"></span>
<span id="cb23-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> file_path:</span>
<span id="cb23-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ValueError</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"File path must be provided"</span>)</span>
<span id="cb23-19"></span>
<span id="cb23-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure the file exists to avoid sending a None value</span></span>
<span id="cb23-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.exists(file_path):</span>
<span id="cb23-22">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">FileNotFoundError</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"The file at </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> does not exist"</span>)</span>
<span id="cb23-23"></span>
<span id="cb23-24">    url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://api.telegram.org/bot</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>bot_token<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>method<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb23-25"></span>
<span id="cb23-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> aiohttp.ClientSession() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> session:</span>
<span id="cb23-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rb'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb23-28">            data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb23-29">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chat_id'</span>: chat_id,</span>
<span id="cb23-30">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'audio'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> method <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sendAudio'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'document'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span></span>
<span id="cb23-31">            }</span>
<span id="cb23-32">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb23-33">                response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> session.post(url, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data)</span>
<span id="cb23-34">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> response.json()</span>
<span id="cb23-35">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> exc:</span>
<span id="cb23-36">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to send the file"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> exc</span>
<span id="cb23-37"></span>
<span id="cb23-38"></span>
<span id="cb23-39"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> send_telegram_audio(audio_file_path):</span>
<span id="cb23-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb23-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Sends an audio file to a Telegram chat.</span></span>
<span id="cb23-42"></span>
<span id="cb23-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param audio_file_path: Path of the audio file to send.</span></span>
<span id="cb23-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb23-45">    bot_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TELEGRAM_BOT_TOKEN"</span>)</span>
<span id="cb23-46">    chat_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TELEGRAM_CHAT_ID"</span>)</span>
<span id="cb23-47">    asyncio.run(send_file(bot_token, chat_id, audio_file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sendAudio'</span>))</span>
<span id="cb23-48"></span>
<span id="cb23-49"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> send_telegram_document(word_file_path):</span>
<span id="cb23-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb23-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Sends a document (e.g., Word file) to a Telegram chat.</span></span>
<span id="cb23-52"></span>
<span id="cb23-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param word_file_path: Path of the Word file to send.</span></span>
<span id="cb23-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb23-55">    bot_token <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TELEGRAM_BOT_TOKEN"</span>)</span>
<span id="cb23-56">    chat_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TELEGRAM_CHAT_ID"</span>)</span>
<span id="cb23-57">    asyncio.run(send_file(bot_token, chat_id, word_file_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sendDocument'</span>))</span>
<span id="cb23-58"></span>
<span id="cb23-59"></span>
<span id="cb23-60"></span></code></pre></div>
</div>
<p>First, we’re using the <code>asyncio</code> library, which allows us to write asynchronous functions. This is important because it lets our bot perform tasks like sending files without blocking other operations; the bot can keep running and responding to other users or commands while it handles file transfers.</p>
<p>We have two asynchronous functions here: <code>send_telegram_audio</code> and <code>send_pdf</code>. Both functions take a <code>bot_token</code>, <code>chat_id</code>, and a file path as arguments. The <code>bot_token</code> is a unique identifier we get from Telegram when we create a new bot using BotFather, and it’s used to authenticate our bot with the Telegram servers. The <code>chat_id</code> tells the bot where to send the file, which could be a user or a group chat.</p>
<p>In <code>send_telegram_audio</code>, we’re opening the audio file in read-binary mode and using the <code>send_audio</code> method of the <code>Bot</code> class to send it to the specified chat. We’re setting a title for the audio file as well. If the file is sent successfully, the bot prints a confirmation message. If there’s an error, like a network issue or if the file doesn’t exist, the bot catches the <code>TelegramError</code> exception and prints an error message.</p>
<p>The <code>send_pdf</code> function works similarly, but it uses the <code>send_document</code> method to send a PDF file. Again, if the file is sent successfully, the bot prints a confirmation message, and if there’s an error, it prints an error message.</p>
<p>This code is a simple yet powerful example of how bots can automate the process of sending files over Telegram, making it easier to distribute content like audio messages or documents to users or groups.</p>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install duckduckgo-search</span></span></code></pre></div>
</div>
</section>
<section id="developing-feature-on-url-extraction" class="level1">
<h1>Developing Feature on URL Extraction</h1>
<p>Thanks Meri Nova for the idea on extracting url for the news. This is a very useful feature for the news curation.</p>
<p><img src="https://arunprakash.ai/posts/personalised-news-social-media-openai-assistants-api/twitter_search.png" width="60%"></p>
<p>Extracting URLs from screenshots, especially when they are not fully visible on social media feeds, can be quite challenging. A potential solution to this problem is to leverage DuckDuckGo’s News API to search for the content and extract the URL. In this blog post, I will guide you through creating a simple function that accepts a search query and returns the top URL from the search results.</p>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> duckduckgo_search <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DDGS</span>
<span id="cb25-2"></span>
<span id="cb25-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> DDGS() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ddgs:</span>
<span id="cb25-4">    keywords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chatgpt military ban'</span></span>
<span id="cb25-5">    ddgs_news_gen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ddgs.news(keywords, region<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wt-wt"</span>, safesearch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>, timelimit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"m"</span>, max_results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb25-6">    ddgs_news <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(ddgs_news_gen)</span>
<span id="cb25-7">    </span></code></pre></div>
</div>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">ddgs_news[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="23">
<pre><code>{'date': '2024-01-12T20:32:09+00:00',
 'title': "OpenAI's military ban vanishes",
 'body': "If the military wasn't already surreptitiously using ChatGPT, it's now officially permissioned. Read more.",
 'url': 'https://www.msn.com/en-us/news/technology/openais-military-ban-vanishes/ar-AA1mSS6s',
 'image': 'https://static.seekingalpha.com/cdn/s3/uploads/getty_images/1462188008/image_1462188008.jpg?io=getty-c-w750',
 'source': 'Seeking Alpha on MSN.com'}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> duckduckgo_search <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DDGS</span>
<span id="cb28-2"></span>
<span id="cb28-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_ddg_news_urls(keywords):</span>
<span id="cb28-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb28-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Searches for news on DuckDuckGo and returns a list of URLs.</span></span>
<span id="cb28-6"></span>
<span id="cb28-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    :param keywords: Search keywords.</span></span>
<span id="cb28-8"></span>
<span id="cb28-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb28-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> DDGS() <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ddgs:</span>
<span id="cb28-11">        ddgs_news_gen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ddgs.news(keywords, region<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wt-wt"</span>, safesearch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>, timelimit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"m"</span>, max_results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb28-12">        ddgs_news <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(ddgs_news_gen)</span>
<span id="cb28-13"></span>
<span id="cb28-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [news_result[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'url'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> news_result <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> ddgs_news]</span>
<span id="cb28-15"></span>
<span id="cb28-16"></span>
<span id="cb28-17">keywords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'chatgpt military ban'</span></span>
<span id="cb28-18">news_urls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_ddg_news_urls(keywords)</span>
<span id="cb28-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(news_urls)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>['https://www.msn.com/en-us/news/technology/openais-military-ban-vanishes/ar-AA1mSS6s']</code></pre>
</div>
</div>
</section>
<section id="openai-assistants-api" class="level1">
<h1>OpenAI Assistants API</h1>
<p>Now, we have all the functionalities we need to build our news curation system. We can use the OpenAI Assistants API to create a personalized chatbot that will interact with the user and provide customized content. We use function calling to find url for a news chunk. We can also use the code interpreter to transform news text into a Word document. Finally, we can use the Telegram API to distribute the news via Telegram.</p>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">news_content</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="25">
<pre><code>'# OpenAI\'s Rapid Advancements and Community Buzz: A Glimpse into the Future of AI\n\nOpenAI, the artificial intelligence research lab known for its groundbreaking work in the field of AI, has been making waves across social media platforms and online communities. From Twitter to Reddit, users are actively discussing the latest updates, sharing insights, and expressing their opinions on OpenAI\'s projects and initiatives. This article delves into the recent buzz surrounding OpenAI, highlighting interesting projects and community reactions.\n\n## Interesting Projects\n\n### Whisper\'s Performance Leap\nOne of the notable advancements that caught the attention of the AI community is the improvement in OpenAI\'s Whisper model. Whisper, known for its robust speech-to-text capabilities, has seen a significant boost in performance with the introduction of Speculative Decoding. The processing time for transcribing audio has been nearly halved from 73 seconds to 33 seconds without any drop in accuracy. This enhancement is a testament to OpenAI\'s commitment to pushing the boundaries of AI efficiency.\n\n### GPT Store and Custom GPTs\nOpenAI\'s GPT Store has been a hot topic, especially with the introduction of actions to custom GPTs. While some users have expressed concerns about the utility of most GPTs available in the store, others have shared advanced tutorials on how to improve GPTs by incorporating actions. This feature allows developers to rank higher and potentially monetize their custom GPTs, adding a new dimension to AI\'s commercial viability.\n\n### AI Hardware Innovations\nThe AI hardware space is also experiencing disruption, with companies like Humane raising significant funds and OpenAI reportedly raising $1 billion for the development of the "aiPhone." These developments indicate a shift towards AI-integrated devices that could redefine user interactions with technology.\n\n### AI and Copyrighted Material\nA contentious issue that has emerged is the use of copyrighted materials in training AI models. OpenAI has acknowledged the challenge of creating effective AI tools like ChatGPT without such materials. This has sparked a debate on the ethical and legal implications of AI development, with calls for proper consent and compensation for copyright holders.\n\n### OpenAI\'s Diverse Team\nOpenAI\'s diverse team composition has also been a subject of discussion, with the bulk of the team being in their 30s, 40s, and 50s. This diversity is seen as a strength, bringing a wealth of experience and perspectives to the organization\'s mission of ensuring that artificial general intelligence benefits all of humanity.\n\n## Community Reactions\n\n### GPT-4 Usage Caps and DALL-E Output\nOn platforms like Reddit, users have been vocal about their experiences with OpenAI\'s services. Some have noticed tighter usage caps on ChatGPT-4, leading to quicker exhaustion of their allocated resources. Others have inquired about the impact of GPT Plus subscriptions on the speed and quality of DALL-E outputs.\n\n### Implementing RAG on Document Corpora\nThe community has also been seeking best practices for implementing Retrieval-Augmented Generation (RAG) on document corpora with wide-ranging topics. This highlights the growing interest in leveraging OpenAI\'s models for complex information retrieval tasks.\n\n### GPT Store\'s Selection Process\nCriticism has been directed at the GPT Store\'s selection process, with some users pointing out a lack of vision in featuring unique and useful GPTs. The community has called for a more thoughtful curation process that prioritizes quality and utility over quantity.\n\n### GPT Auth - Authentication for Custom GPTs\nAn interesting project shared by a community member is GPT Auth, which provides authentication and analytics for custom GPTs. This tool aims to help developers track users and queries, ensuring better management of their AI services.\n\n### ChatGPT, GPT-4, and Assistant API Distinctions\nThere\'s a growing curiosity about the differences between ChatGPT, GPT-4, and the Assistant API. While GPT-4 is the core language model, ChatGPT and the Assistant API are seen as specialized workflows built around it, each with its unique capabilities and use cases.\n\n## Conclusion\n\nOpenAI continues to be at the forefront of AI research and development, with its projects and updates sparking lively discussions and debates within the tech community. From performance improvements in models like Whisper to the ethical considerations of using copyrighted materials, OpenAI\'s work is shaping the future of AI and its integration into our daily lives. As the community engages with these advancements, it\'s clear that OpenAI\'s mission to benefit all of humanity through AI is a journey that many are keen to be a part of.'</code></pre>
</div>
</div>
<p>We plan to use a few functions and code interpreter as a tools in our assistant.</p>
<p>So Let’s start with defining JSONs so that our assistant can ask us to call these functions providing arguments.</p>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">tts_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb32-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function"</span>,</span>
<span id="cb32-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function"</span>: {</span>
<span id="cb32-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"export_audio"</span>,</span>
<span id="cb32-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Converts given text to speech and saves the output as an audio file."</span>,</span>
<span id="cb32-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parameters"</span>: {</span>
<span id="cb32-7">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"object"</span>,</span>
<span id="cb32-8">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"properties"</span>: {</span>
<span id="cb32-9">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output_file_path"</span>: {</span>
<span id="cb32-10">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb32-11">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The file path where the audio output will be saved."</span></span>
<span id="cb32-12">                }</span>
<span id="cb32-13">            },</span>
<span id="cb32-14">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output_file_path"</span>]</span>
<span id="cb32-15">        }</span>
<span id="cb32-16">    }</span>
<span id="cb32-17">}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">telegram_audio_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb33-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function"</span>,</span>
<span id="cb33-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function"</span>: {</span>
<span id="cb33-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"send_telegram_audio"</span>,</span>
<span id="cb33-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sends an audio file to a Telegram chat."</span>,</span>
<span id="cb33-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parameters"</span>: {</span>
<span id="cb33-7">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"object"</span>,</span>
<span id="cb33-8">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"properties"</span>: {</span>
<span id="cb33-9">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"audio_file_path"</span>: {</span>
<span id="cb33-10">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb33-11">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Path of the audio file to send."</span></span>
<span id="cb33-12">                }</span>
<span id="cb33-13">            },</span>
<span id="cb33-14">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"audio_file_path"</span>]</span>
<span id="cb33-15">        }</span>
<span id="cb33-16">    }</span>
<span id="cb33-17">}</span>
<span id="cb33-18"> </span></code></pre></div>
</div>
<div class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">telegram_document_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb34-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function"</span>,</span>
<span id="cb34-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function"</span>: {</span>
<span id="cb34-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"send_telegram_document"</span>,</span>
<span id="cb34-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sends a document (e.g., Word file) to a Telegram chat."</span>,</span>
<span id="cb34-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parameters"</span>: {</span>
<span id="cb34-7">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"object"</span>,</span>
<span id="cb34-8">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"properties"</span>: {</span>
<span id="cb34-9">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"word_file_path"</span>: {</span>
<span id="cb34-10">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb34-11">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Path of the Word file to send."</span></span>
<span id="cb34-12">                }</span>
<span id="cb34-13">            },</span>
<span id="cb34-14">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"word_file_path"</span>]</span>
<span id="cb34-15">        }</span>
<span id="cb34-16">    }</span>
<span id="cb34-17">}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1">ddg_search_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb35-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function"</span>,</span>
<span id="cb35-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function"</span>: {</span>
<span id="cb35-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"get_ddg_news_urls"</span>,</span>
<span id="cb35-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Searches for news on DuckDuckGo and returns a list of URLs."</span>,</span>
<span id="cb35-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parameters"</span>: {</span>
<span id="cb35-7">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"object"</span>,</span>
<span id="cb35-8">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"properties"</span>: {</span>
<span id="cb35-9">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"keywords"</span>: {</span>
<span id="cb35-10">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb35-11">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Search keywords."</span></span>
<span id="cb35-12">                }</span>
<span id="cb35-13">            },</span>
<span id="cb35-14">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"keywords"</span>]</span>
<span id="cb35-15">        }</span>
<span id="cb35-16">    }</span>
<span id="cb35-17">}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">available_functions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb36-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"export_audio"</span>: export_audio,</span>
<span id="cb36-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"send_telegram_audio"</span>: send_telegram_audio,</span>
<span id="cb36-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"send_telegram_document"</span>: send_telegram_document,</span>
<span id="cb36-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"get_ddg_news_urls"</span>: get_ddg_news_urls</span>
<span id="cb36-6">}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="31">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1">tools <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb37-2">    tts_json,</span>
<span id="cb37-3">    telegram_audio_json,</span>
<span id="cb37-4">    telegram_document_json,</span>
<span id="cb37-5">    ddg_search_json,</span>
<span id="cb37-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"code_interpreter"</span>}</span>
<span id="cb37-7">]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="32">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1">assistant_instructions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb38-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">You are an News assistant tasked with creating word document, finding url for each news message, </span></span>
<span id="cb38-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">calling relevant functions to send files to telegram.</span></span>
<span id="cb38-4"></span>
<span id="cb38-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">The news is curated from different social media platforms</span></span>
<span id="cb38-6"></span>
<span id="cb38-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">For audio file names and document file names, use the following format:</span></span>
<span id="cb38-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">news.mp3</span></span>
<span id="cb38-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">news.docx</span></span>
<span id="cb38-10"></span>
<span id="cb38-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">For creating word document, use code interpreter. Include all the details from the news along with their urls.</span></span>
<span id="cb38-12"></span>
<span id="cb38-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">I am saving in the current folder, so do not need to specify the path, just the file name.</span></span>
<span id="cb38-14"></span>
<span id="cb38-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">For finding url, just find one url for each news message and store it in a list.</span></span>
<span id="cb38-16"></span>
<span id="cb38-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Then add this in the news documents as read more link.</span></span>
<span id="cb38-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> openai <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> OpenAI</span>
<span id="cb39-2">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OpenAI()</span>
<span id="cb39-3"></span>
<span id="cb39-4">news_assistant <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.assistants.create(</span>
<span id="cb39-5">    description<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"News assistant that summarizes social media content about OpenAI."</span>,</span>
<span id="cb39-6">    instructions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>assistant_instructions,</span>
<span id="cb39-7">    name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"News Curator"</span>,</span>
<span id="cb39-8">    tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tools,</span>
<span id="cb39-9">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span>,</span>
<span id="cb39-10">)</span>
<span id="cb39-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(news_assistant)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Assistant(id='asst_3DC1J7HuUMQmf4sj5PL9a2pz', created_at=1705168872, description='News assistant that summarizes social media content about OpenAI.', file_ids=[], instructions='\nYou are an News assistant tasked with creating word document, finding url for each news message, \ncalling relevant functions to send files to telegram.\n\nThe news is curated from different social media platforms\n\nFor audio file names and document file names, use the following format:\nnews.mp3\nnews.docx\n\nFor creating word document, use code interpreter. Include all the details from the news along with their urls.\n\nI am saving in the current folder, so do not need to specify the path, just the file name.\n\nFor finding url, just find one url for each news message and store it in a list.\n\nThen add this in the news documents as read more link.\n', metadata={}, model='gpt-4-1106-preview', name='News Curator', object='assistant', tools=[ToolFunction(function=FunctionDefinition(name='export_audio', description='Converts given text to speech and saves the output as an audio file.', parameters={'type': 'object', 'properties': {'output_file_path': {'type': 'string', 'description': 'The file path where the audio output will be saved.'}}, 'required': ['output_file_path']}), type='function'), ToolFunction(function=FunctionDefinition(name='send_telegram_audio', description='Sends an audio file to a Telegram chat.', parameters={'type': 'object', 'properties': {'audio_file_path': {'type': 'string', 'description': 'Path of the audio file to send.'}}, 'required': ['audio_file_path']}), type='function'), ToolFunction(function=FunctionDefinition(name='send_telegram_document', description='Sends a document (e.g., Word file) to a Telegram chat.', parameters={'type': 'object', 'properties': {'word_file_path': {'type': 'string', 'description': 'Path of the Word file to send.'}}, 'required': ['word_file_path']}), type='function'), ToolFunction(function=FunctionDefinition(name='get_ddg_news_urls', description='Searches for news on DuckDuckGo and returns a list of URLs.', parameters={'type': 'object', 'properties': {'keywords': {'type': 'string', 'description': 'Search keywords.'}}, 'required': ['keywords']}), type='function'), ToolCodeInterpreter(type='code_interpreter')])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="34">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1"></span>
<span id="cb41-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> run_assistant(assistant_id, thread_id):</span>
<span id="cb41-3">    run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.create(</span>
<span id="cb41-4">        thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread_id,</span>
<span id="cb41-5">        assistant_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>assistant_id,</span>
<span id="cb41-6">    )</span>
<span id="cb41-7"></span>
<span id="cb41-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> run.status <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"queued"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in_progress"</span>]:</span>
<span id="cb41-9">        run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.retrieve(</span>
<span id="cb41-10">            thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread_id,</span>
<span id="cb41-11">            run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb41-12">        )</span>
<span id="cb41-13"></span>
<span id="cb41-14">        display_markdown(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"**Status:** </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>run<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>status<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>)</span>
<span id="cb41-15"></span>
<span id="cb41-16">        time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb41-17"></span>
<span id="cb41-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"requires_action"</span>:</span>
<span id="cb41-19">            </span>
<span id="cb41-20"></span>
<span id="cb41-21">            tool_outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb41-22"></span>
<span id="cb41-23">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> call <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> run.required_action.submit_tool_outputs.tool_calls:</span>
<span id="cb41-24">                function_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> call.function.name</span>
<span id="cb41-25">                function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> available_functions[function_name]</span>
<span id="cb41-26">                arguments <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(call.function.arguments)</span>
<span id="cb41-27"></span>
<span id="cb41-28">                display_markdown(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Now calling function </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>function_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> with arguments </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>arguments<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>)</span>
<span id="cb41-29">                output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> function(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>arguments)</span>
<span id="cb41-30"></span>
<span id="cb41-31">                tool_outputs.append({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: call.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output"</span>: json.dumps(output)})</span>
<span id="cb41-32">            </span>
<span id="cb41-33">            run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.submit_tool_outputs(</span>
<span id="cb41-34">                thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread_id,</span>
<span id="cb41-35">                run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb41-36">                tool_outputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tool_outputs</span>
<span id="cb41-37">            )</span>
<span id="cb41-38"></span>
<span id="cb41-39">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"completed"</span>:</span>
<span id="cb41-40">            msg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread_id)</span>
<span id="cb41-41">            display_markdown(msg.data[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text.value, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>)</span>
<span id="cb41-42">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> msg</span>
<span id="cb41-43"></span>
<span id="cb41-44"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> display_markdown(text, color):</span>
<span id="cb41-45">    color_style <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"&lt;span style='color: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>color<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">;'&gt;</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>text<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/span&gt;"</span></span>
<span id="cb41-46">    display(Markdown(color_style))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="35">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1">thread <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.create()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="36">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1">news_shot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb43-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">News chunk: </span></span>
<span id="cb43-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">GPT Store: A Hub for Custom AI Solutions</span></span>
<span id="cb43-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">The GPT Store, introduced by OpenAI, is a platform where users can discover and create custom versions of GPT models tailored to specific needs. From business operations to data management, the store offers a variety of specialized GPTs that cater to diverse requirements, enabling users to become early adopters of cutting-edge AI technology.</span></span>
<span id="cb43-5"></span>
<span id="cb43-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Search: GPT Store</span></span>
<span id="cb43-7"></span>
<span id="cb43-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DesignerGPT Takes the Lead</span></span>
<span id="cb43-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">The AI community is buzzing with excitement as DesignerGPT, a new tool from OpenAI, has soared to the number one spot in trending topics following its official announcement. This innovative tool is designed to revolutionize the way designers work, offering AI-powered assistance that enhances creativity and efficiency.</span></span>
<span id="cb43-10"></span>
<span id="cb43-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Search: DesignerGPT OpenAI</span></span>
<span id="cb43-12"></span>
<span id="cb43-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="37">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.create(</span>
<span id="cb44-2">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb44-3">    role<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb44-4">    content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"""</span></span>
<span id="cb44-5"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    For the following news content, find all the keywords for each news chunk, then find url.</span></span>
<span id="cb44-6"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    Each news content has 10-15 news chunks, so the search terms should be 10-15 too.</span></span>
<span id="cb44-7"></span>
<span id="cb44-8"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    For firs task, only find all the urls, do not do anything else</span></span>
<span id="cb44-9"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    Example:</span></span>
<span id="cb44-10"></span>
<span id="cb44-11"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    ```</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>news_shot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">```</span></span>
<span id="cb44-12"></span>
<span id="cb44-13"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    News content:</span></span>
<span id="cb44-14"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    ```</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>news_content<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">``</span></span>
<span id="cb44-15"></span>
<span id="cb44-16"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb44-17">    </span>
<span id="cb44-18">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="38">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1">messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> run_assistant(news_assistant.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> requires_action</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: red;">Now calling function get_ddg_news_urls with arguments {‘keywords’: ‘Whisper OpenAI Speculative Decoding’}</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: red;">Now calling function get_ddg_news_urls with arguments {‘keywords’: ‘GPT Store Custom GPTs’}</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: red;">Now calling function get_ddg_news_urls with arguments {‘keywords’: ‘AI Hardware Innovations aiPhone’}</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: red;">Now calling function get_ddg_news_urls with arguments {‘keywords’: ‘OpenAI Copyrighted Material Training AI’}</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: red;">Now calling function get_ddg_news_urls with arguments {‘keywords’: ‘OpenAI Team Diversity’}</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: red;">Now calling function get_ddg_news_urls with arguments {‘keywords’: ‘GPT-4 Usage Caps DALL-E Output’}</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: red;">Now calling function get_ddg_news_urls with arguments {‘keywords’: ‘OpenAI Retrieval-Augmented Generation RAG Document Corpora’}</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: red;">Now calling function get_ddg_news_urls with arguments {‘keywords’: ‘GPT Store Selection Process’}</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: red;">Now calling function get_ddg_news_urls with arguments {‘keywords’: ‘GPT Auth Custom GPTs’}</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: red;">Now calling function get_ddg_news_urls with arguments {‘keywords’: ‘ChatGPT GPT-4 Assistant API differences’}</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> completed</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: green;">I have found URLs for each of the specified news chunks. Here they are:</span></p>
<ol type="1">
<li>Whisper OpenAI Speculative Decoding - <a href="https://www.geeky-gadgets.com/speculative-decoding-what-is-it-and-why-does-it-matter/">Read more</a></li>
<li>GPT Store Custom GPTs - <a href="https://bgr.com/tech/gpt-store-is-out-but-you-need-to-pay-for-chatgpt-to-get-it/">Read more</a></li>
<li>AI Hardware Innovations aiPhone - <a href="https://venturebeat.com/ai/specialized-models-how-ai-is-following-the-path-of-hardware-evolution/">Read more</a></li>
<li>OpenAI Copyrighted Material Training AI - <a href="https://arstechnica.com/information-technology/2024/01/openai-says-its-impossible-to-create-useful-ai-models-without-copyrighted-material/">Read more</a></li>
<li>OpenAI Team Diversity - <a href="https://www.msn.com/en-in/money/news/google-eliminates-hundreds-of-jobs-across-hardware-engineering-teams/ar-AA1mRmd3">Read more</a></li>
<li>GPT-4 Usage Caps DALL-E Output - <a href="https://www.msn.com/en-us/lifestyle/other/google-gemini-vs-gpt-4-which-is-the-best-ai/ar-AA1mtEUt">Read more</a></li>
<li>OpenAI Retrieval-Augmented Generation RAG Document Corpora - <a href="https://www.zdnet.com/article/pinecones-ceo-is-on-a-quest-to-give-ai-something-like-knowledge/">Read more</a></li>
<li>GPT Store Selection Process - <a href="https://www.msn.com/en-us/news/technology/openais-gpt-store-now-offers-a-selection-of-3-million-custom-ai-bots/ar-AA1mEsB6">Read more</a></li>
<li>GPT Auth Custom GPTs - <a href="https://www.msn.com/en-us/news/technology/with-openai-gpt-store-imminent-apps-are-already-being-ripped-off-by-copycats/ar-AA1mIPMO">Read more</a></li>
<li>ChatGPT GPT-4 Assistant API differences - <a href="https://www.msn.com/en-gb/money/technology/openais-chatgpt-reigns-over-microsoft-copilot-on-mobile-even-with-free-access-to-dall-e-3-and-gpt-4/ar-AA1mLysi">Read more</a></li>
</ol>
</div>
</div>
<section id="message-2-create-a-word-document" class="level2">
<h2 class="anchored" data-anchor-id="message-2-create-a-word-document">Message 2: Create a word document</h2>
<p>I am creating one more assistant specialised in creating word documents.</p>
<p>The main reason is, I tried to use the same previous assistant to create word document, but it did not return any file in the annotations.</p>
<div class="cell" data-execution_count="39">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1">assistant_doc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.assistants.create(</span>
<span id="cb46-2">    name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"News Word Document Creater Assistant"</span>,</span>
<span id="cb46-3">    instructions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""You are a helpful assistant that creates word document with the full news along with their urls for read more</span></span>
<span id="cb46-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    Do not miss any information.</span></span>
<span id="cb46-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span>,</span>
<span id="cb46-6">    tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"code_interpreter"</span>}],</span>
<span id="cb46-7">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span>,</span>
<span id="cb46-8"></span>
<span id="cb46-9">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="40">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># new message</span></span>
<span id="cb47-2">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.create(</span>
<span id="cb47-3">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb47-4">    role<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb47-5">    content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Create a word document with the news content and their urls. Save the file as news.docx"</span></span>
<span id="cb47-6">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="41">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb48-1">messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> run_assistant(assistant_doc.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> completed</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: green;">The news content has been compiled into a Word document, and the file <code>news.docx</code> has been saved. You can download it from the link below:</span></p>
<p><a href="sandbox:/mnt/data/news.docx">Download news.docx</a></p>
</div>
</div>
<div class="cell" data-execution_count="42">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1">file_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> messages.data[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text.annotations[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].file_path.file_id</span></code></pre></div>
</div>
<div class="cell" data-execution_count="43">
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb50-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> write_file_to_temp_dir(file_id, output_path):</span>
<span id="cb50-2">    file_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> openai.files.content(file_id)</span>
<span id="cb50-3">    file_data_bytes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> file_data.read()</span>
<span id="cb50-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(output_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wb"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb50-5">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.write(file_data_bytes)</span>
<span id="cb50-6"></span>
<span id="cb50-7">news_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'news.docx'</span></span>
<span id="cb50-8"></span>
<span id="cb50-9">write_file_to_temp_dir(file_id, news_file)</span></code></pre></div>
</div>
</section>
</section>
<section id="display-the-news-document" class="level1">
<h1>Display the news document</h1>
<p><img src="https://arunprakash.ai/posts/personalised-news-social-media-openai-assistants-api/s1.PNG" width="60%"> <img src="https://arunprakash.ai/posts/personalised-news-social-media-openai-assistants-api/s2.PNG" width="60%"> <img src="https://arunprakash.ai/posts/personalised-news-social-media-openai-assistants-api/s3.PNG" width="60%"></p>
</section>
<section id="message-3-send-telegram-message" class="level1">
<h1>Message 3: Send Telegram Message</h1>
<p>Sending the audio file and the news document to the telegram message.</p>
<div class="cell" data-execution_count="44">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># new message</span></span>
<span id="cb51-2">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.create(</span>
<span id="cb51-3">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb51-4">    role<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb51-5">    content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"news document is saved as </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>news_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, now send both the audio file and the document file to telegram. Both the files are already saved in the current folder."</span></span>
<span id="cb51-6">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="45">
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb52-1">messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> run_assistant(news_assistant.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> requires_action</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: red;">Now calling function send_telegram_audio with arguments {‘audio_file_path’: ‘news.mp3’}</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: red;">Now calling function send_telegram_document with arguments {‘word_file_path’: ‘news.docx’}</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> in_progress</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: blue;"><strong>Status:</strong> completed</span></p>
</div>
<div class="cell-output cell-output-display">
<p><span style="color: green;">Both the audio file <code>news.mp3</code> and the document <code>news.docx</code> have been sent to Telegram successfully.</span></p>
</div>
</div>
<p><img src="https://arunprakash.ai/posts/personalised-news-social-media-openai-assistants-api/telegram.PNG" width="30%"></p>
<p>Yes, I have received it successfully. Yayy!</p>
<p>I hope you enjoyed the project. Please Follow me on <a href="https://twitter.com/arunprakashml" target="_blank">Twitter</a> or <a href="https://www.linkedin.com/in/arunprakashtce/" target="_blank">LinkedIn</a> for more interesting projects and updates.</p>



</section>

<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>llm</category>
  <category>openai</category>
  <category>function_calling</category>
  <category>openai_assistants_api</category>
  <category>handson</category>
  <guid>https://arunprakash.ai/posts/personalised-news-social-media-openai-assistants-api/news_assistant_tools.html</guid>
  <pubDate>Sat, 13 Jan 2024 14:00:00 GMT</pubDate>
  <media:content url="https://arunprakash.ai/posts/personalised-news-social-media-openai-assistants-api/0_0.webp" medium="image" type="image/webp"/>
</item>
<item>
  <title>Transform Your Travel: How to Build a Personalised Planner with OpenAI Assistants API</title>
  <dc:creator>Arun Prakash</dc:creator>
  <link>https://arunprakash.ai/posts/building_a_personalised_travel_planner_using_openai_assistants_api/tourist_assistant_tools.html</link>
  <description><![CDATA[ 




<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/building_a_personalised_travel_planner_using_openai_assistants_api/travel2.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Voyage Vista</figcaption>
</figure>
</div>
<p>Welcome to our tutorial on “Building a Personalised Travel Planner using OpenAI Assistants APIs”. In this blog post, we will guide you through the process of creating “Voyage Vista”, a travel planning tool that uses OpenAI Assistants APIs to bring your dream vacation to life.</p>
<section id="voyage-vista-your-personal-travel-planner" class="level2">
<h2 class="anchored" data-anchor-id="voyage-vista-your-personal-travel-planner">Voyage Vista: Your Personal Travel Planner</h2>
<p>Voyage Vista is designed to make travel planning an immersive and enjoyable experience. It provides real-time weather updates, lists top tourist attractions, and offers customized travel guides, all with the aim of helping you create unforgettable memories.</p>
<section id="key-features" class="level3">
<h3 class="anchored" data-anchor-id="key-features">Key Features</h3>
<ul>
<li><strong>Interactive Map:</strong> Voyage Vista’s map provides real-time weather updates with intuitive color-coded indicators, making it easy to plan your day.</li>
<li><strong>Customized Itineraries:</strong> Voyage Vista generates a detailed Word document that serves as your travel guide, filled with historical and cultural insights about your destination.</li>
<li><strong>Real-Time Weather Forecasts:</strong> Weather forecasts are displayed on an interactive map, helping you plan your day perfectly.</li>
<li><strong>Top Tourist Attractions:</strong> Voyage Vista ensures you don’t miss out on any highlights by listing the must-see spots of your chosen destination.</li>
</ul>
</section>
</section>
<section id="leveraging-openai-assistants-apis" class="level2">
<h2 class="anchored" data-anchor-id="leveraging-openai-assistants-apis">Leveraging OpenAI Assistants APIs</h2>
<p>In the development of Voyage Vista, we will be using several features of the OpenAI Assistants APIs:</p>
<ul>
<li><strong>Parallel Function Calling:</strong> This feature allows us to execute multiple functions simultaneously, improving the efficiency of our application.</li>
<li><strong>Code Interpreter:</strong> The Code Interpreter feature will be instrumental in processing and interpreting the data and generate word documents and other processing data.</li>
<li><strong>Threads:</strong> Threads allow us to manage multiple conversations or tasks concurrently, which is useful for handling multiple user requests at the same time.</li>
<li><strong>Messages:</strong> The Messages feature will be used to communicate with users, providing them with real-time updates and responses to their queries.</li>
</ul>
<p>By leveraging these features, we aim to create a dynamic, efficient, and user-friendly travel planning tool. In the following sections of this tutorial, we will delve deeper into each of these features and show you how to use them to build your own version of Voyage Vista</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dotenv <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dotenv</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> openai</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> openai <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> OpenAI</span>
<span id="cb1-6">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OpenAI()</span>
<span id="cb1-7">load_dotenv()</span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># openai key</span></span>
<span id="cb1-9">OPENAI_API_KEY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OPENAI_API_KEY"</span>)</span>
<span id="cb1-10">openai.api_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OPENAI_API_KEY</span>
<span id="cb1-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> display, Markdown</span>
<span id="cb1-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb1-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plotly.io <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pio</span>
<span id="cb1-14">pio.renderers.default <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"notebook"</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(openai.__version__)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>1.7.0</code></pre>
</div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plotly.graph_objects <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> go</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> requests</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_coordinates(place_name, city_name):</span>
<span id="cb4-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Fetches coordinates of a place using Nominatim API."""</span></span>
<span id="cb4-6">    url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://nominatim.openstreetmap.org/search?format=json&amp;q=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>place_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>city_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-7">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(url)</span>
<span id="cb4-8">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response.json()</span>
<span id="cb4-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> data:</span>
<span id="cb4-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(data[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lat'</span>]), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(data[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lon'</span>])</span>
<span id="cb4-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb4-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
</div>
<p>This function takes a place name and city name and retrieve coordinates using nominatim API. It returns a tuple of latitude and longitude.</p>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> create_city_map(city_name, attractions, is_rainy):</span>
<span id="cb5-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> attractions:</span>
<span id="cb5-3">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"No attractions found for </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>city_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb5-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb5-5"></span>
<span id="cb5-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prepare lists for latitudes and longitudes</span></span>
<span id="cb5-7">    lats, lons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [], []</span>
<span id="cb5-8"></span>
<span id="cb5-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add markers for each attraction</span></span>
<span id="cb5-10">    markers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb5-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> index, place <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(attractions):</span>
<span id="cb5-12">        lat, lon <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_coordinates(place, city_name)</span>
<span id="cb5-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> lat <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> lon:</span>
<span id="cb5-14">            lats.append(lat)</span>
<span id="cb5-15">            lons.append(lon)</span>
<span id="cb5-16">            marker_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> is_rainy[index].lower() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'yes'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span></span>
<span id="cb5-17">            markers.append(go.Scattermapbox(</span>
<span id="cb5-18">                lon <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [lon],</span>
<span id="cb5-19">                lat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [lat],</span>
<span id="cb5-20">                mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'markers+text'</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Combine markers and text</span></span>
<span id="cb5-21">                marker <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> go.scattermapbox.Marker(size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>marker_color),</span>
<span id="cb5-22">                text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">. </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>place<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>],</span>
<span id="cb5-23">                textposition <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top right"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Position of the text,</span></span>
<span id="cb5-24">                name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>place</span>
<span id="cb5-25">            ))</span>
<span id="cb5-26"></span>
<span id="cb5-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a Plotly map</span></span>
<span id="cb5-28">    city_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> go.Figure(markers)</span>
<span id="cb5-29"></span>
<span id="cb5-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Automatically adjust the zoom to fit all markers</span></span>
<span id="cb5-31">    city_map.update_layout(</span>
<span id="cb5-32">        mapbox_style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"open-street-map"</span>,</span>
<span id="cb5-33">        mapbox <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb5-34">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>: go.layout.mapbox.Center(lat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(lats) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(lats), lon<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(lons) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(lons)),</span>
<span id="cb5-35">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'zoom'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust this value for best fit</span></span>
<span id="cb5-36">        },</span>
<span id="cb5-37">        margin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t"</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l"</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>}</span>
<span id="cb5-38">    )</span>
<span id="cb5-39"></span>
<span id="cb5-40">    city_map.show()</span>
<span id="cb5-41"></span>
<span id="cb5-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save the map to png file</span></span>
<span id="cb5-43">    city_map.write_image(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>city_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png'</span>)</span>
<span id="cb5-44"></span>
<span id="cb5-45">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'png'</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>city_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png'</span>}</span>
<span id="cb5-46"></span>
<span id="cb5-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dummy data</span></span>
<span id="cb5-48">city_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'London'</span></span>
<span id="cb5-49">attractions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'London Eye'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Buckingham Palace'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'British Museum'</span>]</span>
<span id="cb5-50">is_rainy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Yes'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'No'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'No'</span>]</span>
<span id="cb5-51"></span>
<span id="cb5-52">create_city_map(city_name, attractions, is_rainy)</span></code></pre></div>
<div class="cell-output cell-output-display">

<div>                            <div id="90e2ebf5-f214-4bf7-86a9-55eab5ee6004" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("90e2ebf5-f214-4bf7-86a9-55eab5ee6004")) {                    Plotly.newPlot(                        "90e2ebf5-f214-4bf7-86a9-55eab5ee6004",                        [{"lat":[51.5033416],"lon":[-0.11967649999999999],"marker":{"color":"red","size":14},"mode":"markers+text","name":"London Eye","text":["1. London Eye"],"textposition":"top right","type":"scattermapbox"},{"lat":[51.5008349],"lon":[-0.1430045264505431],"marker":{"color":"blue","size":14},"mode":"markers+text","name":"Buckingham Palace","text":["2. Buckingham Palace"],"textposition":"top right","type":"scattermapbox"},{"lat":[51.51929365],"lon":[-0.12801772178494725],"marker":{"color":"blue","size":14},"mode":"markers+text","name":"British Museum","text":["3. British Museum"],"textposition":"top right","type":"scattermapbox"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"mapbox":{"style":"open-street-map","center":{"lat":51.50782338333334,"lon":-0.13023291607849677},"zoom":10},"margin":{"r":0,"t":0,"l":0,"b":0}},                        {"responsive": true}                    ).then(function(){
                            
var gd = document.getElementById('90e2ebf5-f214-4bf7-86a9-55eab5ee6004');
var x = new MutationObserver(function (mutations, observer) {{
        var display = window.getComputedStyle(gd).display;
        if (!display || display === 'none') {{
            console.log([gd, 'removed!']);
            Plotly.purge(gd);
            observer.disconnect();
        }}
}});

// Listen for the removal of the full notebook cells
var notebookContainer = gd.closest('#notebook-container');
if (notebookContainer) {{
    x.observe(notebookContainer, {childList: true});
}}

// Listen for the clearing of the current output cell
var outputEl = gd.closest('.output');
if (outputEl) {{
    x.observe(outputEl, {childList: true});
}}

                        })                };                });            </script>        </div>
</div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>{'png': 'London.png'}</code></pre>
</div>
</div>
<p><code>create_city_map</code> function is helpfule to plot the map of tourist attractions, it also takes weather information such as is_raining and color code the map accordingly.</p>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install -U kaleido</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">api_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OPENWEATHER_API_KEY"</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> requests</span>
<span id="cb9-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb9-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb9-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime</span>
<span id="cb9-5"></span>
<span id="cb9-6"></span>
<span id="cb9-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_weather(location, date, unit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metric"</span>, use_coordinates<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>):</span>
<span id="cb9-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Get weather for a given location and date using OpenWeather API."""</span></span>
<span id="cb9-9">    current_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime.now().date()</span>
<span id="cb9-10">    requested_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime.strptime(date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y-%m-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>).date()</span>
<span id="cb9-11"></span>
<span id="cb9-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> requested_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> current_date:</span>
<span id="cb9-13">        endpoint <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weather"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Current weather</span></span>
<span id="cb9-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> requested_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> current_date:</span>
<span id="cb9-15">        endpoint <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb9-16">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"timemachine"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Historical weather (requires different API subscription)</span></span>
<span id="cb9-17">        )</span>
<span id="cb9-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb9-19">        endpoint <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"forecast"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Future weather (limited to 5-16 days based on API plan)</span></span>
<span id="cb9-20"></span>
<span id="cb9-21">    base_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"http://api.openweathermap.org/data/2.5/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>endpoint<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb9-22"></span>
<span id="cb9-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> use_coordinates:</span>
<span id="cb9-24">        params <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb9-25">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lat"</span>: location[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],</span>
<span id="cb9-26">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lon"</span>: location[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb9-27">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"appid"</span>: api_key,</span>
<span id="cb9-28">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"units"</span>: unit,</span>
<span id="cb9-29">        }</span>
<span id="cb9-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb9-31">        params <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"q"</span>: location, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"appid"</span>: api_key, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"units"</span>: unit}</span>
<span id="cb9-32"></span>
<span id="cb9-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> endpoint <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"timemachine"</span>:</span>
<span id="cb9-34">        params[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dt"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(requested_date.timestamp())</span>
<span id="cb9-35"></span>
<span id="cb9-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb9-37">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(base_url, params<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>params)</span>
<span id="cb9-38">        response.raise_for_status()</span>
<span id="cb9-39">        data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response.json()</span>
<span id="cb9-40"></span>
<span id="cb9-41">        weather <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb9-42">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"location"</span>: location,</span>
<span id="cb9-43">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span>: date,</span>
<span id="cb9-44">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unit"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Celsius"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> unit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metric"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fahrenheit"</span>,</span>
<span id="cb9-45">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"temperature"</span>: data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"list"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"main"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"temp"</span>],</span>
<span id="cb9-46">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"humidity"</span>: data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"list"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"main"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"humidity"</span>],</span>
<span id="cb9-47">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wind_speed"</span>: data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"list"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wind"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"speed"</span>],</span>
<span id="cb9-48">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"list"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weather"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>],</span>
<span id="cb9-49">        }</span>
<span id="cb9-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># weather.update(data["list"][0])</span></span>
<span id="cb9-51">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> json.dumps(weather, indent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb9-52">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">KeyError</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> err:</span>
<span id="cb9-53">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for current date</span></span>
<span id="cb9-54">        response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(base_url, params<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>params)</span>
<span id="cb9-55">        response.raise_for_status()</span>
<span id="cb9-56">        data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response.json()</span>
<span id="cb9-57">        weather <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb9-58">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"location"</span>: location,</span>
<span id="cb9-59">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span>: date,</span>
<span id="cb9-60">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unit"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Celsius"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> unit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metric"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fahrenheit"</span>,</span>
<span id="cb9-61">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"temperature"</span>: data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"main"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"temp"</span>],</span>
<span id="cb9-62">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"humidity"</span>: data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"main"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"humidity"</span>],</span>
<span id="cb9-63">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wind_speed"</span>: data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wind"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"speed"</span>],</span>
<span id="cb9-64">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weather"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>],</span>
<span id="cb9-65">        }</span>
<span id="cb9-66">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> json.dumps(weather, indent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb9-67">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> requests.exceptions.HTTPError <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> err:</span>
<span id="cb9-68">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> json.dumps({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"HTTP Error: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>err<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>})</span>
<span id="cb9-69">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span> requests.exceptions.RequestException <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb9-70">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> json.dumps({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Request Error: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>})</span>
<span id="cb9-71"></span>
<span id="cb9-72"></span>
<span id="cb9-73">weather_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_weather(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kyoto"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-01-11"</span>)</span>
<span id="cb9-74"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(weather_info)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{
    "location": "Kyoto",
    "date": "2024-01-11",
    "unit": "Celsius",
    "temperature": 6.17,
    "humidity": 78,
    "wind_speed": 2.36,
    "description": "overcast clouds"
}</code></pre>
</div>
</div>
<p>The <code>get_weather</code> function for fetching weather information for a specific location and date using the OpenWeather API. It handles current, historical, and future weather data. The script is designed to process requests for specific dates and locations, returning a JSON formatted output with details like temperature, humidity, wind speed, and a weather description.</p>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># find location and weather details</span></span>
<span id="cb11-2"></span>
<span id="cb11-3">place_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fushimi Inari-taisha Shrine, Kyoto"</span></span>
<span id="cb11-4">lat, lon <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_coordinates(place_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kyoto"</span>)</span>
<span id="cb11-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Coordinates of </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>place_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>lat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>lon<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-6"></span>
<span id="cb11-7">weather_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_weather((lat, lon), use_coordinates<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, date<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-01-11"</span>)</span>
<span id="cb11-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(weather_info)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Coordinates of Fushimi Inari-taisha Shrine, Kyoto: 34.9672545, 135.7737731
{
    "location": [
        34.9672545,
        135.7737731
    ],
    "date": "2024-01-11",
    "unit": "Celsius",
    "temperature": 6.24,
    "humidity": 77,
    "wind_speed": 2.06,
    "description": "overcast clouds"
}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">weather_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_weather((lat, lon), use_coordinates<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, date<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2024-01-10"</span>)</span>
<span id="cb13-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(weather_info)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{
    "location": [
        34.9672545,
        135.7737731
    ],
    "date": "2024-01-10",
    "unit": "Celsius",
    "temperature": 7.22,
    "humidity": 78,
    "wind_speed": 0.45,
    "description": "overcast clouds"
}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">city_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kyoto"</span></span></code></pre></div>
</div>
</section>
<section id="create-an-travelplanner-assistant" class="level1">
<h1>Create an TravelPlanner Assistant</h1>
<p>We plan to use a few functions and code interpreter as a tools in our assistant.</p>
<p>So Let’s start with defining JSONs so that our assistant can ask us to call these functions providing arguments.</p>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">get_coordinates_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb16-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function"</span>,</span>
<span id="cb16-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function"</span>: {</span>
<span id="cb16-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"get_coordinates"</span>,</span>
<span id="cb16-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fetches coordinates of a place using Nominatim API."</span>,</span>
<span id="cb16-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parameters"</span>: {</span>
<span id="cb16-7">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"object"</span>,</span>
<span id="cb16-8">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"properties"</span>: {</span>
<span id="cb16-9">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"place_name"</span>: {</span>
<span id="cb16-10">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb16-11">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The name of the specific place."</span></span>
<span id="cb16-12">                },</span>
<span id="cb16-13">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"city_name"</span>: {</span>
<span id="cb16-14">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb16-15">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The name of the city where the place is located."</span></span>
<span id="cb16-16">                }</span>
<span id="cb16-17">            },</span>
<span id="cb16-18">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"place_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"city_name"</span>]</span>
<span id="cb16-19">        }</span>
<span id="cb16-20">    }</span>
<span id="cb16-21">}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">create_city_map_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb17-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function"</span>,</span>
<span id="cb17-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function"</span>: {</span>
<span id="cb17-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"create_city_map"</span>,</span>
<span id="cb17-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Creates a map with markers for specified attractions in a city."</span>,</span>
<span id="cb17-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parameters"</span>: {</span>
<span id="cb17-7">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"object"</span>,</span>
<span id="cb17-8">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"properties"</span>: {</span>
<span id="cb17-9">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"city_name"</span>: {</span>
<span id="cb17-10">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb17-11">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The name of the city."</span></span>
<span id="cb17-12">                },</span>
<span id="cb17-13">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"attractions"</span>: {</span>
<span id="cb17-14">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"array"</span>,</span>
<span id="cb17-15">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"items"</span>: {</span>
<span id="cb17-16">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span></span>
<span id="cb17-17">                    },</span>
<span id="cb17-18">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A list of attraction names in the city."</span></span>
<span id="cb17-19">                },</span>
<span id="cb17-20">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"is_rainy"</span>: {</span>
<span id="cb17-21">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"array"</span>,</span>
<span id="cb17-22">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"items"</span>: {</span>
<span id="cb17-23">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span></span>
<span id="cb17-24">                    },</span>
<span id="cb17-25">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A list of strings indicating whether it is rainy for each attraction."</span></span>
<span id="cb17-26">                }</span>
<span id="cb17-27">            },</span>
<span id="cb17-28">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"city_name"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"attractions"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"is_rainy"</span>]</span>
<span id="cb17-29">        }</span>
<span id="cb17-30">    }</span>
<span id="cb17-31">}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">get_weather_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb18-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function"</span>,</span>
<span id="cb18-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function"</span>: {</span>
<span id="cb18-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"get_weather"</span>,</span>
<span id="cb18-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Get weather for a given location and date using OpenWeather API."</span>,</span>
<span id="cb18-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parameters"</span>: {</span>
<span id="cb18-7">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"object"</span>,</span>
<span id="cb18-8">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"properties"</span>: {</span>
<span id="cb18-9">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"location"</span>: {</span>
<span id="cb18-10">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"oneOf"</span>: [</span>
<span id="cb18-11">                        {</span>
<span id="cb18-12">                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb18-13">                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The location name for which weather information is required."</span></span>
<span id="cb18-14">                        },</span>
<span id="cb18-15">                        {</span>
<span id="cb18-16">                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"array"</span>,</span>
<span id="cb18-17">                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"items"</span>: {</span>
<span id="cb18-18">                                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"number"</span></span>
<span id="cb18-19">                            },</span>
<span id="cb18-20">                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"minItems"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb18-21">                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"maxItems"</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb18-22">                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The coordinates (latitude, longitude) for which weather information is required."</span></span>
<span id="cb18-23">                        }</span>
<span id="cb18-24">                    ]</span>
<span id="cb18-25">                },</span>
<span id="cb18-26">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span>: {</span>
<span id="cb18-27">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb18-28">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The date for the weather forecast in YYYY-MM-DD format."</span></span>
<span id="cb18-29">                },</span>
<span id="cb18-30">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unit"</span>: {</span>
<span id="cb18-31">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb18-32">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enum"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metric"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"imperial"</span>],</span>
<span id="cb18-33">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The unit for temperature (metric or imperial)."</span></span>
<span id="cb18-34">                },</span>
<span id="cb18-35">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"use_coordinates"</span>: {</span>
<span id="cb18-36">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"boolean"</span>,</span>
<span id="cb18-37">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Flag to use coordinates instead of location name."</span></span>
<span id="cb18-38">                }</span>
<span id="cb18-39">            },</span>
<span id="cb18-40">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"location"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"use_coordinates"</span>]</span>
<span id="cb18-41">        }</span>
<span id="cb18-42">    }</span>
<span id="cb18-43">}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">available_functions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb19-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"get_coordinates"</span>: get_coordinates,</span>
<span id="cb19-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"create_city_map"</span>: create_city_map,</span>
<span id="cb19-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"get_weather"</span>: get_weather</span>
<span id="cb19-5">}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">tools <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb20-2">    get_coordinates_json,</span>
<span id="cb20-3">    create_city_map_json,</span>
<span id="cb20-4">    get_weather_json,</span>
<span id="cb20-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"code_interpreter"</span>}</span>
<span id="cb20-6">]</span></code></pre></div>
</div>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">instructions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""You are a personal travel assistant.You use available functions to help your user plan their trip.</span></span>
<span id="cb21-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Create inputs to the functions carefully. If you could not find the available functions,</span></span>
<span id="cb21-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">you can use your own knowledge to help your user.Sometimes you have to use parallel functions to get the desired output</span></span>
<span id="cb21-4"></span>
<span id="cb21-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Find the exact date they are planning to visit and use that information for getting current weather.</span></span>
<span id="cb21-6"></span>
<span id="cb21-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">To do plotting, we need coordinates, current weather and tourist attractions.</span></span>
<span id="cb21-8"></span>
<span id="cb21-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">so for plotting maps,  first get coordinates of each tourist attractions that you suggest, then get current weather and then do the plotting of map.mro</span></span>
<span id="cb21-10"></span>
<span id="cb21-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">We are color coding the markers based on weather condition. If it is rainy, we use red color, otherwise blue. This is helpful for the user to plan their trip accordingly.</span></span>
<span id="cb21-12"></span>
<span id="cb21-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">assistant <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.assistants.create(</span>
<span id="cb22-2">    name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Travel Assistant"</span>,</span>
<span id="cb22-3">    instructions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>instructions,</span>
<span id="cb22-4">    tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tools,</span>
<span id="cb22-5">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span></span>
<span id="cb22-6">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb23-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span>,</span>
<span id="cb23-3">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb23-4">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"What's the today's date, return date: YYYY-MM-DD in json"</span>},</span>
<span id="cb23-5">    ],</span>
<span id="cb23-6">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>,</span>
<span id="cb23-7">    seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb23-8">    response_format<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"json_object"</span>},</span>
<span id="cb23-9">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">current_date <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message.content)</span>
<span id="cb24-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(current_date)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{'date': '2023-04-06'}</code></pre>
</div>
</div>
<p>We tried to find the current date from the <code>ChatCompletion</code> model, which failed to give us the correct date. So, adding a code interpreter to get the current date will be helpful.</p>
</section>
<section id="create-a-thread" class="level1">
<h1>Create a Thread</h1>
<ul>
<li>Threads are stateful.</li>
<li>A thread can be assosciated with many assistants</li>
<li>We can add messages to the thread.</li>
<li>Code interpreter and other tools can add messages to a thread</li>
</ul>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">thread <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.create()</span></code></pre></div>
</div>
</section>
<section id="message-1-city-information-attractions-weather-and-map" class="level1">
<h1>Message 1: City Information, Attractions, Weather, and Map</h1>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># adding personalisation</span></span>
<span id="cb27-2">preferences <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"temples, gardens, museums, food"</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.create(</span>
<span id="cb28-2">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb28-3">    role<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb28-4">    content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"""I am planning a visit to </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>city_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> today and would appreciate detailed information about the city.</span></span>
<span id="cb28-5"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    Please provide an overview of the location(20-30 words each), and list the top 10 tourist attractions. Additionally, could you include the current date and weather forecast for each attraction? Utilize the code interpreter to retrieve the current date in the city location.</span></span>
<span id="cb28-6"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    Kindly organize the attractions in a sequence that facilitates an efficient visiting route.</span></span>
<span id="cb28-7"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb28-8"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    Attraction focus preferences: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>preferences<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb28-9"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb28-10"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb28-11">)</span></code></pre></div>
</div>
<p>So far we added messages to a thread, to get the response from the model, we should create a Run.</p>
<p>Runs are asynchronous.</p>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.create(</span>
<span id="cb29-2">  thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb29-3">  assistant_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>assistant.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb29-4">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.retrieve(</span>
<span id="cb30-2">  thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb30-3">  run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb30-4">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">run.status</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="25">
<pre><code>'in_progress'</code></pre>
</div>
</div>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"queued"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in_progress"</span>:</span>
<span id="cb33-2">    run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.retrieve(</span>
<span id="cb33-3">      thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb33-4">      run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb33-5">    )</span>
<span id="cb33-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(run.status)</span>
<span id="cb33-7">    time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb33-8">    </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
requires_action</code></pre>
</div>
</div>
<div class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1">messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb35-2">  thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb35-3">)</span>
<span id="cb35-4"></span>
<span id="cb35-5">messages</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="27">
<pre><code>SyncCursorPage[ThreadMessage](data=[ThreadMessage(id='msg_fLewruXXNrfKUrjUwCKlmcVQ', assistant_id='asst_LacvLlXSc8oG1sM5eIk4CY4D', content=[MessageContentText(text=Text(annotations=[], value="The current date in Kyoto is January 10, 2024.\n\nKyoto is a city that harmoniously blends centuries of history with modern culture. It was Japan's capital for over a millennium, leaving it with numerous temples, shrines, and traditional tea houses.\n\nHere are the top 10 tourist attractions in Kyoto, with a focus on temples, gardens, museums, and food:\n\n**Temples and Gardens:**\n1. **Kinkaku-ji (Golden Pavilion):** A Zen temple with top floors covered entirely in gold leaf, set beside a tranquil pond.\n2. **Fushimi Inari Taisha:** A Shinto shrine famous for its thousands of vermilion torii gates leading up to Mount Inari.\n3. **Ginkaku-ji (Silver Pavilion):** A Zen temple known for its beautiful sand garden and moss garden, despite not being covered in silver.\n4. **Arashiyama Bamboo Grove:** A natural forest of bamboo in Arashiyama, providing a unique and picturesque walking experience.\n5. **Ryoan-ji:** A Zen temple with one of Japan's most famous rock gardens.\n6. **Tofuku-ji:** A large Zen temple in southeastern Kyoto, renowned for its spectacular autumn colors and large garden complex.\n\n**Museums:**\n7. **Kyoto International Manga Museum:** A museum dedicated to the art of Japanese manga, with extensive collections and exhibitions.\n\n**Food Experience:**\n8. **Nishiki Market:** A vibrant and historic market with a variety of food-related shops and eateries offering local Japanese cuisine.\n9. **Pontocho Alley:** A historic and atmospheric dining area along the Pontocho geographic feature, known for its traditional dining establishments.\n10. **Gion:** Kyoto's most famous geisha district, offering a glimpse into traditional Japanese entertainment and fine dining.\n\nNow I will get the coordinates for each of these attractions and then retrieve the current weather forecast for each location for today."), type='text')], created_at=1704878735, file_ids=[], metadata={}, object='thread.message', role='assistant', run_id='run_mwlAc83GMWAwvaxohUbHDwz7', thread_id='thread_RLEZYpAQcB654HqzZipvzxtd'), ThreadMessage(id='msg_gYoCCX8t88p9aLECqTuJx2yz', assistant_id=None, content=[MessageContentText(text=Text(annotations=[], value='I am planning a visit to Kyoto today and would appreciate detailed information about the city.\n    Please provide an overview of the location(20-30 words each), and list the top 10 tourist attractions. Additionally, could you include the current date and weather forecast for each attraction? Utilize the code interpreter to retrieve the current date in the city location.\n    Kindly organize the attractions in a sequence that facilitates an efficient visiting route.\n    \n    Attraction focus preferences: temples, gardens, museums, food\n    \n    '), type='text')], created_at=1704878722, file_ids=[], metadata={}, object='thread.message', role='user', run_id=None, thread_id='thread_RLEZYpAQcB654HqzZipvzxtd')], object='list', first_id='msg_fLewruXXNrfKUrjUwCKlmcVQ', last_id='msg_gYoCCX8t88p9aLECqTuJx2yz', has_more=False)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1">display(Markdown(messages.data[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text.value))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>The current date in Kyoto is January 10, 2024.</p>
<p>Kyoto is a city that harmoniously blends centuries of history with modern culture. It was Japan’s capital for over a millennium, leaving it with numerous temples, shrines, and traditional tea houses.</p>
<p>Here are the top 10 tourist attractions in Kyoto, with a focus on temples, gardens, museums, and food:</p>
<p><strong>Temples and Gardens:</strong> 1. <strong>Kinkaku-ji (Golden Pavilion):</strong> A Zen temple with top floors covered entirely in gold leaf, set beside a tranquil pond. 2. <strong>Fushimi Inari Taisha:</strong> A Shinto shrine famous for its thousands of vermilion torii gates leading up to Mount Inari. 3. <strong>Ginkaku-ji (Silver Pavilion):</strong> A Zen temple known for its beautiful sand garden and moss garden, despite not being covered in silver. 4. <strong>Arashiyama Bamboo Grove:</strong> A natural forest of bamboo in Arashiyama, providing a unique and picturesque walking experience. 5. <strong>Ryoan-ji:</strong> A Zen temple with one of Japan’s most famous rock gardens. 6. <strong>Tofuku-ji:</strong> A large Zen temple in southeastern Kyoto, renowned for its spectacular autumn colors and large garden complex.</p>
<p><strong>Museums:</strong> 7. <strong>Kyoto International Manga Museum:</strong> A museum dedicated to the art of Japanese manga, with extensive collections and exhibitions.</p>
<p><strong>Food Experience:</strong> 8. <strong>Nishiki Market:</strong> A vibrant and historic market with a variety of food-related shops and eateries offering local Japanese cuisine. 9. <strong>Pontocho Alley:</strong> A historic and atmospheric dining area along the Pontocho geographic feature, known for its traditional dining establishments. 10. <strong>Gion:</strong> Kyoto’s most famous geisha district, offering a glimpse into traditional Japanese entertainment and fine dining.</p>
<p>Now I will get the coordinates for each of these attractions and then retrieve the current weather forecast for each location for today.</p>
</div>
</div>
<div class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1">run.required_action.submit_tool_outputs.tool_calls</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="29">
<pre><code>[RequiredActionFunctionToolCall(id='call_QTNG67vENQeBEh7T6YtdbvnT', function=Function(arguments='{"place_name": "Kinkaku-ji", "city_name": "Kyoto"}', name='get_coordinates'), type='function'),
 RequiredActionFunctionToolCall(id='call_DS1QkJx7pc0Kc6DoVZnRbaz8', function=Function(arguments='{"place_name": "Fushimi Inari Taisha", "city_name": "Kyoto"}', name='get_coordinates'), type='function'),
 RequiredActionFunctionToolCall(id='call_0k6pBOHoLiyzDPPrA6yCAawf', function=Function(arguments='{"place_name": "Ginkaku-ji", "city_name": "Kyoto"}', name='get_coordinates'), type='function'),
 RequiredActionFunctionToolCall(id='call_6E86WQUO451Joepkc2ARj8Tj', function=Function(arguments='{"place_name": "Arashiyama Bamboo Grove", "city_name": "Kyoto"}', name='get_coordinates'), type='function'),
 RequiredActionFunctionToolCall(id='call_zPOYPakCUIidP4QIYswakgPy', function=Function(arguments='{"place_name": "Ryoan-ji", "city_name": "Kyoto"}', name='get_coordinates'), type='function'),
 RequiredActionFunctionToolCall(id='call_chrPG8vzLsFBOIGxE5BuqaTv', function=Function(arguments='{"place_name": "Tofuku-ji", "city_name": "Kyoto"}', name='get_coordinates'), type='function'),
 RequiredActionFunctionToolCall(id='call_gBpn2vamE4N4o0V94Fia2uUD', function=Function(arguments='{"place_name": "Kyoto International Manga Museum", "city_name": "Kyoto"}', name='get_coordinates'), type='function'),
 RequiredActionFunctionToolCall(id='call_YYsZcHLNoi4wWyldPDubn3XB', function=Function(arguments='{"place_name": "Nishiki Market", "city_name": "Kyoto"}', name='get_coordinates'), type='function'),
 RequiredActionFunctionToolCall(id='call_dQrnr5RwQmOgXjHTwp7jAIwH', function=Function(arguments='{"place_name": "Pontocho Alley", "city_name": "Kyoto"}', name='get_coordinates'), type='function'),
 RequiredActionFunctionToolCall(id='call_mKU0DfFMwRZusd3GpoibUqRg', function=Function(arguments='{"place_name": "Gion", "city_name": "Kyoto"}', name='get_coordinates'), type='function')]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'requires_action'</span>:</span>
<span id="cb40-2">    tool_outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb40-3"></span>
<span id="cb40-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> call <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> run.required_action.submit_tool_outputs.tool_calls:</span>
<span id="cb40-5">        function_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> call.function.name</span>
<span id="cb40-6">        function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> available_functions[function_name]</span>
<span id="cb40-7">        arguments <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(call.function.arguments)</span>
<span id="cb40-8">        output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> function(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>arguments)</span>
<span id="cb40-9">        tool_outputs.append({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: call.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output"</span>: json.dumps(output)})</span>
<span id="cb40-10">    </span>
<span id="cb40-11">    run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.submit_tool_outputs(</span>
<span id="cb40-12">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb40-13">    run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb40-14">    tool_outputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tool_outputs</span>
<span id="cb40-15">    )</span>
<span id="cb40-16"></span>
<span id="cb40-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"queued"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in_progress"</span>:</span>
<span id="cb40-18">        run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.retrieve(</span>
<span id="cb40-19">        thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb40-20">        run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb40-21">        )</span>
<span id="cb40-22">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(run.status)</span>
<span id="cb40-23">        time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb40-24">    </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
requires_action</code></pre>
</div>
</div>
<div class="cell" data-execution_count="31">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1">run.required_action.submit_tool_outputs.tool_calls</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="31">
<pre><code>[RequiredActionFunctionToolCall(id='call_DI416D4K83nFoDykdtt4jD9a', function=Function(arguments='{"location": [35.03952925, 135.72953725309281], "date": "2024-01-10", "use_coordinates": true}', name='get_weather'), type='function'),
 RequiredActionFunctionToolCall(id='call_9hSwBOjwnYXpzCQ4AqyY125A', function=Function(arguments='{"location": [34.967519249999995, 135.77971008109822], "date": "2024-01-10", "use_coordinates": true}', name='get_weather'), type='function'),
 RequiredActionFunctionToolCall(id='call_0whxrUtiStO7xqd2Bo4sZTal', function=Function(arguments='{"location": [35.0268996, 135.7983713692728], "date": "2024-01-10", "use_coordinates": true}', name='get_weather'), type='function'),
 RequiredActionFunctionToolCall(id='call_jOce38WU7eHnAVA7zj7Ll8KC', function=Function(arguments='{"location": [35.018018, 135.67450037543992], "date": "2024-01-10", "use_coordinates": true}', name='get_weather'), type='function'),
 RequiredActionFunctionToolCall(id='call_n1Jlh9vhETxop6K2OTSS4fnR', function=Function(arguments='{"location": [35.033463049999995, 135.71808844984773], "date": "2024-01-10", "use_coordinates": true}', name='get_weather'), type='function'),
 RequiredActionFunctionToolCall(id='call_GbMdIh3yZi0ewITHZnEwUxtK', function=Function(arguments='{"location": [34.977170599999994, 135.77457537579082], "date": "2024-01-10", "use_coordinates": true}', name='get_weather'), type='function'),
 RequiredActionFunctionToolCall(id='call_WcDWRi92gOjEZLOWUgIsTGMS', function=Function(arguments='{"location": [35.0116959, 135.75917635140422], "date": "2024-01-10", "use_coordinates": true}', name='get_weather'), type='function'),
 RequiredActionFunctionToolCall(id='call_OP7zNm17Z3q9kXPzd6m1IMeG', function=Function(arguments='{"location": [35.005024399999996, 135.76556992963424], "date": "2024-01-10", "use_coordinates": true}', name='get_weather'), type='function'),
 RequiredActionFunctionToolCall(id='call_SnlZSP8csQFyhj3vEowe60tc', function=Function(arguments='{"location": [35.0080674, 135.7710399], "date": "2024-01-10", "use_coordinates": true}', name='get_weather'), type='function'),
 RequiredActionFunctionToolCall(id='call_5fwfwFRdNCUQ4uvBvyZz3asm', function=Function(arguments='{"location": [35.0046897, 135.77840296124248], "date": "2024-01-10", "use_coordinates": true}', name='get_weather'), type='function')]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="32">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'requires_action'</span>:</span>
<span id="cb44-2">    tool_outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb44-3"></span>
<span id="cb44-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> call <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> run.required_action.submit_tool_outputs.tool_calls:</span>
<span id="cb44-5">        function_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> call.function.name</span>
<span id="cb44-6">        function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> available_functions[function_name]</span>
<span id="cb44-7">        arguments <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(call.function.arguments)</span>
<span id="cb44-8">        output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> function(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>arguments)</span>
<span id="cb44-9">        tool_outputs.append({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: call.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output"</span>: json.dumps(output)})</span>
<span id="cb44-10">    </span>
<span id="cb44-11">    run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.submit_tool_outputs(</span>
<span id="cb44-12">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb44-13">    run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb44-14">    tool_outputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tool_outputs</span>
<span id="cb44-15">    )</span>
<span id="cb44-16"></span>
<span id="cb44-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"queued"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in_progress"</span>:</span>
<span id="cb44-18">        run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.retrieve(</span>
<span id="cb44-19">        thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb44-20">        run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb44-21">        )</span>
<span id="cb44-22">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(run.status)</span>
<span id="cb44-23">        time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb44-24">    </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
requires_action</code></pre>
</div>
</div>
<div class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1">tool_outputs</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="33">
<pre><code>[{'tool_call_id': 'call_DI416D4K83nFoDykdtt4jD9a',
  'output': '"{\\n    \\"location\\": [\\n        35.03952925,\\n        135.72953725309281\\n    ],\\n    \\"date\\": \\"2024-01-10\\",\\n    \\"unit\\": \\"Celsius\\",\\n    \\"temperature\\": 6.47,\\n    \\"humidity\\": 78,\\n    \\"wind_speed\\": 0.45,\\n    \\"description\\": \\"overcast clouds\\"\\n}"'},
 {'tool_call_id': 'call_9hSwBOjwnYXpzCQ4AqyY125A',
  'output': '"{\\n    \\"location\\": [\\n        34.967519249999995,\\n        135.77971008109822\\n    ],\\n    \\"date\\": \\"2024-01-10\\",\\n    \\"unit\\": \\"Celsius\\",\\n    \\"temperature\\": 7.01,\\n    \\"humidity\\": 78,\\n    \\"wind_speed\\": 0.45,\\n    \\"description\\": \\"overcast clouds\\"\\n}"'},
 {'tool_call_id': 'call_0whxrUtiStO7xqd2Bo4sZTal',
  'output': '"{\\n    \\"location\\": [\\n        35.0268996,\\n        135.7983713692728\\n    ],\\n    \\"date\\": \\"2024-01-10\\",\\n    \\"unit\\": \\"Celsius\\",\\n    \\"temperature\\": 5.98,\\n    \\"humidity\\": 80,\\n    \\"wind_speed\\": 0.45,\\n    \\"description\\": \\"overcast clouds\\"\\n}"'},
 {'tool_call_id': 'call_jOce38WU7eHnAVA7zj7Ll8KC',
  'output': '"{\\n    \\"location\\": [\\n        35.018018,\\n        135.67450037543992\\n    ],\\n    \\"date\\": \\"2024-01-10\\",\\n    \\"unit\\": \\"Celsius\\",\\n    \\"temperature\\": 7.33,\\n    \\"humidity\\": 78,\\n    \\"wind_speed\\": 0.45,\\n    \\"description\\": \\"overcast clouds\\"\\n}"'},
 {'tool_call_id': 'call_n1Jlh9vhETxop6K2OTSS4fnR',
  'output': '"{\\n    \\"location\\": [\\n        35.033463049999995,\\n        135.71808844984773\\n    ],\\n    \\"date\\": \\"2024-01-10\\",\\n    \\"unit\\": \\"Celsius\\",\\n    \\"temperature\\": 6.91,\\n    \\"humidity\\": 78,\\n    \\"wind_speed\\": 0.45,\\n    \\"description\\": \\"overcast clouds\\"\\n}"'},
 {'tool_call_id': 'call_GbMdIh3yZi0ewITHZnEwUxtK',
  'output': '"{\\n    \\"location\\": [\\n        34.977170599999994,\\n        135.77457537579082\\n    ],\\n    \\"date\\": \\"2024-01-10\\",\\n    \\"unit\\": \\"Celsius\\",\\n    \\"temperature\\": 7.35,\\n    \\"humidity\\": 77,\\n    \\"wind_speed\\": 2.57,\\n    \\"description\\": \\"overcast clouds\\"\\n}"'},
 {'tool_call_id': 'call_WcDWRi92gOjEZLOWUgIsTGMS',
  'output': '"{\\n    \\"location\\": [\\n        35.0116959,\\n        135.75917635140422\\n    ],\\n    \\"date\\": \\"2024-01-10\\",\\n    \\"unit\\": \\"Celsius\\",\\n    \\"temperature\\": 7.27,\\n    \\"humidity\\": 77,\\n    \\"wind_speed\\": 2.63,\\n    \\"description\\": \\"overcast clouds\\"\\n}"'},
 {'tool_call_id': 'call_OP7zNm17Z3q9kXPzd6m1IMeG',
  'output': '"{\\n    \\"location\\": [\\n        35.005024399999996,\\n        135.76556992963424\\n    ],\\n    \\"date\\": \\"2024-01-10\\",\\n    \\"unit\\": \\"Celsius\\",\\n    \\"temperature\\": 7.27,\\n    \\"humidity\\": 77,\\n    \\"wind_speed\\": 2.57,\\n    \\"description\\": \\"overcast clouds\\"\\n}"'},
 {'tool_call_id': 'call_SnlZSP8csQFyhj3vEowe60tc',
  'output': '"{\\n    \\"location\\": [\\n        35.0080674,\\n        135.7710399\\n    ],\\n    \\"date\\": \\"2024-01-10\\",\\n    \\"unit\\": \\"Celsius\\",\\n    \\"temperature\\": 7.27,\\n    \\"humidity\\": 77,\\n    \\"wind_speed\\": 2.57,\\n    \\"description\\": \\"overcast clouds\\"\\n}"'},
 {'tool_call_id': 'call_5fwfwFRdNCUQ4uvBvyZz3asm',
  'output': '"{\\n    \\"location\\": [\\n        35.0046897,\\n        135.77840296124248\\n    ],\\n    \\"date\\": \\"2024-01-10\\",\\n    \\"unit\\": \\"Celsius\\",\\n    \\"temperature\\": 7.21,\\n    \\"humidity\\": 78,\\n    \\"wind_speed\\": 0.45,\\n    \\"description\\": \\"overcast clouds\\"\\n}"'}]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="34">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb48-1">run.required_action.submit_tool_outputs.tool_calls</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="34">
<pre><code>[RequiredActionFunctionToolCall(id='call_Y82SeDKWhkAEoENL2OQ0Cyib', function=Function(arguments='{"city_name":"Kyoto","attractions":["Kinkaku-ji","Ryoan-ji","Ginkaku-ji","Tofuku-ji","Fushimi Inari Taisha","Arashiyama Bamboo Grove","Kyoto International Manga Museum","Nishiki Market","Pontocho Alley","Gion"],"is_rainy":["blue","blue","blue","blue","blue","blue","blue","blue","blue","blue"]}', name='create_city_map'), type='function')]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="35">
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb50-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'requires_action'</span>:</span>
<span id="cb50-2">    tool_outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb50-3"></span>
<span id="cb50-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> call <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> run.required_action.submit_tool_outputs.tool_calls:</span>
<span id="cb50-5">        function_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> call.function.name</span>
<span id="cb50-6">        function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> available_functions[function_name]</span>
<span id="cb50-7">        arguments <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(call.function.arguments)</span>
<span id="cb50-8">        output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> function(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>arguments)</span>
<span id="cb50-9">        tool_outputs.append({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: call.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output"</span>: json.dumps(output)})</span>
<span id="cb50-10">    </span>
<span id="cb50-11">    run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.submit_tool_outputs(</span>
<span id="cb50-12">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb50-13">    run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb50-14">    tool_outputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tool_outputs</span>
<span id="cb50-15">    )</span>
<span id="cb50-16"></span>
<span id="cb50-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"queued"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in_progress"</span>:</span>
<span id="cb50-18">        run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.retrieve(</span>
<span id="cb50-19">        thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb50-20">        run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb50-21">        )</span>
<span id="cb50-22">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(run.status)</span>
<span id="cb50-23">        time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb50-24">    </span></code></pre></div>
<div class="cell-output cell-output-display">

<div>                            <div id="a6089787-61ab-43a4-855b-a0901d5b5e8a" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("a6089787-61ab-43a4-855b-a0901d5b5e8a")) {                    Plotly.newPlot(                        "a6089787-61ab-43a4-855b-a0901d5b5e8a",                        [{"lat":[35.03952925],"lon":[135.72953725309281],"marker":{"color":"blue","size":14},"mode":"markers+text","name":"Kinkaku-ji","text":["1. Kinkaku-ji"],"textposition":"top right","type":"scattermapbox"},{"lat":[35.033463049999995],"lon":[135.71808844984773],"marker":{"color":"blue","size":14},"mode":"markers+text","name":"Ryoan-ji","text":["2. Ryoan-ji"],"textposition":"top right","type":"scattermapbox"},{"lat":[35.0268996],"lon":[135.7983713692728],"marker":{"color":"blue","size":14},"mode":"markers+text","name":"Ginkaku-ji","text":["3. Ginkaku-ji"],"textposition":"top right","type":"scattermapbox"},{"lat":[34.977170599999994],"lon":[135.77457537579082],"marker":{"color":"blue","size":14},"mode":"markers+text","name":"Tofuku-ji","text":["4. Tofuku-ji"],"textposition":"top right","type":"scattermapbox"},{"lat":[34.967519249999995],"lon":[135.77971008109822],"marker":{"color":"blue","size":14},"mode":"markers+text","name":"Fushimi Inari Taisha","text":["5. Fushimi Inari Taisha"],"textposition":"top right","type":"scattermapbox"},{"lat":[35.018018],"lon":[135.67450037543992],"marker":{"color":"blue","size":14},"mode":"markers+text","name":"Arashiyama Bamboo Grove","text":["6. Arashiyama Bamboo Grove"],"textposition":"top right","type":"scattermapbox"},{"lat":[35.0116959],"lon":[135.75917635140422],"marker":{"color":"blue","size":14},"mode":"markers+text","name":"Kyoto International Manga Museum","text":["7. Kyoto International Manga Museum"],"textposition":"top right","type":"scattermapbox"},{"lat":[35.005024399999996],"lon":[135.76556992963424],"marker":{"color":"blue","size":14},"mode":"markers+text","name":"Nishiki Market","text":["8. Nishiki Market"],"textposition":"top right","type":"scattermapbox"},{"lat":[35.0080674],"lon":[135.7710399],"marker":{"color":"blue","size":14},"mode":"markers+text","name":"Pontocho Alley","text":["9. Pontocho Alley"],"textposition":"top right","type":"scattermapbox"},{"lat":[35.0046897],"lon":[135.77840296124248],"marker":{"color":"blue","size":14},"mode":"markers+text","name":"Gion","text":["10. Gion"],"textposition":"top right","type":"scattermapbox"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"mapbox":{"style":"open-street-map","center":{"lat":35.009207715,"lon":135.75489720468232},"zoom":10},"margin":{"r":0,"t":0,"l":0,"b":0}},                        {"responsive": true}                    ).then(function(){
                            
var gd = document.getElementById('a6089787-61ab-43a4-855b-a0901d5b5e8a');
var x = new MutationObserver(function (mutations, observer) {{
        var display = window.getComputedStyle(gd).display;
        if (!display || display === 'none') {{
            console.log([gd, 'removed!']);
            Plotly.purge(gd);
            observer.disconnect();
        }}
}});

// Listen for the removal of the full notebook cells
var notebookContainer = gd.closest('#notebook-container');
if (notebookContainer) {{
    x.observe(notebookContainer, {childList: true});
}}

// Listen for the clearing of the current output cell
var outputEl = gd.closest('.output');
if (outputEl) {{
    x.observe(outputEl, {childList: true});
}}

                        })                };                });            </script>        </div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>in_progress
in_progress
in_progress
completed</code></pre>
</div>
</div>
<div class="cell" data-execution_count="36">
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb52-1">messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb52-2">  thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb52-3">)</span>
<span id="cb52-4"></span>
<span id="cb52-5">messages</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="36">
<pre><code>SyncCursorPage[ThreadMessage](data=[ThreadMessage(id='msg_vWXC3uYvoYHB2cp4zD0ceEX0', assistant_id='asst_LacvLlXSc8oG1sM5eIk4CY4D', content=[MessageContentText(text=Text(annotations=[], value='I have organized your visit to the top attractions in Kyoto according to your preference for temples, gardens, museums, and food, and also considering an efficient route. All attractions have been color-coded with blue markers, as the weather is overcast without rain. \n\nHere is the map with the planned route:\n\n![Kyoto Map with Attractions](sandbox:/mnt/data/Kyoto.png)\n\nYou can visit these attractions in the following order to optimize your travel time:\n\n1. **Kinkaku-ji (Golden Pavilion)**\n2. **Ryoan-ji**\n3. **Ginkaku-ji (Silver Pavilion)**\n4. **Tofuku-ji**\n5. **Fushimi Inari Taisha**\n6. **Arashiyama Bamboo Grove**\n7. **Kyoto International Manga Museum**\n8. **Nishiki Market**\n9. **Pontocho Alley**\n10. **Gion**\n\nEnjoy your trip to Kyoto!'), type='text')], created_at=1704878973, file_ids=[], metadata={}, object='thread.message', role='assistant', run_id='run_mwlAc83GMWAwvaxohUbHDwz7', thread_id='thread_RLEZYpAQcB654HqzZipvzxtd'), ThreadMessage(id='msg_63EcysxnX7oQMMUOzjrdtlzi', assistant_id='asst_LacvLlXSc8oG1sM5eIk4CY4D', content=[MessageContentText(text=Text(annotations=[], value='The weather forecast for Kyoto today, January 10, 2024, indicates "overcast clouds" for all the attractions with temperatures ranging from approximately 5.98°C to 7.35°C. There is no rain predicted, thus the map will use blue markers for all the attractions. Below is the summary of the weather for each attraction:\n\n1. **Kinkaku-ji (Golden Pavilion):** 6.47°C, overcast clouds\n2. **Fushimi Inari Taisha:** 7.01°C, overcast clouds\n3. **Ginkaku-ji (Silver Pavilion):** 5.98°C, overcast clouds\n4. **Arashiyama Bamboo Grove:** 7.33°C, overcast clouds\n5. **Ryoan-ji:** 6.91°C, overcast clouds\n6. **Tofuku-ji:** 7.35°C, overcast clouds\n7. **Kyoto International Manga Museum:** 7.27°C, overcast clouds\n8. **Nishiki Market:** 7.27°C, overcast clouds\n9. **Pontocho Alley:** 7.27°C, overcast clouds\n10. **Gion:** 7.21°C, overcast clouds\n\nNow, I will use this information to create an organized sequence for visiting these attractions and plot a map with blue markers to represent the current weather conditions. Let\'s start by organizing the route for efficiency.'), type='text')], created_at=1704878867, file_ids=[], metadata={}, object='thread.message', role='assistant', run_id='run_mwlAc83GMWAwvaxohUbHDwz7', thread_id='thread_RLEZYpAQcB654HqzZipvzxtd'), ThreadMessage(id='msg_fLewruXXNrfKUrjUwCKlmcVQ', assistant_id='asst_LacvLlXSc8oG1sM5eIk4CY4D', content=[MessageContentText(text=Text(annotations=[], value="The current date in Kyoto is January 10, 2024.\n\nKyoto is a city that harmoniously blends centuries of history with modern culture. It was Japan's capital for over a millennium, leaving it with numerous temples, shrines, and traditional tea houses.\n\nHere are the top 10 tourist attractions in Kyoto, with a focus on temples, gardens, museums, and food:\n\n**Temples and Gardens:**\n1. **Kinkaku-ji (Golden Pavilion):** A Zen temple with top floors covered entirely in gold leaf, set beside a tranquil pond.\n2. **Fushimi Inari Taisha:** A Shinto shrine famous for its thousands of vermilion torii gates leading up to Mount Inari.\n3. **Ginkaku-ji (Silver Pavilion):** A Zen temple known for its beautiful sand garden and moss garden, despite not being covered in silver.\n4. **Arashiyama Bamboo Grove:** A natural forest of bamboo in Arashiyama, providing a unique and picturesque walking experience.\n5. **Ryoan-ji:** A Zen temple with one of Japan's most famous rock gardens.\n6. **Tofuku-ji:** A large Zen temple in southeastern Kyoto, renowned for its spectacular autumn colors and large garden complex.\n\n**Museums:**\n7. **Kyoto International Manga Museum:** A museum dedicated to the art of Japanese manga, with extensive collections and exhibitions.\n\n**Food Experience:**\n8. **Nishiki Market:** A vibrant and historic market with a variety of food-related shops and eateries offering local Japanese cuisine.\n9. **Pontocho Alley:** A historic and atmospheric dining area along the Pontocho geographic feature, known for its traditional dining establishments.\n10. **Gion:** Kyoto's most famous geisha district, offering a glimpse into traditional Japanese entertainment and fine dining.\n\nNow I will get the coordinates for each of these attractions and then retrieve the current weather forecast for each location for today."), type='text')], created_at=1704878735, file_ids=[], metadata={}, object='thread.message', role='assistant', run_id='run_mwlAc83GMWAwvaxohUbHDwz7', thread_id='thread_RLEZYpAQcB654HqzZipvzxtd'), ThreadMessage(id='msg_gYoCCX8t88p9aLECqTuJx2yz', assistant_id=None, content=[MessageContentText(text=Text(annotations=[], value='I am planning a visit to Kyoto today and would appreciate detailed information about the city.\n    Please provide an overview of the location(20-30 words each), and list the top 10 tourist attractions. Additionally, could you include the current date and weather forecast for each attraction? Utilize the code interpreter to retrieve the current date in the city location.\n    Kindly organize the attractions in a sequence that facilitates an efficient visiting route.\n    \n    Attraction focus preferences: temples, gardens, museums, food\n    \n    '), type='text')], created_at=1704878722, file_ids=[], metadata={}, object='thread.message', role='user', run_id=None, thread_id='thread_RLEZYpAQcB654HqzZipvzxtd')], object='list', first_id='msg_vWXC3uYvoYHB2cp4zD0ceEX0', last_id='msg_gYoCCX8t88p9aLECqTuJx2yz', has_more=False)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="37">
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb54-1">messages.model_dump()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="37">
<pre><code>{'data': [{'id': 'msg_vWXC3uYvoYHB2cp4zD0ceEX0',
   'assistant_id': 'asst_LacvLlXSc8oG1sM5eIk4CY4D',
   'content': [{'text': {'annotations': [],
      'value': 'I have organized your visit to the top attractions in Kyoto according to your preference for temples, gardens, museums, and food, and also considering an efficient route. All attractions have been color-coded with blue markers, as the weather is overcast without rain. \n\nHere is the map with the planned route:\n\n![Kyoto Map with Attractions](sandbox:/mnt/data/Kyoto.png)\n\nYou can visit these attractions in the following order to optimize your travel time:\n\n1. **Kinkaku-ji (Golden Pavilion)**\n2. **Ryoan-ji**\n3. **Ginkaku-ji (Silver Pavilion)**\n4. **Tofuku-ji**\n5. **Fushimi Inari Taisha**\n6. **Arashiyama Bamboo Grove**\n7. **Kyoto International Manga Museum**\n8. **Nishiki Market**\n9. **Pontocho Alley**\n10. **Gion**\n\nEnjoy your trip to Kyoto!'},
     'type': 'text'}],
   'created_at': 1704878973,
   'file_ids': [],
   'metadata': {},
   'object': 'thread.message',
   'role': 'assistant',
   'run_id': 'run_mwlAc83GMWAwvaxohUbHDwz7',
   'thread_id': 'thread_RLEZYpAQcB654HqzZipvzxtd'},
  {'id': 'msg_63EcysxnX7oQMMUOzjrdtlzi',
   'assistant_id': 'asst_LacvLlXSc8oG1sM5eIk4CY4D',
   'content': [{'text': {'annotations': [],
      'value': 'The weather forecast for Kyoto today, January 10, 2024, indicates "overcast clouds" for all the attractions with temperatures ranging from approximately 5.98°C to 7.35°C. There is no rain predicted, thus the map will use blue markers for all the attractions. Below is the summary of the weather for each attraction:\n\n1. **Kinkaku-ji (Golden Pavilion):** 6.47°C, overcast clouds\n2. **Fushimi Inari Taisha:** 7.01°C, overcast clouds\n3. **Ginkaku-ji (Silver Pavilion):** 5.98°C, overcast clouds\n4. **Arashiyama Bamboo Grove:** 7.33°C, overcast clouds\n5. **Ryoan-ji:** 6.91°C, overcast clouds\n6. **Tofuku-ji:** 7.35°C, overcast clouds\n7. **Kyoto International Manga Museum:** 7.27°C, overcast clouds\n8. **Nishiki Market:** 7.27°C, overcast clouds\n9. **Pontocho Alley:** 7.27°C, overcast clouds\n10. **Gion:** 7.21°C, overcast clouds\n\nNow, I will use this information to create an organized sequence for visiting these attractions and plot a map with blue markers to represent the current weather conditions. Let\'s start by organizing the route for efficiency.'},
     'type': 'text'}],
   'created_at': 1704878867,
   'file_ids': [],
   'metadata': {},
   'object': 'thread.message',
   'role': 'assistant',
   'run_id': 'run_mwlAc83GMWAwvaxohUbHDwz7',
   'thread_id': 'thread_RLEZYpAQcB654HqzZipvzxtd'},
  {'id': 'msg_fLewruXXNrfKUrjUwCKlmcVQ',
   'assistant_id': 'asst_LacvLlXSc8oG1sM5eIk4CY4D',
   'content': [{'text': {'annotations': [],
      'value': "The current date in Kyoto is January 10, 2024.\n\nKyoto is a city that harmoniously blends centuries of history with modern culture. It was Japan's capital for over a millennium, leaving it with numerous temples, shrines, and traditional tea houses.\n\nHere are the top 10 tourist attractions in Kyoto, with a focus on temples, gardens, museums, and food:\n\n**Temples and Gardens:**\n1. **Kinkaku-ji (Golden Pavilion):** A Zen temple with top floors covered entirely in gold leaf, set beside a tranquil pond.\n2. **Fushimi Inari Taisha:** A Shinto shrine famous for its thousands of vermilion torii gates leading up to Mount Inari.\n3. **Ginkaku-ji (Silver Pavilion):** A Zen temple known for its beautiful sand garden and moss garden, despite not being covered in silver.\n4. **Arashiyama Bamboo Grove:** A natural forest of bamboo in Arashiyama, providing a unique and picturesque walking experience.\n5. **Ryoan-ji:** A Zen temple with one of Japan's most famous rock gardens.\n6. **Tofuku-ji:** A large Zen temple in southeastern Kyoto, renowned for its spectacular autumn colors and large garden complex.\n\n**Museums:**\n7. **Kyoto International Manga Museum:** A museum dedicated to the art of Japanese manga, with extensive collections and exhibitions.\n\n**Food Experience:**\n8. **Nishiki Market:** A vibrant and historic market with a variety of food-related shops and eateries offering local Japanese cuisine.\n9. **Pontocho Alley:** A historic and atmospheric dining area along the Pontocho geographic feature, known for its traditional dining establishments.\n10. **Gion:** Kyoto's most famous geisha district, offering a glimpse into traditional Japanese entertainment and fine dining.\n\nNow I will get the coordinates for each of these attractions and then retrieve the current weather forecast for each location for today."},
     'type': 'text'}],
   'created_at': 1704878735,
   'file_ids': [],
   'metadata': {},
   'object': 'thread.message',
   'role': 'assistant',
   'run_id': 'run_mwlAc83GMWAwvaxohUbHDwz7',
   'thread_id': 'thread_RLEZYpAQcB654HqzZipvzxtd'},
  {'id': 'msg_gYoCCX8t88p9aLECqTuJx2yz',
   'assistant_id': None,
   'content': [{'text': {'annotations': [],
      'value': 'I am planning a visit to Kyoto today and would appreciate detailed information about the city.\n    Please provide an overview of the location(20-30 words each), and list the top 10 tourist attractions. Additionally, could you include the current date and weather forecast for each attraction? Utilize the code interpreter to retrieve the current date in the city location.\n    Kindly organize the attractions in a sequence that facilitates an efficient visiting route.\n    \n    Attraction focus preferences: temples, gardens, museums, food\n    \n    '},
     'type': 'text'}],
   'created_at': 1704878722,
   'file_ids': [],
   'metadata': {},
   'object': 'thread.message',
   'role': 'user',
   'run_id': None,
   'thread_id': 'thread_RLEZYpAQcB654HqzZipvzxtd'}],
 'object': 'list',
 'first_id': 'msg_vWXC3uYvoYHB2cp4zD0ceEX0',
 'last_id': 'msg_gYoCCX8t88p9aLECqTuJx2yz',
 'has_more': False}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="38">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb56-1">display(Markdown(messages.data[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text.value.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sandbox:/mnt/data/"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>I have organized your visit to the top attractions in Kyoto according to your preference for temples, gardens, museums, and food, and also considering an efficient route. All attractions have been color-coded with blue markers, as the weather is overcast without rain.</p>
<p>Here is the map with the planned route:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/building_a_personalised_travel_planner_using_openai_assistants_api/Kyoto.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Kyoto Map with Attractions</figcaption>
</figure>
</div>
<p>You can visit these attractions in the following order to optimize your travel time:</p>
<ol type="1">
<li><strong>Kinkaku-ji (Golden Pavilion)</strong></li>
<li><strong>Ryoan-ji</strong></li>
<li><strong>Ginkaku-ji (Silver Pavilion)</strong></li>
<li><strong>Tofuku-ji</strong></li>
<li><strong>Fushimi Inari Taisha</strong></li>
<li><strong>Arashiyama Bamboo Grove</strong></li>
<li><strong>Kyoto International Manga Museum</strong></li>
<li><strong>Nishiki Market</strong></li>
<li><strong>Pontocho Alley</strong></li>
<li><strong>Gion</strong></li>
</ol>
<p>Enjoy your trip to Kyoto!</p>
</div>
</div>
</section>
<section id="message-2-asking-for-a-word-document-with-all-the-details" class="level1">
<h1>Message 2: Asking for a word document with all the details</h1>
<div class="cell" data-execution_count="39">
<div class="sourceCode cell-code" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1">city_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>city_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="40">
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb58-1"></span>
<span id="cb58-2">city_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.files.create(</span>
<span id="cb58-3">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(city_map, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rb"</span>),</span>
<span id="cb58-4">  purpose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"assistants"</span></span>
<span id="cb58-5">)</span></code></pre></div>
</div>
</section>
<section id="create-a-document-creator-assistant" class="level1">
<h1>Create a Document Creator Assistant</h1>
<p>A thread can be passed to many assistants. Here we are creating a new assistant that focuses on exceling the document creation.</p>
<div class="cell" data-execution_count="41">
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1">assistant_doc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.assistants.create(</span>
<span id="cb59-2">    name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Travel Guide Word Document Creater Assistant"</span>,</span>
<span id="cb59-3">    instructions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""You are a helpful assistant that creates word document with useful information about the city,</span></span>
<span id="cb59-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    explaining each attractions, arranging in easy order to travel, include weather details, map png file ."""</span>,</span>
<span id="cb59-5">    tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"code_interpreter"</span>}],</span>
<span id="cb59-6">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span>,</span>
<span id="cb59-7">    file_ids<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[city_file.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>]</span>
<span id="cb59-8">)</span>
<span id="cb59-9"></span></code></pre></div>
</div>
<div class="cell" data-execution_count="42">
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb60-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># new message</span></span>
<span id="cb60-2">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.create(</span>
<span id="cb60-3">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb60-4">    role<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb60-5">    content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Create a word document , with the png file </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>city_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> and include all the helpful details., add information about each attractions (20-30 words each)"</span>,</span>
<span id="cb60-6">    file_ids<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[city_file.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>]</span>
<span id="cb60-7">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="43">
<div class="sourceCode cell-code" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb61-1">run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.create(</span>
<span id="cb61-2">  thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb61-3">  assistant_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>assistant_doc.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb61-4">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="44">
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb62-1">run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.retrieve(</span>
<span id="cb62-2">  thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb62-3">  run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb62-4">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="45">
<div class="sourceCode cell-code" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb63-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"queued"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in_progress"</span>:</span>
<span id="cb63-2">    run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.retrieve(</span>
<span id="cb63-3">      thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb63-4">      run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb63-5">    )</span>
<span id="cb63-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(run.status)</span>
<span id="cb63-7">    time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb63-8">    </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>in_progress
in_progress
completed</code></pre>
</div>
</div>
<div class="cell" data-execution_count="46">
<div class="sourceCode cell-code" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb65-1">messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb65-2">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb65-3">    )</span></code></pre></div>
</div>
<div class="cell" data-execution_count="47">
<div class="sourceCode cell-code" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb66-1">file_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> messages.data[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text.annotations[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].file_path.file_id</span></code></pre></div>
</div>
<div class="cell" data-execution_count="48">
<div class="sourceCode cell-code" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb67-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> write_file_to_temp_dir(file_id, output_path):</span>
<span id="cb67-2">    file_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> openai.files.content(file_id)</span>
<span id="cb67-3">    file_data_bytes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> file_data.read()</span>
<span id="cb67-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(output_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wb"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb67-5">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.write(file_data_bytes)</span>
<span id="cb67-6"></span>
<span id="cb67-7"></span>
<span id="cb67-8">write_file_to_temp_dir(file_id, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>city_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.docx'</span>)</span></code></pre></div>
</div>
</section>
<section id="display-the-travel-guide" class="level1">
<h1>Display the Travel Guide</h1>
<p>A word document is created with the following details</p>
<p><img src="https://arunprakash.ai/posts/building_a_personalised_travel_planner_using_openai_assistants_api/s1.png" class="img-fluid" alt="Voyage Vista screenshot1"> <img src="https://arunprakash.ai/posts/building_a_personalised_travel_planner_using_openai_assistants_api/s2.png" class="img-fluid" alt="Voyage Vista screenshot2"> <img src="https://arunprakash.ai/posts/building_a_personalised_travel_planner_using_openai_assistants_api/s3.png" class="img-fluid" alt="Voyage Vista screenshot3"></p>
<div class="cell" data-execution_count="67">
<div class="sourceCode cell-code" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb68-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># new message</span></span>
<span id="cb68-2">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.create(</span>
<span id="cb68-3">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb68-4">    role<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb68-5">    content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"List all the files in your sandbox"</span></span>
<span id="cb68-6">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="68">
<div class="sourceCode cell-code" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb69-1">run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.create(</span>
<span id="cb69-2">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb69-3">    assistant_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>assistant.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb69-4">    )</span>
<span id="cb69-5"></span>
<span id="cb69-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"queued"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in_progress"</span>:</span>
<span id="cb69-7">    run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.retrieve(</span>
<span id="cb69-8">      thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb69-9">      run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb69-10">    )</span>
<span id="cb69-11">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(run.status)</span>
<span id="cb69-12">    time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>in_progress
in_progress
completed</code></pre>
</div>
</div>
<div class="cell" data-execution_count="69">
<div class="sourceCode cell-code" id="cb71" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb71-1">messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb71-2">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb71-3">    )</span>
<span id="cb71-4"></span>
<span id="cb71-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> message <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> messages.data:</span>
<span id="cb71-6">    display(Markdown(message.content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text.value))</span>
<span id="cb71-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb71-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span></code></pre></div>
<div class="cell-output cell-output-display">
<p>Here are the files currently in the sandbox:</p>
<ol type="1">
<li><code>uploaded_file.png</code></li>
<li><code>file-wMpsZcIr84ClEkkCXMAkDsVp</code> (this is the original uploaded file before renaming)</li>
<li><code>Kyoto_Travel_Guide.docx</code></li>
<li><code>Kyoto_Travel_Guide_Descriptions.docx</code></li>
</ol>
<p>Please let me know if you would like to access any of these files or if you need further assistance.</p>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>********************************************************************************</code></pre>
</div>
</div>
</section>
<section id="delete-assistants-caution" class="level1">
<h1>Delete Assistants : Caution</h1>
<div class="cell" data-execution_count="70">
<div class="sourceCode cell-code" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb73-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> openai <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> OpenAI</span>
<span id="cb73-2">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OpenAI()</span>
<span id="cb73-3"></span>
<span id="cb73-4">my_assistants <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.assistants.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb73-5">    order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"desc"</span>,</span>
<span id="cb73-6">    limit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"50"</span>,</span>
<span id="cb73-7">)</span>
<span id="cb73-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(my_assistants.data)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[Assistant(id='asst_fdcUT8iMJ4p8FY4bqCYHHjje', created_at=1704877182, description=None, file_ids=['file-wMpsZcIr84ClEkkCXMAkDsVp'], instructions='You are a helpful assistant that creates word document with useful information about the city,\n    explaining each attractions, arranging in easy order to travel, include weather details, map png file .', metadata={}, model='gpt-4-1106-preview', name='Travel Guide Word Document Creater Assistant', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')]), Assistant(id='asst_ldiqo3CshePFP1Gasfqbe41b', created_at=1704876788, description=None, file_ids=['file-wMpsZcIr84ClEkkCXMAkDsVp'], instructions='You are a helpful assistant that creates word document with useful information about the city,\n    explaining each attractions, arranging in easy order to travel, include weather details, map png file .', metadata={}, model='gpt-4-1106-preview', name='Travel Guide Word Document Creater Assistant', object='assistant', tools=[ToolCodeInterpreter(type='code_interpreter')]), Assistant(id='asst_kvnGAfgTPJXiDCfKo0mJWPih', created_at=1704876106, description=None, file_ids=[], instructions='You are a personal travel assistant.You use available functions to help your user plan their trip.\nCreate inputs to the functions carefully. If you could not find the available functions,\nyou can use your own knowledge to help your user.Sometimes you have to use parallel functions to get the desired output\n\nFind the exact date they are planning to visit and use that information for getting current weather.\n\nTo do plotting, we need coordinates, current weather and tourist attractions.\n\nso for plotting maps,  first get coordinates of each tourist attractions that you suggest, then get current weather and then do the plotting of map.mro\n\nWe are color coding the markers based on weather condition. If it is rainy, we use red color, otherwise blue. This is helpful for the user to plan their trip accordingly.\n\n', metadata={}, model='gpt-4-1106-preview', name='Travel Assistant', object='assistant', tools=[ToolFunction(function=FunctionDefinition(name='get_coordinates', description='Fetches coordinates of a place using Nominatim API.', parameters={'type': 'object', 'properties': {'place_name': {'type': 'string', 'description': 'The name of the specific place.'}, 'city_name': {'type': 'string', 'description': 'The name of the city where the place is located.'}}, 'required': ['place_name', 'city_name']}), type='function'), ToolFunction(function=FunctionDefinition(name='create_city_map', description='Creates a map with markers for specified attractions in a city.', parameters={'type': 'object', 'properties': {'city_name': {'type': 'string', 'description': 'The name of the city.'}, 'attractions': {'type': 'array', 'items': {'type': 'string'}, 'description': 'A list of attraction names in the city.'}, 'is_rainy': {'type': 'array', 'items': {'type': 'string'}, 'description': 'A list of strings indicating whether it is rainy for each attraction.'}}, 'required': ['city_name', 'attractions', 'is_rainy']}), type='function'), ToolFunction(function=FunctionDefinition(name='get_weather', description='Get weather for a given location and date using OpenWeather API.', parameters={'type': 'object', 'properties': {'location': {'oneOf': [{'type': 'string', 'description': 'The location name for which weather information is required.'}, {'type': 'array', 'items': {'type': 'number'}, 'minItems': 2, 'maxItems': 2, 'description': 'The coordinates (latitude, longitude) for which weather information is required.'}]}, 'date': {'type': 'string', 'description': 'The date for the weather forecast in YYYY-MM-DD format.'}, 'unit': {'type': 'string', 'enum': ['metric', 'imperial'], 'description': 'The unit for temperature (metric or imperial).'}, 'use_coordinates': {'type': 'boolean', 'description': 'Flag to use coordinates instead of location name.'}}, 'required': ['location', 'date', 'use_coordinates']}), type='function'), ToolCodeInterpreter(type='code_interpreter')])]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="71">
<div class="sourceCode cell-code" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb75-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> assistant <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> my_assistants.data:</span>
<span id="cb75-2">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.assistants.delete(assistant.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>)</span>
<span id="cb75-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(response)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>AssistantDeleted(id='asst_fdcUT8iMJ4p8FY4bqCYHHjje', deleted=True, object='assistant.deleted')
AssistantDeleted(id='asst_ldiqo3CshePFP1Gasfqbe41b', deleted=True, object='assistant.deleted')
AssistantDeleted(id='asst_kvnGAfgTPJXiDCfKo0mJWPih', deleted=True, object='assistant.deleted')</code></pre>
</div>
</div>



</section>

<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>llm</category>
  <category>openai</category>
  <category>function_calling</category>
  <category>openai_assistants_api</category>
  <category>handson</category>
  <guid>https://arunprakash.ai/posts/building_a_personalised_travel_planner_using_openai_assistants_api/tourist_assistant_tools.html</guid>
  <pubDate>Tue, 09 Jan 2024 14:00:00 GMT</pubDate>
  <media:content url="https://arunprakash.ai/posts/building_a_personalised_travel_planner_using_openai_assistants_api/travel2.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Master the Art of Function Calling in OpenAI Assistants API: A Comprehensive Guide for Beginners</title>
  <dc:creator>Arun Prakash</dc:creator>
  <link>https://arunprakash.ai/posts/master-the-art-of-function-calling-in-openai-assistants-api-a-comprehensive-guide-for-beginners/assistants_function_calling.html</link>
  <description><![CDATA[ 




<p><img src="https://arunprakash.ai/posts/master-the-art-of-function-calling-in-openai-assistants-api-a-comprehensive-guide-for-beginners/assistant.png" class="img-fluid"></p>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip3 install openai -U</span></span></code></pre></div>
</div>
<p>Welcome to our comprehensive guide on leveraging function calling in the OpenAI Assistant API. Whether you’re a seasoned developer or a curious beginner, this tutorial is designed to help you understand and implement this powerful feature in your AI projects.</p>
<p>Here’s what we’ll be diving into:</p>
<ul>
<li>The basics of function calling in the OpenAI Assistant API</li>
<li>Steps to create an assistant</li>
<li>Crafting a message and initiating a thread</li>
<li>Identifying when a message requires a function call</li>
<li>Determining which function to call and what arguments to pass</li>
<li>Retrieving the response from a function call</li>
<li>Understanding the final response</li>
</ul>
<p>OpenAI Assistants are equipped with a variety of tools, including retrieval, code interpretation, and function calling. In this guide, we’ll be focusing primarily on the function calling capabilities.</p>
<p>To illustrate these concepts, we’ll walk you through a simple demo. We’ll start by demonstrating a common challenge - reversing a string - and then show you how to overcome this challenge by creating a function that reverses the string and integrating it with the assistant.</p>
<p>Our goal is to provide you with a clear, practical understanding of function calling in the OpenAI Assistant API, empowering you to create more dynamic and interactive AI applications. Let’s get started!</p>
<p>In general, assistants can use tools such as retrrieval, code interpreter, and function calling.</p>
<p>In this tutorial we focus more on function calling capabilities of assistants.</p>
<p>We create a simple demo that shows the failure of reversing a string and then we create a function that reverses the string and connect it with the assistant.</p>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dictionary print indentatio</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dotenv <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dotenv</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> openai</span>
<span id="cb3-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> openai <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> OpenAI</span>
<span id="cb3-6">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OpenAI()</span>
<span id="cb3-7">load_dotenv()</span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># openai key</span></span>
<span id="cb3-9">OPENAI_API_KEY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OPENAI_API_KEY"</span>)</span>
<span id="cb3-10">openai.api_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OPENAI_API_KEY</span>
<span id="cb3-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> display, Markdown</span></code></pre></div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># openai version</span></span>
<span id="cb4-2">openai.__version__</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>'1.6.1'</code></pre>
</div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb6-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span>,</span>
<span id="cb6-3">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb6-4">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reverse the string openaichatgpt"</span>},</span>
<span id="cb6-5">    ],</span>
<span id="cb6-6">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>,</span>
<span id="cb6-7">    seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb6-8">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">display(Markdown(response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message.content))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>To reverse the string “openaichatgpt”, you would simply reverse the order of the characters to get “tpgtahciapeneo”.</p>
</div>
</div>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"tpgtahciapeneo"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"openaichatgpt"</span>[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>False</code></pre>
</div>
</div>
<p>Large Language Models use tokens to split text into smaller pieces, and reversing a string is not a usual data that is has seen during training, so it is not able to predict it correctly.</p>
<p>We can fix this by creating a function that will reverse the string, and use the model to ask us to call the function and get results and pass it to the model.</p>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> reverse_string(string):</span>
<span id="cb10-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> string[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
</div>
<section id="creating-an-assistant" class="level1">
<h1>Creating an Assistant</h1>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># function_json for reverse_string</span></span>
<span id="cb11-2">function_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'type'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'function'</span>,</span>
<span id="cb11-3">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'function'</span>:{</span>
<span id="cb11-4">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'name'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reverse_string'</span>,</span>
<span id="cb11-5">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'parameters'</span>:{</span>
<span id="cb11-6">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"object"</span>,</span>
<span id="cb11-7">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"properties"</span>:{</span>
<span id="cb11-8">                          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'type'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'string'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'description'</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A single word"</span>},</span>
<span id="cb11-9">                      },</span>
<span id="cb11-10">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'required'</span> : [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>]</span>
<span id="cb11-11">                }</span>
<span id="cb11-12"></span>
<span id="cb11-13">    }</span>
<span id="cb11-14">}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">available_functions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb12-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reverse_string"</span>: reverse_string</span>
<span id="cb12-3">}</span></code></pre></div>
</div>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> openai <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> OpenAI</span>
<span id="cb13-2">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OpenAI()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">assistant <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.assistants.create(</span>
<span id="cb14-2">    name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Python Tutor"</span>,</span>
<span id="cb14-3">    instructions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a personal python tutor."</span>,</span>
<span id="cb14-4">    tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[function_json],</span>
<span id="cb14-5">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span></span>
<span id="cb14-6">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">assistant</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre><code>Assistant(id='asst_UQEBrB5fuKnzx472Sf5qWYdH', created_at=1704457106, description=None, file_ids=[], instructions='You are a personal python tutor.', metadata={}, model='gpt-4-1106-preview', name='Python Tutor', object='assistant', tools=[ToolFunction(function=FunctionDefinition(name='reverse_string', description=None, parameters={'type': 'object', 'properties': {'string': {'type': 'string', 'description': 'A single word'}}, 'required': ['string']}), type='function')])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(json.dumps(assistant.model_dump(), indent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{
    "id": "asst_UQEBrB5fuKnzx472Sf5qWYdH",
    "created_at": 1704457106,
    "description": null,
    "file_ids": [],
    "instructions": "You are a personal python tutor.",
    "metadata": {},
    "model": "gpt-4-1106-preview",
    "name": "Python Tutor",
    "object": "assistant",
    "tools": [
        {
            "function": {
                "name": "reverse_string",
                "description": null,
                "parameters": {
                    "type": "object",
                    "properties": {
                        "string": {
                            "type": "string",
                            "description": "A single word"
                        }
                    },
                    "required": [
                        "string"
                    ]
                }
            },
            "type": "function"
        }
    ]
}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(assistant)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<pre><code>openai.types.beta.assistant.Assistant</code></pre>
</div>
</div>
</section>
<section id="thread" class="level1">
<h1>Thread</h1>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">thread <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.create()</span></code></pre></div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">thread.model_dump()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="17">
<pre><code>{'id': 'thread_3fT59LTUrodHJPjBQYsIYm6F',
 'created_at': 1704457106,
 'metadata': {},
 'object': 'thread'}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">thread</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>Thread(id='thread_3fT59LTUrodHJPjBQYsIYm6F', created_at=1704457106, metadata={}, object='thread')</code></pre>
</div>
</div>
</section>
<section id="add-a-message-to-a-thread" class="level1">
<h1>Add a Message to a Thread</h1>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.create(</span>
<span id="cb26-2">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb26-3">    role<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb26-4">    content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"what are different loops in python?"</span></span>
<span id="cb26-5">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">message</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="20">
<pre><code>ThreadMessage(id='msg_UDx8nMLlKxvriXAEBeW0AJ9f', assistant_id=None, content=[MessageContentText(text=Text(annotations=[], value='what are different loops in python?'), type='text')], created_at=1704457107, file_ids=[], metadata={}, object='thread.message', role='user', run_id=None, thread_id='thread_3fT59LTUrodHJPjBQYsIYm6F')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">message.model_dump()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">
<pre><code>{'id': 'msg_UDx8nMLlKxvriXAEBeW0AJ9f',
 'assistant_id': None,
 'content': [{'text': {'annotations': [],
    'value': 'what are different loops in python?'},
   'type': 'text'}],
 'created_at': 1704457107,
 'file_ids': [],
 'metadata': {},
 'object': 'thread.message',
 'role': 'user',
 'run_id': None,
 'thread_id': 'thread_3fT59LTUrodHJPjBQYsIYm6F'}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">thread_messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>)</span>
<span id="cb31-2">thread_messages.data</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="22">
<pre><code>[ThreadMessage(id='msg_UDx8nMLlKxvriXAEBeW0AJ9f', assistant_id=None, content=[MessageContentText(text=Text(annotations=[], value='what are different loops in python?'), type='text')], created_at=1704457107, file_ids=[], metadata={}, object='thread.message', role='user', run_id=None, thread_id='thread_3fT59LTUrodHJPjBQYsIYm6F')]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">thread_messages.model_dump()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="23">
<pre><code>{'data': [{'id': 'msg_UDx8nMLlKxvriXAEBeW0AJ9f',
   'assistant_id': None,
   'content': [{'text': {'annotations': [],
      'value': 'what are different loops in python?'},
     'type': 'text'}],
   'created_at': 1704457107,
   'file_ids': [],
   'metadata': {},
   'object': 'thread.message',
   'role': 'user',
   'run_id': None,
   'thread_id': 'thread_3fT59LTUrodHJPjBQYsIYm6F'}],
 'object': 'list',
 'first_id': 'msg_UDx8nMLlKxvriXAEBeW0AJ9f',
 'last_id': 'msg_UDx8nMLlKxvriXAEBeW0AJ9f',
 'has_more': False}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1">run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.create(</span>
<span id="cb35-2">  thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb35-3">  assistant_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>assistant.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb35-4">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(json.dumps(run.model_dump(), indent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{
    "id": "run_BLZnD60Vl7wePLUsdmUFR5zd",
    "assistant_id": "asst_UQEBrB5fuKnzx472Sf5qWYdH",
    "cancelled_at": null,
    "completed_at": null,
    "created_at": 1704457108,
    "expires_at": 1704457708,
    "failed_at": null,
    "file_ids": [],
    "instructions": "You are a personal python tutor.",
    "last_error": null,
    "metadata": {},
    "model": "gpt-4-1106-preview",
    "object": "thread.run",
    "required_action": null,
    "started_at": null,
    "status": "queued",
    "thread_id": "thread_3fT59LTUrodHJPjBQYsIYm6F",
    "tools": [
        {
            "function": {
                "name": "reverse_string",
                "description": null,
                "parameters": {
                    "type": "object",
                    "properties": {
                        "string": {
                            "type": "string",
                            "description": "A single word"
                        }
                    },
                    "required": [
                        "string"
                    ]
                }
            },
            "type": "function"
        }
    ]
}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1">run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.retrieve(</span>
<span id="cb38-2">  thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb38-3">  run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb38-4">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(json.dumps(run.model_dump(), indent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{
    "id": "run_BLZnD60Vl7wePLUsdmUFR5zd",
    "assistant_id": "asst_UQEBrB5fuKnzx472Sf5qWYdH",
    "cancelled_at": null,
    "completed_at": null,
    "created_at": 1704457108,
    "expires_at": 1704457708,
    "failed_at": null,
    "file_ids": [],
    "instructions": "You are a personal python tutor.",
    "last_error": null,
    "metadata": {},
    "model": "gpt-4-1106-preview",
    "object": "thread.run",
    "required_action": null,
    "started_at": 1704457108,
    "status": "in_progress",
    "thread_id": "thread_3fT59LTUrodHJPjBQYsIYm6F",
    "tools": [
        {
            "function": {
                "name": "reverse_string",
                "description": null,
                "parameters": {
                    "type": "object",
                    "properties": {
                        "string": {
                            "type": "string",
                            "description": "A single word"
                        }
                    },
                    "required": [
                        "string"
                    ]
                }
            },
            "type": "function"
        }
    ]
}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1">run</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="28">
<pre><code>Run(id='run_BLZnD60Vl7wePLUsdmUFR5zd', assistant_id='asst_UQEBrB5fuKnzx472Sf5qWYdH', cancelled_at=None, completed_at=None, created_at=1704457108, expires_at=1704457708, failed_at=None, file_ids=[], instructions='You are a personal python tutor.', last_error=None, metadata={}, model='gpt-4-1106-preview', object='thread.run', required_action=None, started_at=1704457108, status='in_progress', thread_id='thread_3fT59LTUrodHJPjBQYsIYm6F', tools=[ToolAssistantToolsFunction(function=FunctionDefinition(name='reverse_string', description=None, parameters={'type': 'object', 'properties': {'string': {'type': 'string', 'description': 'A single word'}}, 'required': ['string']}), type='function')])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1">run.status</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="29">
<pre><code>'in_progress'</code></pre>
</div>
</div>
<div class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span></code></pre></div>
</div>
<div class="cell" data-execution_count="31">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"queued"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in_progress"</span>:</span>
<span id="cb46-2">    run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.retrieve(</span>
<span id="cb46-3">      thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb46-4">      run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb46-5">    )</span>
<span id="cb46-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(run.status)</span>
<span id="cb46-7">    time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb46-8">    </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
in_progress
completed</code></pre>
</div>
</div>
<div class="cell" data-execution_count="32">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb48-1">run</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="32">
<pre><code>Run(id='run_BLZnD60Vl7wePLUsdmUFR5zd', assistant_id='asst_UQEBrB5fuKnzx472Sf5qWYdH', cancelled_at=None, completed_at=1704457140, created_at=1704457108, expires_at=None, failed_at=None, file_ids=[], instructions='You are a personal python tutor.', last_error=None, metadata={}, model='gpt-4-1106-preview', object='thread.run', required_action=None, started_at=1704457108, status='completed', thread_id='thread_3fT59LTUrodHJPjBQYsIYm6F', tools=[ToolAssistantToolsFunction(function=FunctionDefinition(name='reverse_string', description=None, parameters={'type': 'object', 'properties': {'string': {'type': 'string', 'description': 'A single word'}}, 'required': ['string']}), type='function')])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb50-1">messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb50-2">  thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb50-3">)</span>
<span id="cb50-4"></span>
<span id="cb50-5">messages</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="33">
<pre><code>SyncCursorPage[ThreadMessage](data=[ThreadMessage(id='msg_a5FW3oicgn271ztQwcIa6kQ6', assistant_id='asst_UQEBrB5fuKnzx472Sf5qWYdH', content=[MessageContentText(text=Text(annotations=[], value='In Python, there are two primary types of loops that allow you to execute a block of code repeatedly:\n\n1. `for` Loop: This loop is used for iterating over a sequence (which could be a list, tuple, dictionary, set, or string) with the ability to execute a block of code for each item in the sequence. An example of a `for` loop:\n\n```python\nfor item in ["apple", "banana", "cherry"]:\n    print(item)\n```\n\n2. `while` Loop: This loop repeatedly executes the target statement(s) as long as the given condition is true. The condition is evaluated before executing the body of the loop. Here\'s an example of a `while` loop:\n\n```python\ncount = 0\nwhile count &lt; 5:\n    print(count)\n    count += 1\n```\n\nPython also provides some loop control statements that can be used within these loops:\n\n- `break`: Terminates the loop and transfers execution to the statement immediately following the loop.\n- `continue`: Skips the remaining part of the loop for the current iteration and moves to the next iteration.\n- `else`: An optional clause associated with loops that is executed if the loop completes normally (i.e., not terminated by a `break` statement).\n\nHere\'s an example of using `break`, `continue`, and `else` with a `for` loop:\n\n```python\nfor num in range(2, 10):\n    if num % 2 == 0:\n        print("Found an even number", num)\n        continue\n    print("Found a number", num)\nelse:\n    print("The loop is completed without a break statement.")\n```\n\nAnd an example using `while` loop:\n\n```python\ncount = 1\nwhile count &lt; 10:\n    if count == 5:\n        break\n    print(count)\n    count += 1\nelse:\n    print("Reached the value of 5 and stopped the loop with a break statement.")\n```\n\nAdditionally, Python allows the use of nested loops (a loop inside another loop), which can be useful for more complex iteration scenarios. However, it\'s important to use them judiciously as they can lead to high computational complexity, especially with large datasets.'), type='text')], created_at=1704457109, file_ids=[], metadata={}, object='thread.message', role='assistant', run_id='run_BLZnD60Vl7wePLUsdmUFR5zd', thread_id='thread_3fT59LTUrodHJPjBQYsIYm6F'), ThreadMessage(id='msg_UDx8nMLlKxvriXAEBeW0AJ9f', assistant_id=None, content=[MessageContentText(text=Text(annotations=[], value='what are different loops in python?'), type='text')], created_at=1704457107, file_ids=[], metadata={}, object='thread.message', role='user', run_id=None, thread_id='thread_3fT59LTUrodHJPjBQYsIYm6F')], object='list', first_id='msg_a5FW3oicgn271ztQwcIa6kQ6', last_id='msg_UDx8nMLlKxvriXAEBeW0AJ9f', has_more=False)</code></pre>
</div>
</div>
<div class="cell" data-execution_count="34">
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb52-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(json.dumps(messages.model_dump(), indent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{
    "data": [
        {
            "id": "msg_a5FW3oicgn271ztQwcIa6kQ6",
            "assistant_id": "asst_UQEBrB5fuKnzx472Sf5qWYdH",
            "content": [
                {
                    "text": {
                        "annotations": [],
                        "value": "In Python, there are two primary types of loops that allow you to execute a block of code repeatedly:\n\n1. `for` Loop: This loop is used for iterating over a sequence (which could be a list, tuple, dictionary, set, or string) with the ability to execute a block of code for each item in the sequence. An example of a `for` loop:\n\n```python\nfor item in [\"apple\", \"banana\", \"cherry\"]:\n    print(item)\n```\n\n2. `while` Loop: This loop repeatedly executes the target statement(s) as long as the given condition is true. The condition is evaluated before executing the body of the loop. Here's an example of a `while` loop:\n\n```python\ncount = 0\nwhile count &lt; 5:\n    print(count)\n    count += 1\n```\n\nPython also provides some loop control statements that can be used within these loops:\n\n- `break`: Terminates the loop and transfers execution to the statement immediately following the loop.\n- `continue`: Skips the remaining part of the loop for the current iteration and moves to the next iteration.\n- `else`: An optional clause associated with loops that is executed if the loop completes normally (i.e., not terminated by a `break` statement).\n\nHere's an example of using `break`, `continue`, and `else` with a `for` loop:\n\n```python\nfor num in range(2, 10):\n    if num % 2 == 0:\n        print(\"Found an even number\", num)\n        continue\n    print(\"Found a number\", num)\nelse:\n    print(\"The loop is completed without a break statement.\")\n```\n\nAnd an example using `while` loop:\n\n```python\ncount = 1\nwhile count &lt; 10:\n    if count == 5:\n        break\n    print(count)\n    count += 1\nelse:\n    print(\"Reached the value of 5 and stopped the loop with a break statement.\")\n```\n\nAdditionally, Python allows the use of nested loops (a loop inside another loop), which can be useful for more complex iteration scenarios. However, it's important to use them judiciously as they can lead to high computational complexity, especially with large datasets."
                    },
                    "type": "text"
                }
            ],
            "created_at": 1704457109,
            "file_ids": [],
            "metadata": {},
            "object": "thread.message",
            "role": "assistant",
            "run_id": "run_BLZnD60Vl7wePLUsdmUFR5zd",
            "thread_id": "thread_3fT59LTUrodHJPjBQYsIYm6F"
        },
        {
            "id": "msg_UDx8nMLlKxvriXAEBeW0AJ9f",
            "assistant_id": null,
            "content": [
                {
                    "text": {
                        "annotations": [],
                        "value": "what are different loops in python?"
                    },
                    "type": "text"
                }
            ],
            "created_at": 1704457107,
            "file_ids": [],
            "metadata": {},
            "object": "thread.message",
            "role": "user",
            "run_id": null,
            "thread_id": "thread_3fT59LTUrodHJPjBQYsIYm6F"
        }
    ],
    "object": "list",
    "first_id": "msg_a5FW3oicgn271ztQwcIa6kQ6",
    "last_id": "msg_UDx8nMLlKxvriXAEBeW0AJ9f",
    "has_more": false
}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="35">
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb54-1">display(Markdown(messages.data[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text.value))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>In Python, there are two primary types of loops that allow you to execute a block of code repeatedly:</p>
<ol type="1">
<li><code>for</code> Loop: This loop is used for iterating over a sequence (which could be a list, tuple, dictionary, set, or string) with the ability to execute a block of code for each item in the sequence. An example of a <code>for</code> loop:</li>
</ol>
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb55-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"apple"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cherry"</span>]:</span>
<span id="cb55-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(item)</span></code></pre></div>
<ol start="2" type="1">
<li><code>while</code> Loop: This loop repeatedly executes the target statement(s) as long as the given condition is true. The condition is evaluated before executing the body of the loop. Here’s an example of a <code>while</code> loop:</li>
</ol>
<div class="sourceCode" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb56-1">count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb56-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>:</span>
<span id="cb56-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(count)</span>
<span id="cb56-4">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
<p>Python also provides some loop control statements that can be used within these loops:</p>
<ul>
<li><code>break</code>: Terminates the loop and transfers execution to the statement immediately following the loop.</li>
<li><code>continue</code>: Skips the remaining part of the loop for the current iteration and moves to the next iteration.</li>
<li><code>else</code>: An optional clause associated with loops that is executed if the loop completes normally (i.e., not terminated by a <code>break</code> statement).</li>
</ul>
<p>Here’s an example of using <code>break</code>, <code>continue</code>, and <code>else</code> with a <code>for</code> loop:</p>
<div class="sourceCode" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>):</span>
<span id="cb57-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb57-3">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Found an even number"</span>, num)</span>
<span id="cb57-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb57-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Found a number"</span>, num)</span>
<span id="cb57-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb57-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The loop is completed without a break statement."</span>)</span></code></pre></div>
<p>And an example using <code>while</code> loop:</p>
<div class="sourceCode" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb58-1">count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb58-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>:</span>
<span id="cb58-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>:</span>
<span id="cb58-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span>
<span id="cb58-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(count)</span>
<span id="cb58-6">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb58-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb58-8">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Reached the value of 5 and stopped the loop with a break statement."</span>)</span></code></pre></div>
<p>Additionally, Python allows the use of nested loops (a loop inside another loop), which can be useful for more complex iteration scenarios. However, it’s important to use them judiciously as they can lead to high computational complexity, especially with large datasets.</p>
</div>
</div>
<div class="cell" data-execution_count="36">
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># new message</span></span>
<span id="cb59-2">message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.create(</span>
<span id="cb59-3">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb59-4">    role<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb59-5">    content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"what's the reverse of the string openaichatgpt?"</span></span>
<span id="cb59-6">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="37">
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb60-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># new run</span></span>
<span id="cb60-2">run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.create(</span>
<span id="cb60-3">  thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb60-4">  assistant_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>assistant.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb60-5">)</span>
<span id="cb60-6"></span>
<span id="cb60-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># wait for run to complete</span></span>
<span id="cb60-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"queued"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in_progress"</span>:</span>
<span id="cb60-9">    run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.retrieve(</span>
<span id="cb60-10">      thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb60-11">      run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb60-12">    )</span>
<span id="cb60-13">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(run.status)</span>
<span id="cb60-14">    time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>in_progress
in_progress
requires_action</code></pre>
</div>
</div>
<div class="cell" data-execution_count="38">
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb62-1">run.status</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="38">
<pre><code>'requires_action'</code></pre>
</div>
</div>
<div class="cell" data-execution_count="39">
<div class="sourceCode cell-code" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb64-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(json.dumps(run.model_dump(), indent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{
    "id": "run_dmH9mQUYjLLQJEYuXZQZJOHH",
    "assistant_id": "asst_UQEBrB5fuKnzx472Sf5qWYdH",
    "cancelled_at": null,
    "completed_at": null,
    "created_at": 1704457145,
    "expires_at": 1704457745,
    "failed_at": null,
    "file_ids": [],
    "instructions": "You are a personal python tutor.",
    "last_error": null,
    "metadata": {},
    "model": "gpt-4-1106-preview",
    "object": "thread.run",
    "required_action": {
        "submit_tool_outputs": {
            "tool_calls": [
                {
                    "id": "call_aQzOoDu3V00J5lkG6zVNtdqc",
                    "function": {
                        "arguments": "{\"string\":\"openaichatgpt\"}",
                        "name": "reverse_string"
                    },
                    "type": "function"
                }
            ]
        },
        "type": "submit_tool_outputs"
    },
    "started_at": 1704457145,
    "status": "requires_action",
    "thread_id": "thread_3fT59LTUrodHJPjBQYsIYm6F",
    "tools": [
        {
            "function": {
                "name": "reverse_string",
                "description": null,
                "parameters": {
                    "type": "object",
                    "properties": {
                        "string": {
                            "type": "string",
                            "description": "A single word"
                        }
                    },
                    "required": [
                        "string"
                    ]
                }
            },
            "type": "function"
        }
    ]
}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="40">
<div class="sourceCode cell-code" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb66-1">run.required_action</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="40">
<pre><code>RequiredAction(submit_tool_outputs=RequiredActionSubmitToolOutputs(tool_calls=[RequiredActionFunctionToolCall(id='call_aQzOoDu3V00J5lkG6zVNtdqc', function=Function(arguments='{"string":"openaichatgpt"}', name='reverse_string'), type='function')]), type='submit_tool_outputs')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="41">
<div class="sourceCode cell-code" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb68-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"requires_action"</span>:</span>
<span id="cb68-2">    tool_call <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> run.required_action.submit_tool_outputs.tool_calls[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb68-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tool call: "</span>, tool_call)</span>
<span id="cb68-4">    function_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tool_call.function.name</span>
<span id="cb68-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Function name: "</span>, function_name)</span>
<span id="cb68-6">    arguments <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(tool_call.function.arguments)</span>
<span id="cb68-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Function arguments: "</span>, arguments)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Tool call:  RequiredActionFunctionToolCall(id='call_aQzOoDu3V00J5lkG6zVNtdqc', function=Function(arguments='{"string":"openaichatgpt"}', name='reverse_string'), type='function')
Function name:  reverse_string
Function arguments:  {'string': 'openaichatgpt'}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="42">
<div class="sourceCode cell-code" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb70-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># call the function</span></span>
<span id="cb70-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"requires_action"</span>:</span>
<span id="cb70-3">    tool_call <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> run.required_action.submit_tool_outputs.tool_calls[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb70-4">    function_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tool_call.function.name</span>
<span id="cb70-5">    arguments <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(tool_call.function.arguments)</span>
<span id="cb70-6">    function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> available_functions[function_name]</span>
<span id="cb70-7">    output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> function(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>arguments)</span>
<span id="cb70-8">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Function output: "</span>, output)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Function output:  tpgtahcianepo</code></pre>
</div>
</div>
<div class="cell" data-execution_count="43">
<div class="sourceCode cell-code" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb72-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(json.dumps(run.model_dump(), indent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{
    "id": "run_dmH9mQUYjLLQJEYuXZQZJOHH",
    "assistant_id": "asst_UQEBrB5fuKnzx472Sf5qWYdH",
    "cancelled_at": null,
    "completed_at": null,
    "created_at": 1704457145,
    "expires_at": 1704457745,
    "failed_at": null,
    "file_ids": [],
    "instructions": "You are a personal python tutor.",
    "last_error": null,
    "metadata": {},
    "model": "gpt-4-1106-preview",
    "object": "thread.run",
    "required_action": {
        "submit_tool_outputs": {
            "tool_calls": [
                {
                    "id": "call_aQzOoDu3V00J5lkG6zVNtdqc",
                    "function": {
                        "arguments": "{\"string\":\"openaichatgpt\"}",
                        "name": "reverse_string"
                    },
                    "type": "function"
                }
            ]
        },
        "type": "submit_tool_outputs"
    },
    "started_at": 1704457145,
    "status": "requires_action",
    "thread_id": "thread_3fT59LTUrodHJPjBQYsIYm6F",
    "tools": [
        {
            "function": {
                "name": "reverse_string",
                "description": null,
                "parameters": {
                    "type": "object",
                    "properties": {
                        "string": {
                            "type": "string",
                            "description": "A single word"
                        }
                    },
                    "required": [
                        "string"
                    ]
                }
            },
            "type": "function"
        }
    ]
}</code></pre>
</div>
</div>
</section>
<section id="let-the-model-know-about-the-function-outputs" class="level1">
<h1>Let the Model Know about the function outputs</h1>
<div class="cell" data-execution_count="44">
<div class="sourceCode cell-code" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb74-1">run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.submit_tool_outputs(</span>
<span id="cb74-2">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb74-3">    run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb74-4">    tool_outputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: tool_call.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output"</span>: json.dumps(output)}],</span>
<span id="cb74-5">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="45">
<div class="sourceCode cell-code" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb75-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"queued"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> run.status <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in_progress"</span>:</span>
<span id="cb75-2">    run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.runs.retrieve(</span>
<span id="cb75-3">      thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb75-4">      run_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb75-5">    )</span>
<span id="cb75-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(run.status)</span>
<span id="cb75-7">    time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>in_progress
completed</code></pre>
</div>
</div>
</section>
<section id="retrieve-the-message-from-history-and-display-the-output" class="level1">
<h1>Retrieve the message from history and display the output</h1>
<div class="cell" data-execution_count="46">
<div class="sourceCode cell-code" id="cb77" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb77-1">messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.threads.messages.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb77-2">    thread_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>thread.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span></span>
<span id="cb77-3">    )</span></code></pre></div>
</div>
<div class="cell" data-execution_count="47">
<div class="sourceCode cell-code" id="cb78" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb78-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(json.dumps(messages.model_dump(), indent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{
    "data": [
        {
            "id": "msg_vp29v6UA7Amr7isw4LdGNhcW",
            "assistant_id": "asst_UQEBrB5fuKnzx472Sf5qWYdH",
            "content": [
                {
                    "text": {
                        "annotations": [],
                        "value": "The reverse of the string \"openaichatgpt\" is \"tpgtahcianepo\"."
                    },
                    "type": "text"
                }
            ],
            "created_at": 1704457154,
            "file_ids": [],
            "metadata": {},
            "object": "thread.message",
            "role": "assistant",
            "run_id": "run_dmH9mQUYjLLQJEYuXZQZJOHH",
            "thread_id": "thread_3fT59LTUrodHJPjBQYsIYm6F"
        },
        {
            "id": "msg_QPbWzZkoRFveMIRPWtvREz0s",
            "assistant_id": null,
            "content": [
                {
                    "text": {
                        "annotations": [],
                        "value": "what's the reverse of the string openaichatgpt?"
                    },
                    "type": "text"
                }
            ],
            "created_at": 1704457145,
            "file_ids": [],
            "metadata": {},
            "object": "thread.message",
            "role": "user",
            "run_id": null,
            "thread_id": "thread_3fT59LTUrodHJPjBQYsIYm6F"
        },
        {
            "id": "msg_a5FW3oicgn271ztQwcIa6kQ6",
            "assistant_id": "asst_UQEBrB5fuKnzx472Sf5qWYdH",
            "content": [
                {
                    "text": {
                        "annotations": [],
                        "value": "In Python, there are two primary types of loops that allow you to execute a block of code repeatedly:\n\n1. `for` Loop: This loop is used for iterating over a sequence (which could be a list, tuple, dictionary, set, or string) with the ability to execute a block of code for each item in the sequence. An example of a `for` loop:\n\n```python\nfor item in [\"apple\", \"banana\", \"cherry\"]:\n    print(item)\n```\n\n2. `while` Loop: This loop repeatedly executes the target statement(s) as long as the given condition is true. The condition is evaluated before executing the body of the loop. Here's an example of a `while` loop:\n\n```python\ncount = 0\nwhile count &lt; 5:\n    print(count)\n    count += 1\n```\n\nPython also provides some loop control statements that can be used within these loops:\n\n- `break`: Terminates the loop and transfers execution to the statement immediately following the loop.\n- `continue`: Skips the remaining part of the loop for the current iteration and moves to the next iteration.\n- `else`: An optional clause associated with loops that is executed if the loop completes normally (i.e., not terminated by a `break` statement).\n\nHere's an example of using `break`, `continue`, and `else` with a `for` loop:\n\n```python\nfor num in range(2, 10):\n    if num % 2 == 0:\n        print(\"Found an even number\", num)\n        continue\n    print(\"Found a number\", num)\nelse:\n    print(\"The loop is completed without a break statement.\")\n```\n\nAnd an example using `while` loop:\n\n```python\ncount = 1\nwhile count &lt; 10:\n    if count == 5:\n        break\n    print(count)\n    count += 1\nelse:\n    print(\"Reached the value of 5 and stopped the loop with a break statement.\")\n```\n\nAdditionally, Python allows the use of nested loops (a loop inside another loop), which can be useful for more complex iteration scenarios. However, it's important to use them judiciously as they can lead to high computational complexity, especially with large datasets."
                    },
                    "type": "text"
                }
            ],
            "created_at": 1704457109,
            "file_ids": [],
            "metadata": {},
            "object": "thread.message",
            "role": "assistant",
            "run_id": "run_BLZnD60Vl7wePLUsdmUFR5zd",
            "thread_id": "thread_3fT59LTUrodHJPjBQYsIYm6F"
        },
        {
            "id": "msg_UDx8nMLlKxvriXAEBeW0AJ9f",
            "assistant_id": null,
            "content": [
                {
                    "text": {
                        "annotations": [],
                        "value": "what are different loops in python?"
                    },
                    "type": "text"
                }
            ],
            "created_at": 1704457107,
            "file_ids": [],
            "metadata": {},
            "object": "thread.message",
            "role": "user",
            "run_id": null,
            "thread_id": "thread_3fT59LTUrodHJPjBQYsIYm6F"
        }
    ],
    "object": "list",
    "first_id": "msg_vp29v6UA7Amr7isw4LdGNhcW",
    "last_id": "msg_UDx8nMLlKxvriXAEBeW0AJ9f",
    "has_more": false
}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="48">
<div class="sourceCode cell-code" id="cb80" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb80-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> message <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> messages.data:</span>
<span id="cb80-2">    display(Markdown(message.content[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].text.value))</span>
<span id="cb80-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>The reverse of the string “openaichatgpt” is “tpgtahcianepo”.</p>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>********************************************************************************
********************************************************************************
********************************************************************************
********************************************************************************</code></pre>
</div>
<div class="cell-output cell-output-display">
<p>what’s the reverse of the string openaichatgpt?</p>
</div>
<div class="cell-output cell-output-display">
<p>In Python, there are two primary types of loops that allow you to execute a block of code repeatedly:</p>
<ol type="1">
<li><code>for</code> Loop: This loop is used for iterating over a sequence (which could be a list, tuple, dictionary, set, or string) with the ability to execute a block of code for each item in the sequence. An example of a <code>for</code> loop:</li>
</ol>
<div class="sourceCode" id="cb82" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb82-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"apple"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"banana"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cherry"</span>]:</span>
<span id="cb82-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(item)</span></code></pre></div>
<ol start="2" type="1">
<li><code>while</code> Loop: This loop repeatedly executes the target statement(s) as long as the given condition is true. The condition is evaluated before executing the body of the loop. Here’s an example of a <code>while</code> loop:</li>
</ol>
<div class="sourceCode" id="cb83" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb83-1">count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb83-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>:</span>
<span id="cb83-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(count)</span>
<span id="cb83-4">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span></code></pre></div>
<p>Python also provides some loop control statements that can be used within these loops:</p>
<ul>
<li><code>break</code>: Terminates the loop and transfers execution to the statement immediately following the loop.</li>
<li><code>continue</code>: Skips the remaining part of the loop for the current iteration and moves to the next iteration.</li>
<li><code>else</code>: An optional clause associated with loops that is executed if the loop completes normally (i.e., not terminated by a <code>break</code> statement).</li>
</ul>
<p>Here’s an example of using <code>break</code>, <code>continue</code>, and <code>else</code> with a <code>for</code> loop:</p>
<div class="sourceCode" id="cb84" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb84-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> num <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>):</span>
<span id="cb84-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb84-3">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Found an even number"</span>, num)</span>
<span id="cb84-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span></span>
<span id="cb84-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Found a number"</span>, num)</span>
<span id="cb84-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb84-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The loop is completed without a break statement."</span>)</span></code></pre></div>
<p>And an example using <code>while</code> loop:</p>
<div class="sourceCode" id="cb85" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb85-1">count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb85-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>:</span>
<span id="cb85-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>:</span>
<span id="cb85-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span>
<span id="cb85-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(count)</span>
<span id="cb85-6">    count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb85-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb85-8">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Reached the value of 5 and stopped the loop with a break statement."</span>)</span></code></pre></div>
<p>Additionally, Python allows the use of nested loops (a loop inside another loop), which can be useful for more complex iteration scenarios. However, it’s important to use them judiciously as they can lead to high computational complexity, especially with large datasets.</p>
</div>
<div class="cell-output cell-output-display">
<p>what are different loops in python?</p>
</div>
</div>
</section>
<section id="delete-the-assistant" class="level1">
<h1>Delete the Assistant</h1>
<div class="cell" data-execution_count="49">
<div class="sourceCode cell-code" id="cb86" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb86-1">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.beta.assistants.delete(assistant_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>assistant.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>)</span>
<span id="cb86-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(response)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>AssistantDeleted(id='asst_UQEBrB5fuKnzx472Sf5qWYdH', deleted=True, object='assistant.deleted')</code></pre>
</div>
</div>



</section>

<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>llm</category>
  <category>openai</category>
  <category>function_calling</category>
  <category>openai_assistants_api</category>
  <guid>https://arunprakash.ai/posts/master-the-art-of-function-calling-in-openai-assistants-api-a-comprehensive-guide-for-beginners/assistants_function_calling.html</guid>
  <pubDate>Thu, 04 Jan 2024 14:00:00 GMT</pubDate>
  <media:content url="https://arunprakash.ai/posts/master-the-art-of-function-calling-in-openai-assistants-api-a-comprehensive-guide-for-beginners/assistant.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>MoodCast: Leveraging OpenAI Parallel Function Calling for Real-Time Weather-Based Music Playlists</title>
  <dc:creator>Arun Prakash</dc:creator>
  <link>https://arunprakash.ai/posts/openai-parallel-function-calling-handson-tools/function_calling.html</link>
  <description><![CDATA[ 




<p>This blog post introduces “MoodCast,” a project that leverages OpenAI’s function calling feature to create real-time, weather-based music playlists. By integrating the OpenWeather and Spotify APIs, MoodCast demonstrates the power and flexibility of OpenAI’s function calling in a practical, engaging application.</p>
<p>OpenAI’s function calling feature allows developers to describe a function, and the model generates a JSON output containing arguments. This feature doesn’t call any function itself, but it generates the JSON that can be used to call a function from your code. This is a significant advancement as it allows developers to interact with AI in a more structured and systematic way, overcoming the challenges of dealing with unstructured data outputs.</p>
<p>In the context of MoodCast, this feature is used to interact with the OpenWeather and Spotify APIs, creating a unique blend of AI, weather data, and music. The project serves as a practical example of how OpenAI’s function calling can be used to solve complex problems and create innovative applications.</p>
<p>This blog post will focus on how to use function calling for OpenAI’s chat completion endpoints. It will provide a detailed guide on how to leverage this feature for your applications, with MoodCast serving as a real-world example. Whether you’re a seasoned developer or a beginner in the field of AI, this post aims to provide valuable insights into the potential of OpenAI’s function calling feature.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/openai-parallel-function-calling-handson-tools/music.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Logo</figcaption>
</figure>
</div>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dotenv <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dotenv</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> openai</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> openai <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> OpenAI</span>
<span id="cb1-6">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OpenAI()</span>
<span id="cb1-7">load_dotenv()</span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># openai key</span></span>
<span id="cb1-9">OPENAI_API_KEY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OPENAI_API_KEY"</span>)</span>
<span id="cb1-10">openai.api_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OPENAI_API_KEY</span>
<span id="cb1-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> display, Markdown</span></code></pre></div>
</div>
<p>First let’s check what openai chat completion say about current weather</p>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb2-2">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span>,</span>
<span id="cb2-3">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb2-4">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"what's the current weather in Tokyo?"</span>}</span>
<span id="cb2-5">    ],</span>
<span id="cb2-6">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>,</span>
<span id="cb2-7">    seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb2-8">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(response)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ChatCompletion(id='chatcmpl-8dISDM1s7co80v8cx8z65WwUKkTLQ', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content="I'm sorry, but I cannot provide real-time data such as the current weather. To get the latest weather information for Tokyo or any other location, please check a reliable weather forecasting service or website like the Japan Meteorological Agency, Weather.com, or a weather app on your smartphone. These sources are regularly updated and can provide you with current conditions, forecasts, and any weather alerts that might be in effect.", role='assistant', function_call=None, tool_calls=None))], created=1704376421, model='gpt-4-1106-preview', object='chat.completion', system_fingerprint='fp_3905aa4f79', usage=CompletionUsage(completion_tokens=82, prompt_tokens=15, total_tokens=97))</code></pre>
</div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">display(Markdown(response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message.content))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>I’m sorry, but I cannot provide real-time data such as the current weather. To get the latest weather information for Tokyo or any other location, please check a reliable weather forecasting service or website like the Japan Meteorological Agency, Weather.com, or a weather app on your smartphone. These sources are regularly updated and can provide you with current conditions, forecasts, and any weather alerts that might be in effect.</p>
</div>
</div>
<p>As we can see openai does not have any information about the current weather. So we will use openweather api to get the current weather and then use openai chat completion to generate a response.</p>
<section id="live-data-using-openweathermap-api" class="level1">
<h1>Live Data using OpenWeatherMap API</h1>
<p>You can signup here to get your api key https://openweathermap.org/api</p>
<p>I have stored all the api key infomration in a .env file. You can create your own .env file and store your api key there.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># .env file</span></span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">OPENWEATHER_API_KEY</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>your_api_key</span>
<span id="cb6-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">OPENAI_API_KEY</span> = sk-key</span>
<span id="cb6-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">SPOTIFY_CLIENT_ID</span> = 4444633gfdggdggdgdgdg</span>
<span id="cb6-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">SPOTIFY_CLIENT_SECRET</span> = 23rtrrgrdgdr5353terg</span></code></pre></div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> requests</span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_current_weather(city, api_key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OPENWEATHER_API_KEY"</span>), unit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metric"</span>):</span>
<span id="cb7-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Get the current weather for a given city using OpenWeather API."""</span></span>
<span id="cb7-5">    base_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://api.openweathermap.org/data/2.5/weather"</span></span>
<span id="cb7-6">    params <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb7-7">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"q"</span>: city,</span>
<span id="cb7-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"appid"</span>: api_key,</span>
<span id="cb7-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"units"</span>: unit</span>
<span id="cb7-10">    }</span>
<span id="cb7-11">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(base_url, params<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>params)</span>
<span id="cb7-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> response.status_code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>:</span>
<span id="cb7-13">        data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response.json()</span>
<span id="cb7-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print(data)</span></span>
<span id="cb7-15">        weather <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb7-16">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"location"</span>: data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>],</span>
<span id="cb7-17">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"temperature"</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"main"</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"temp"</span>]),</span>
<span id="cb7-18">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rain"</span>: data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weather"</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"main"</span>],</span>
<span id="cb7-19">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unit"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Celsius"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> unit <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metric"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fahrenheit"</span></span>
<span id="cb7-20">        }</span>
<span id="cb7-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> json.dumps(weather)</span>
<span id="cb7-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb7-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"location"</span>: city, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"temperature"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unknown"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unit"</span>: unit, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rain"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unknown"</span>}</span>
<span id="cb7-24"></span>
<span id="cb7-25">api_key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OPENWEATHER_API_KEY"</span>)</span>
<span id="cb7-26">weather_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_current_weather(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Nagercoil"</span>)</span>
<span id="cb7-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(weather_info)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{"location": "Nagercoil", "temperature": 26, "rain": "Clouds", "unit": "Celsius"}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(weather_info)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>str</code></pre>
</div>
</div>
</section>
<section id="spotify-music" class="level1">
<h1>Spotify Music</h1>
<p>We can create an application on spotify and get the client id and client secret. We can use these credentials to get the access token and then use the access token to get the current weather based playlist.</p>
<p>https://developer.spotify.com/</p>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip3 install spotipy</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> spotipy</span>
<span id="cb12-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> spotipy.oauth2 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SpotifyClientCredentials</span>
<span id="cb12-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb12-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image, display, Audio</span>
<span id="cb12-5"></span>
<span id="cb12-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> search_song(song_name):</span>
<span id="cb12-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up your Spotify credentials</span></span>
<span id="cb12-8">    client_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SPOTIFY_CLIENT_ID"</span>)</span>
<span id="cb12-9">    client_secret <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SPOTIFY_CLIENT_SECRET"</span>)</span>
<span id="cb12-10"></span>
<span id="cb12-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Authenticate with Spotify</span></span>
<span id="cb12-12">    client_credentials_manager <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SpotifyClientCredentials(client_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>client_id, client_secret<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>client_secret)</span>
<span id="cb12-13">    sp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> spotipy.Spotify(client_credentials_manager<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>client_credentials_manager)</span>
<span id="cb12-14"></span>
<span id="cb12-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Search for the song</span></span>
<span id="cb12-16">    results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sp.search(q<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>song_name, limit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'track'</span>)</span>
<span id="cb12-17">    tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tracks'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'items'</span>]</span>
<span id="cb12-18"></span>
<span id="cb12-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the first result</span></span>
<span id="cb12-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> tracks:</span>
<span id="cb12-21">        track <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tracks[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb12-22">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> json.dumps({</span>
<span id="cb12-23">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"song"</span>: track[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'name'</span>],</span>
<span id="cb12-24">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"artist"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>.join(artist[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'name'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> artist <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> track[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'artists'</span>]),</span>
<span id="cb12-25">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"album"</span>: track[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'album'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'name'</span>],</span>
<span id="cb12-26">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"album_cover_url"</span>: track[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'album'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'images'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'url'</span>],</span>
<span id="cb12-27">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"preview_url"</span>: track[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'preview_url'</span>]</span>
<span id="cb12-28">        })</span>
<span id="cb12-29"></span>
<span id="cb12-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb12-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No song found"</span></span>
<span id="cb12-32"></span>
<span id="cb12-33">song_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Appadi podu"</span></span>
<span id="cb12-34">song_details <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> search_song(song_name)</span>
<span id="cb12-35"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(song_details)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{"song": "Appadi Podu", "artist": "Vidyasagar, Krishnakumar Kunnath, Anuradha Sriram", "album": "Ghilli (Original Motion Picture Soundtrack)", "album_cover_url": "https://i.scdn.co/image/ab67616d0000b2737bbef42d34fd25b14b2a54ea", "preview_url": "https://p.scdn.co/mp3-preview/df03b78315eaa0c7e20d66ea17dcf1a5fa4e6e3e?cid=706a549bcf8a4575b6e1dd3fc24f5f95"}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># display song details</span></span>
<span id="cb14-2">song_details_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(song_details)</span>
<span id="cb14-3">display(Image(url<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>song_details_json[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"album_cover_url"</span>], width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>), )</span>
<span id="cb14-4">display(Markdown(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"[</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>song_details_json[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'song'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> by </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>song_details_json[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'artist'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">](</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>song_details_json[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'preview_url'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>))</span>
<span id="cb14-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(song_details_json[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"album"</span>])</span></code></pre></div>
<div class="cell-output cell-output-display">
<img src="https://arunprakash.ai/posts/openai-parallel-function-calling-handson-tools/https:/i.scdn.co/image/ab67616d0000b2737bbef42d34fd25b14b2a54ea" width="100">
</div>
<div class="cell-output cell-output-display">
<p><a href="https://p.scdn.co/mp3-preview/df03b78315eaa0c7e20d66ea17dcf1a5fa4e6e3e?cid=706a549bcf8a4575b6e1dd3fc24f5f95">Appadi Podu by Vidyasagar, Krishnakumar Kunnath, Anuradha Sriram</a></p>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Ghilli (Original Motion Picture Soundtrack)</code></pre>
</div>
</div>
</section>
<section id="creating-tools" class="level1">
<h1>Creating Tools</h1>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">available_tools <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb16-2">        {</span>
<span id="cb16-3">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function"</span>,</span>
<span id="cb16-4">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function"</span>: {</span>
<span id="cb16-5">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"get_current_weather"</span>,</span>
<span id="cb16-6">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Get the current weather in a given location, use farhenheit"</span>,</span>
<span id="cb16-7">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parameters"</span>: {</span>
<span id="cb16-8">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"object"</span>,</span>
<span id="cb16-9">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"properties"</span>: {</span>
<span id="cb16-10">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"city"</span>: {</span>
<span id="cb16-11">                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb16-12">                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The city to get the weather for"</span>,</span>
<span id="cb16-13">                        },</span>
<span id="cb16-14">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unit"</span>: {</span>
<span id="cb16-15">                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb16-16">                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The unit to use for the temperature, metric is default"</span>,</span>
<span id="cb16-17">                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enum"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metric"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"imperial"</span>],</span>
<span id="cb16-18">                        }</span>
<span id="cb16-19">                    },</span>
<span id="cb16-20">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"city"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unit"</span>],</span>
<span id="cb16-21">                },</span>
<span id="cb16-22">            },</span>
<span id="cb16-23">        },</span>
<span id="cb16-24">        {</span>
<span id="cb16-25">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function"</span>,</span>
<span id="cb16-26">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function"</span>: {</span>
<span id="cb16-27">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"search_song"</span>,</span>
<span id="cb16-28">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Search for a song on Spotify and display its details including the artist, album, album cover, and a preview link if available"</span>,</span>
<span id="cb16-29">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parameters"</span>: {</span>
<span id="cb16-30">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"object"</span>,</span>
<span id="cb16-31">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"properties"</span>: {</span>
<span id="cb16-32">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"song_name"</span>: {</span>
<span id="cb16-33">                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"string"</span>,</span>
<span id="cb16-34">                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"description"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The name of the song to search for"</span>,</span>
<span id="cb16-35">                        }</span>
<span id="cb16-36">                    },</span>
<span id="cb16-37">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"required"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"song_name"</span>],</span>
<span id="cb16-38">                }</span>
<span id="cb16-39">            }</span>
<span id="cb16-40">        }</span>
<span id="cb16-41">    ]</span></code></pre></div>
</div>
<p>In the MoodCast project, JSON is utilized to define tools for function descriptions, which are essential for the OpenAI function calling feature. This feature enables the AI to generate structured data outputs, specifically JSON objects containing arguments for functions described in the API call. For instance, the <code>get_current_weather</code> function is defined to fetch current weather data for a specified city, while the <code>search_song</code> function is designed to search for songs on Spotify. These function descriptions are crucial as they guide the AI in generating the correct JSON output that can be used to call functions from the code, thereby facilitating the integration with OpenWeather and Spotify APIs.</p>
<p>To effectively use function calling with OpenAI, developers must clearly define their functions, including the name, description, and parameters, in a JSON format. This structured approach allows the AI to understand the context and generate the appropriate JSON output. The OpenAI API documentation provides guidelines on how to describe functions for function calling, emphasizing the importance of a clear and detailed function schema to ensure accurate and useful responses from the AI model.</p>
<p>For MoodCast, this means that by defining functions like <code>get_current_weather</code> and <code>search_song</code> with precise parameters and descriptions, the AI can produce JSON outputs that correspond to these functions. These outputs can then be used to make API calls to OpenWeather and Spotify, respectively, to create a music playlist that matches the current weather conditions, showcasing a practical application of OpenAI’s function calling capability in a real-world project.</p>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">city <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Nagercoil"</span></span></code></pre></div>
</div>
</section>
<section id="openai-chat-completion-function-calling" class="level1">
<h1>Openai Chat Completion Function Calling</h1>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb18-2">    {</span>
<span id="cb18-3">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>,</span>
<span id="cb18-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A Song Suggestions Assistant based on local weather in metric and local language"</span></span>
<span id="cb18-5">    },</span>
<span id="cb18-6">    {</span>
<span id="cb18-7">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb18-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"""I am in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>city<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, suggest 5 songs based on their current weather and their local language</span></span>
<span id="cb18-9"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">        and display their album details such as album cover, artist, and preview link.</span></span>
<span id="cb18-10"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">        return a json object with keys as song, artist, album, album_cover_url, and preview_url and reason</span></span>
<span id="cb18-11"></span>
<span id="cb18-12"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">        key as song_suggestions and value as a list of json objects with keys as song, artist, album, album_cover_url, preview_url, and reason</span></span>
<span id="cb18-13"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb18-14">    }</span>
<span id="cb18-15">]</span>
<span id="cb18-16"></span>
<span id="cb18-17">tools <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> available_tools</span>
<span id="cb18-18">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb18-19">    model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span>,</span>
<span id="cb18-20">    messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>messages,</span>
<span id="cb18-21">    tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tools,</span>
<span id="cb18-22">    tool_choice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>, </span>
<span id="cb18-23">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span></span>
<span id="cb18-24">)</span>
<span id="cb18-25">response_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message</span>
<span id="cb18-26">tool_calls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response_message.tool_calls</span></code></pre></div>
</div>
<p>We can also force the model to use some particular function by using <code>tool_choice = {"type": "function", "function": {"name": "my_function"}}</code> forces the model to call that function.</p>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">response</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre><code>ChatCompletion(id='chatcmpl-8dISaihzl1Q2k7S09VBau44EwlMMv', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', function_call=None, tool_calls=[ChatCompletionMessageToolCall(id='call_FmoMsWB1hklh6GvT9QmrTX3k', function=Function(arguments='{\n  "city": "Nagercoil",\n  "unit": "metric"\n}', name='get_current_weather'), type='function')]))], created=1704376444, model='gpt-4-1106-preview', object='chat.completion', system_fingerprint='fp_3905aa4f79', usage=CompletionUsage(completion_tokens=28, prompt_tokens=249, total_tokens=277))</code></pre>
</div>
</div>
<p>As when openai gonna use function calling, you can see the <code>finish_reason</code> in the response, which indicates we have to call the function with the given arguments and get the results, and pass it to the model again</p>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">response_message</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>ChatCompletionMessage(content=None, role='assistant', function_call=None, tool_calls=[ChatCompletionMessageToolCall(id='call_FmoMsWB1hklh6GvT9QmrTX3k', function=Function(arguments='{\n  "city": "Nagercoil",\n  "unit": "metric"\n}', name='get_current_weather'), type='function')])</code></pre>
</div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">response_message.tool_calls</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<pre><code>[ChatCompletionMessageToolCall(id='call_FmoMsWB1hklh6GvT9QmrTX3k', function=Function(arguments='{\n  "city": "Nagercoil",\n  "unit": "metric"\n}', name='get_current_weather'), type='function')]</code></pre>
</div>
</div>
<section id="tool-calls" class="level3">
<h3 class="anchored" data-anchor-id="tool-calls">Tool Calls</h3>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> tool <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tool_calls:</span>
<span id="cb25-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Tool ID: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tool<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb25-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Call the function: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tool<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>function<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb25-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Parameters: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tool<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>function<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>arguments<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Tool ID: call_FmoMsWB1hklh6GvT9QmrTX3k
Call the function: get_current_weather
Parameters: {
  "city": "Nagercoil",
  "unit": "metric"
}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">function_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tool_calls[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].function.name</span>
<span id="cb27-2">function_args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tool_calls[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].function.arguments</span>
<span id="cb27-3"></span>
<span id="cb27-4">function_name, function_args</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="17">
<pre><code>('get_current_weather', '{\n  "city": "Nagercoil",\n  "unit": "metric"\n}')</code></pre>
</div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">function_args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(function_args)</span>
<span id="cb29-2">function_args</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>{'city': 'Nagercoil', 'unit': 'metric'}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">available_functions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb31-2">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"get_current_weather"</span>: get_current_weather,</span>
<span id="cb31-3">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"search_song"</span>: search_song,</span>
<span id="cb31-4">    }</span></code></pre></div>
</div>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">function_response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> available_functions[function_name](<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>function_args)</span>
<span id="cb32-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(function_response)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{"location": "Nagercoil", "temperature": 26, "rain": "Clouds", "unit": "Celsius"}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">messages</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="21">
<pre><code>[{'role': 'system',
  'content': 'A Song Suggestions Assistant based on local weather in metric and local language'},
 {'role': 'user',
  'content': 'I am in Nagercoil, suggest 5 songs based on their current weather and their local language\n        and display their album details such as album cover, artist, and preview link.\n        return a json object with keys as song, artist, album, album_cover_url, and preview_url and reason\n\n        key as song_suggestions and value as a list of json objects with keys as song, artist, album, album_cover_url, preview_url, and reason\n        '}]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">messages.append(response_message)</span>
<span id="cb36-2">messages</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="22">
<pre><code>[{'role': 'system',
  'content': 'A Song Suggestions Assistant based on local weather in metric and local language'},
 {'role': 'user',
  'content': 'I am in Nagercoil, suggest 5 songs based on their current weather and their local language\n        and display their album details such as album cover, artist, and preview link.\n        return a json object with keys as song, artist, album, album_cover_url, and preview_url and reason\n\n        key as song_suggestions and value as a list of json objects with keys as song, artist, album, album_cover_url, preview_url, and reason\n        '},
 ChatCompletionMessage(content=None, role='assistant', function_call=None, tool_calls=[ChatCompletionMessageToolCall(id='call_FmoMsWB1hklh6GvT9QmrTX3k', function=Function(arguments='{\n  "city": "Nagercoil",\n  "unit": "metric"\n}', name='get_current_weather'), type='function')])]</code></pre>
</div>
</div>
</section>
<section id="appending-tool-call-responses-to-the-message-history" class="level3">
<h3 class="anchored" data-anchor-id="appending-tool-call-responses-to-the-message-history">Appending Tool Call Responses to the Message History</h3>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1">messages.append(</span>
<span id="cb38-2">                {</span>
<span id="cb38-3">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: tool_calls[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb38-4">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool"</span>,</span>
<span id="cb38-5">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: function_name,</span>
<span id="cb38-6">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: function_response,</span>
<span id="cb38-7">                }</span>
<span id="cb38-8">            )</span>
<span id="cb38-9">messages</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="23">
<pre><code>[{'role': 'system',
  'content': 'A Song Suggestions Assistant based on local weather in metric and local language'},
 {'role': 'user',
  'content': 'I am in Nagercoil, suggest 5 songs based on their current weather and their local language\n        and display their album details such as album cover, artist, and preview link.\n        return a json object with keys as song, artist, album, album_cover_url, and preview_url and reason\n\n        key as song_suggestions and value as a list of json objects with keys as song, artist, album, album_cover_url, preview_url, and reason\n        '},
 ChatCompletionMessage(content=None, role='assistant', function_call=None, tool_calls=[ChatCompletionMessageToolCall(id='call_FmoMsWB1hklh6GvT9QmrTX3k', function=Function(arguments='{\n  "city": "Nagercoil",\n  "unit": "metric"\n}', name='get_current_weather'), type='function')]),
 {'tool_call_id': 'call_FmoMsWB1hklh6GvT9QmrTX3k',
  'role': 'tool',
  'name': 'get_current_weather',
  'content': '{"location": "Nagercoil", "temperature": 26, "rain": "Clouds", "unit": "Celsius"}'}]</code></pre>
</div>
</div>
</section>
<section id="second-call-to-get-song-details" class="level3">
<h3 class="anchored" data-anchor-id="second-call-to-get-song-details">Second Call to get Song Details</h3>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1">second_response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb40-2">            model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span>,</span>
<span id="cb40-3">            messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>messages,</span>
<span id="cb40-4">            tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>available_tools,</span>
<span id="cb40-5">            tool_choice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>,</span>
<span id="cb40-6">        )</span>
<span id="cb40-7"></span>
<span id="cb40-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(second_response)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>ChatCompletion(id='chatcmpl-8dISdx8ctxPgd8bD3BDnYCEOmialh', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content='The current weather in Nagercoil is 26 degrees Celsius with clouds. Based on this weather, I will suggest songs that convey a sense of peace, comfort, and perhaps contemplation, which is often associated with cloudy days. The local language in Nagercoil is Tamil, so I will be selecting Tamil songs that match the weather mood.\n\nI will now search for suitable Tamil songs and provide their details. Please wait a moment while I process this information.', role='assistant', function_call=None, tool_calls=[ChatCompletionMessageToolCall(id='call_UEVy6FVIVy3V2kwcD36tDRvv', function=Function(arguments='{"song_name": "Mazhai Kuruvi"}', name='search_song'), type='function'), ChatCompletionMessageToolCall(id='call_XKVJrqRjh1aafYldWeBWNnG2', function=Function(arguments='{"song_name": "Nenjukulle"}', name='search_song'), type='function'), ChatCompletionMessageToolCall(id='call_I5Gnz9hvK1JuX8cSPFH14aL8', function=Function(arguments='{"song_name": "Uyire Uyire"}', name='search_song'), type='function'), ChatCompletionMessageToolCall(id='call_KrUYtZqTDopUCua3dRbrOC9B', function=Function(arguments='{"song_name": "Vaseegara"}', name='search_song'), type='function'), ChatCompletionMessageToolCall(id='call_w724Il0i6dFCDLG4l4OmPY4e', function=Function(arguments='{"song_name": "Aaromale"}', name='search_song'), type='function')]))], created=1704376447, model='gpt-4-1106-preview', object='chat.completion', system_fingerprint='fp_c6efb4aa39', usage=CompletionUsage(completion_tokens=279, prompt_tokens=307, total_tokens=586))</code></pre>
</div>
</div>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1">display(Markdown(second_response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message.content))</span></code></pre></div>
<div class="cell-output cell-output-display">
<p>The current weather in Nagercoil is 26 degrees Celsius with clouds. Based on this weather, I will suggest songs that convey a sense of peace, comfort, and perhaps contemplation, which is often associated with cloudy days. The local language in Nagercoil is Tamil, so I will be selecting Tamil songs that match the weather mood.</p>
<p>I will now search for suitable Tamil songs and provide their details. Please wait a moment while I process this information.</p>
</div>
</div>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1">tool_calls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> second_response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message.tool_calls</span></code></pre></div>
</div>
<div class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> tool <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tool_calls:</span>
<span id="cb44-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Tool ID: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tool<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Call the function: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tool<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>function<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Parameters: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tool<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>function<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>arguments<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Tool ID: call_UEVy6FVIVy3V2kwcD36tDRvv
Call the function: search_song
Parameters: {"song_name": "Mazhai Kuruvi"}
Tool ID: call_XKVJrqRjh1aafYldWeBWNnG2
Call the function: search_song
Parameters: {"song_name": "Nenjukulle"}
Tool ID: call_I5Gnz9hvK1JuX8cSPFH14aL8
Call the function: search_song
Parameters: {"song_name": "Uyire Uyire"}
Tool ID: call_KrUYtZqTDopUCua3dRbrOC9B
Call the function: search_song
Parameters: {"song_name": "Vaseegara"}
Tool ID: call_w724Il0i6dFCDLG4l4OmPY4e
Call the function: search_song
Parameters: {"song_name": "Aaromale"}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1">messages.append(second_response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message)</span></code></pre></div>
</div>
</section>
<section id="call-the-function-and-append-the-results-to-the-message-history" class="level3">
<h3 class="anchored" data-anchor-id="call-the-function-and-append-the-results-to-the-message-history">Call the function and append the results to the message history</h3>
<div class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> tool <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tool_calls:</span>
<span id="cb47-2">    function_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tool.function.name</span>
<span id="cb47-3">    function_args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(tool.function.arguments)</span>
<span id="cb47-4">    function_response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> available_functions[function_name](<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>function_args)</span>
<span id="cb47-5"></span>
<span id="cb47-6">    messages.append(</span>
<span id="cb47-7">        {</span>
<span id="cb47-8">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: tool.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb47-9">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool"</span>,</span>
<span id="cb47-10">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: function_name,</span>
<span id="cb47-11">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: function_response,</span>
<span id="cb47-12">        }</span>
<span id="cb47-13">    )</span>
<span id="cb47-14">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(function_response)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{"song": "Mazhai Kuruvi", "artist": "A.R. Rahman", "album": "Chekka Chivantha Vaanam (Original Motion Picture Soundtrack)", "album_cover_url": "https://i.scdn.co/image/ab67616d0000b2735234d8419de0ffdccc8c27a7", "preview_url": "https://p.scdn.co/mp3-preview/771e747c73fc6cd5914a4e447f9daf3bd74e38a5?cid=706a549bcf8a4575b6e1dd3fc24f5f95"}
{"song": "Nenjukulle", "artist": "Ashbel Peter, Theertha", "album": "Nenjukulle", "album_cover_url": "https://i.scdn.co/image/ab67616d0000b273d3d692e38621d741606588e7", "preview_url": "https://p.scdn.co/mp3-preview/d48678e7eef2bebd5a099d2b6b1ff5dd299ff102?cid=706a549bcf8a4575b6e1dd3fc24f5f95"}
{"song": "Uyire Uyire", "artist": "Saagar, Na.Muthukumar", "album": "Santhosh Subramaniyam (Original Motion Picture Soundtrack)", "album_cover_url": "https://i.scdn.co/image/ab67616d0000b2738b895bdb8ccefee6ab65114b", "preview_url": "https://p.scdn.co/mp3-preview/c4e812236497ce1f72610be2af10740ad6ecead6?cid=706a549bcf8a4575b6e1dd3fc24f5f95"}
{"song": "Vaseegara", "artist": "Bombay Jayashri", "album": "Minnalae (Original Motion Picture Soundtrack)", "album_cover_url": "https://i.scdn.co/image/ab67616d0000b273102f02fa7e7ded2bc5f65653", "preview_url": "https://p.scdn.co/mp3-preview/2db5c05f48a7214b56c8eed843103ae3f241e00e?cid=706a549bcf8a4575b6e1dd3fc24f5f95"}
{"song": "Aaromale", "artist": "A.R. Rahman, Alphons Joseph", "album": "Vinnathaandi Varuvaayaa (Original Motion Picture Soundtrack)", "album_cover_url": "https://i.scdn.co/image/ab67616d0000b27397838a7eeb5f477cfc6707a5", "preview_url": "https://p.scdn.co/mp3-preview/ed07e1b3e3fe14b55e29c10c5413dd9e04fbe1e5?cid=706a549bcf8a4575b6e1dd3fc24f5f95"}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1">messages</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="30">
<pre><code>[{'role': 'system',
  'content': 'A Song Suggestions Assistant based on local weather in metric and local language'},
 {'role': 'user',
  'content': 'I am in Nagercoil, suggest 5 songs based on their current weather and their local language\n        and display their album details such as album cover, artist, and preview link.\n        return a json object with keys as song, artist, album, album_cover_url, and preview_url and reason\n\n        key as song_suggestions and value as a list of json objects with keys as song, artist, album, album_cover_url, preview_url, and reason\n        '},
 ChatCompletionMessage(content=None, role='assistant', function_call=None, tool_calls=[ChatCompletionMessageToolCall(id='call_FmoMsWB1hklh6GvT9QmrTX3k', function=Function(arguments='{\n  "city": "Nagercoil",\n  "unit": "metric"\n}', name='get_current_weather'), type='function')]),
 {'tool_call_id': 'call_FmoMsWB1hklh6GvT9QmrTX3k',
  'role': 'tool',
  'name': 'get_current_weather',
  'content': '{"location": "Nagercoil", "temperature": 26, "rain": "Clouds", "unit": "Celsius"}'},
 ChatCompletionMessage(content='The current weather in Nagercoil is 26 degrees Celsius with clouds. Based on this weather, I will suggest songs that convey a sense of peace, comfort, and perhaps contemplation, which is often associated with cloudy days. The local language in Nagercoil is Tamil, so I will be selecting Tamil songs that match the weather mood.\n\nI will now search for suitable Tamil songs and provide their details. Please wait a moment while I process this information.', role='assistant', function_call=None, tool_calls=[ChatCompletionMessageToolCall(id='call_UEVy6FVIVy3V2kwcD36tDRvv', function=Function(arguments='{"song_name": "Mazhai Kuruvi"}', name='search_song'), type='function'), ChatCompletionMessageToolCall(id='call_XKVJrqRjh1aafYldWeBWNnG2', function=Function(arguments='{"song_name": "Nenjukulle"}', name='search_song'), type='function'), ChatCompletionMessageToolCall(id='call_I5Gnz9hvK1JuX8cSPFH14aL8', function=Function(arguments='{"song_name": "Uyire Uyire"}', name='search_song'), type='function'), ChatCompletionMessageToolCall(id='call_KrUYtZqTDopUCua3dRbrOC9B', function=Function(arguments='{"song_name": "Vaseegara"}', name='search_song'), type='function'), ChatCompletionMessageToolCall(id='call_w724Il0i6dFCDLG4l4OmPY4e', function=Function(arguments='{"song_name": "Aaromale"}', name='search_song'), type='function')]),
 {'tool_call_id': 'call_UEVy6FVIVy3V2kwcD36tDRvv',
  'role': 'tool',
  'name': 'search_song',
  'content': '{"song": "Mazhai Kuruvi", "artist": "A.R. Rahman", "album": "Chekka Chivantha Vaanam (Original Motion Picture Soundtrack)", "album_cover_url": "https://i.scdn.co/image/ab67616d0000b2735234d8419de0ffdccc8c27a7", "preview_url": "https://p.scdn.co/mp3-preview/771e747c73fc6cd5914a4e447f9daf3bd74e38a5?cid=706a549bcf8a4575b6e1dd3fc24f5f95"}'},
 {'tool_call_id': 'call_XKVJrqRjh1aafYldWeBWNnG2',
  'role': 'tool',
  'name': 'search_song',
  'content': '{"song": "Nenjukulle", "artist": "Ashbel Peter, Theertha", "album": "Nenjukulle", "album_cover_url": "https://i.scdn.co/image/ab67616d0000b273d3d692e38621d741606588e7", "preview_url": "https://p.scdn.co/mp3-preview/d48678e7eef2bebd5a099d2b6b1ff5dd299ff102?cid=706a549bcf8a4575b6e1dd3fc24f5f95"}'},
 {'tool_call_id': 'call_I5Gnz9hvK1JuX8cSPFH14aL8',
  'role': 'tool',
  'name': 'search_song',
  'content': '{"song": "Uyire Uyire", "artist": "Saagar, Na.Muthukumar", "album": "Santhosh Subramaniyam (Original Motion Picture Soundtrack)", "album_cover_url": "https://i.scdn.co/image/ab67616d0000b2738b895bdb8ccefee6ab65114b", "preview_url": "https://p.scdn.co/mp3-preview/c4e812236497ce1f72610be2af10740ad6ecead6?cid=706a549bcf8a4575b6e1dd3fc24f5f95"}'},
 {'tool_call_id': 'call_KrUYtZqTDopUCua3dRbrOC9B',
  'role': 'tool',
  'name': 'search_song',
  'content': '{"song": "Vaseegara", "artist": "Bombay Jayashri", "album": "Minnalae (Original Motion Picture Soundtrack)", "album_cover_url": "https://i.scdn.co/image/ab67616d0000b273102f02fa7e7ded2bc5f65653", "preview_url": "https://p.scdn.co/mp3-preview/2db5c05f48a7214b56c8eed843103ae3f241e00e?cid=706a549bcf8a4575b6e1dd3fc24f5f95"}'},
 {'tool_call_id': 'call_w724Il0i6dFCDLG4l4OmPY4e',
  'role': 'tool',
  'name': 'search_song',
  'content': '{"song": "Aaromale", "artist": "A.R. Rahman, Alphons Joseph", "album": "Vinnathaandi Varuvaayaa (Original Motion Picture Soundtrack)", "album_cover_url": "https://i.scdn.co/image/ab67616d0000b27397838a7eeb5f477cfc6707a5", "preview_url": "https://p.scdn.co/mp3-preview/ed07e1b3e3fe14b55e29c10c5413dd9e04fbe1e5?cid=706a549bcf8a4575b6e1dd3fc24f5f95"}'}]</code></pre>
</div>
</div>
</section>
<section id="third-response-to-get-the-final-results-as-json-object" class="level3">
<h3 class="anchored" data-anchor-id="third-response-to-get-the-final-results-as-json-object">Third Response to get the final results as JSON Object</h3>
<div class="cell" data-execution_count="31">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1">third_response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb51-2">                model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span>,</span>
<span id="cb51-3">                messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>messages,</span>
<span id="cb51-4">                response_format<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"json_object"</span>}</span>
<span id="cb51-5">            )</span></code></pre></div>
</div>
<div class="cell" data-execution_count="32">
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb52-1">third_response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message.content</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="32">
<pre><code>'\n{\n    "song_suggestions": [\n        {\n            "song": "Mazhai Kuruvi",\n            "artist": "A.R. Rahman",\n            "album": "Chekka Chivantha Vaanam (Original Motion Picture Soundtrack)",\n            "album_cover_url": "https://i.scdn.co/image/ab67616d0000b2735234d8419de0ffdccc8c27a7",\n            "preview_url": "https://p.scdn.co/mp3-preview/771e747c73fc6cd5914a4e447f9daf3bd74e38a5?cid=706a549bcf8a4575b6e1dd3fc24f5f95",\n            "reason": "This song has a soothing melody that resonates well with a cloudy and peaceful atmosphere."\n        },\n        {\n            "song": "Nenjukulle",\n            "artist": "A.R. Rahman, Shakthisree Gopalan",\n            "album": "Kadal (Original Motion Picture Soundtrack)",\n            "album_cover_url": "https://i.scdn.co/image/ab67616d0000b273d3d692e38621d741606588e7",\n            "preview_url": "https://p.scdn.co/mp3-preview/d48678e7eef2bebd5a099d2b6b1ff5dd299ff102?cid=706a549bcf8a4575b6e1dd3fc24f5f95",\n            "reason": "The backdrop of the ocean in the lyrics, combined with the cloudy weather theme, provides a tranquil listening experience."\n        },\n        {\n            "song": "Uyire Uyire",\n            "artist": "Hariharan, Bombay Jayashri",\n            "album": "Bombay (Original Motion Picture Soundtrack)",\n            "album_cover_url": "https://i.scdn.co/image/ab67616d0000b2738b895bdb8ccefee6ab65114b",\n            "preview_url": "https://p.scdn.co/mp3-preview/c4e812236497ce1f72610be2af10740ad6ecead6?cid=706a549bcf8a4575b6e1dd3fc24f5f95",\n            "reason": "Its lyrical depth and the warmth of the composition blend nicely with the introspective mood of a cloudy day."\n        },\n        {\n            "song": "Vaseegara",\n            "artist": "Bombay Jayashri",\n            "album": "Minnalae (Original Motion Picture Soundtrack)",\n            "album_cover_url": "https://i.scdn.co/image/ab67616d0000b273102f02fa7e7ded2bc5f65653",\n            "preview_url": "https://p.scdn.co/mp3-preview/2db5c05f48a7214b56c8eed843103ae3f241e00e?cid=706a549bcf8a4575b6e1dd3fc24f5f95",\n            "reason": "This classic love ballad with its serene mood is perfect for a cloudy day lounging."\n        },\n        {\n            "song": "Aaromale",\n            "artist": "Alphons Joseph",\n            "album": "Vinnaithaandi Varuvaayaa (Original Motion Picture Soundtrack)",\n            "album_cover_url": "https://i.scdn.co/image/ab67616d0000b27397838a7eeb5f477cfc6707a5",\n            "preview_url": "https://p.scdn.co/mp3-preview/ed07e1b3e3fe14b55e29c10c5413dd9e04fbe1e5?cid=706a549bcf8a4575b6e1dd3fc24f5f95",\n            "reason": "A refreshing song that\'s well-suited for when the clouds are out and you crave an uplifting atmosphere."\n        }\n    ]\n}'</code></pre>
</div>
</div>
<div class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb54-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># display song details</span></span>
<span id="cb54-2">song_details_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(third_response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message.content)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="34">
<div class="sourceCode cell-code" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb55-1">song_details_json</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="34">
<pre><code>{'song_suggestions': [{'song': 'Mazhai Kuruvi',
   'artist': 'A.R. Rahman',
   'album': 'Chekka Chivantha Vaanam (Original Motion Picture Soundtrack)',
   'album_cover_url': 'https://i.scdn.co/image/ab67616d0000b2735234d8419de0ffdccc8c27a7',
   'preview_url': 'https://p.scdn.co/mp3-preview/771e747c73fc6cd5914a4e447f9daf3bd74e38a5?cid=706a549bcf8a4575b6e1dd3fc24f5f95',
   'reason': 'This song has a soothing melody that resonates well with a cloudy and peaceful atmosphere.'},
  {'song': 'Nenjukulle',
   'artist': 'A.R. Rahman, Shakthisree Gopalan',
   'album': 'Kadal (Original Motion Picture Soundtrack)',
   'album_cover_url': 'https://i.scdn.co/image/ab67616d0000b273d3d692e38621d741606588e7',
   'preview_url': 'https://p.scdn.co/mp3-preview/d48678e7eef2bebd5a099d2b6b1ff5dd299ff102?cid=706a549bcf8a4575b6e1dd3fc24f5f95',
   'reason': 'The backdrop of the ocean in the lyrics, combined with the cloudy weather theme, provides a tranquil listening experience.'},
  {'song': 'Uyire Uyire',
   'artist': 'Hariharan, Bombay Jayashri',
   'album': 'Bombay (Original Motion Picture Soundtrack)',
   'album_cover_url': 'https://i.scdn.co/image/ab67616d0000b2738b895bdb8ccefee6ab65114b',
   'preview_url': 'https://p.scdn.co/mp3-preview/c4e812236497ce1f72610be2af10740ad6ecead6?cid=706a549bcf8a4575b6e1dd3fc24f5f95',
   'reason': 'Its lyrical depth and the warmth of the composition blend nicely with the introspective mood of a cloudy day.'},
  {'song': 'Vaseegara',
   'artist': 'Bombay Jayashri',
   'album': 'Minnalae (Original Motion Picture Soundtrack)',
   'album_cover_url': 'https://i.scdn.co/image/ab67616d0000b273102f02fa7e7ded2bc5f65653',
   'preview_url': 'https://p.scdn.co/mp3-preview/2db5c05f48a7214b56c8eed843103ae3f241e00e?cid=706a549bcf8a4575b6e1dd3fc24f5f95',
   'reason': 'This classic love ballad with its serene mood is perfect for a cloudy day lounging.'},
  {'song': 'Aaromale',
   'artist': 'Alphons Joseph',
   'album': 'Vinnaithaandi Varuvaayaa (Original Motion Picture Soundtrack)',
   'album_cover_url': 'https://i.scdn.co/image/ab67616d0000b27397838a7eeb5f477cfc6707a5',
   'preview_url': 'https://p.scdn.co/mp3-preview/ed07e1b3e3fe14b55e29c10c5413dd9e04fbe1e5?cid=706a549bcf8a4575b6e1dd3fc24f5f95',
   'reason': "A refreshing song that's well-suited for when the clouds are out and you crave an uplifting atmosphere."}]}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="35">
<div class="sourceCode cell-code" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(song_details_json)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="35">
<pre><code>dict</code></pre>
</div>
</div>
</section>
</section>
<section id="display-model-outputs" class="level1">
<h1>Display Model Outputs</h1>
<div class="cell" data-execution_count="36">
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Displaying each song suggestion with its details</span></span>
<span id="cb59-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> song <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> song_details_json[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"song_suggestions"</span>]:</span>
<span id="cb59-3">    display(Markdown(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"### </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>song[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'song'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>))</span>
<span id="cb59-4">    display(Markdown(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"**Artist:** </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>song[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'artist'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>))</span>
<span id="cb59-5">    display(Markdown(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"**Album:** </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>song[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'album'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>))</span>
<span id="cb59-6">    display(Image(url<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>song[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'album_cover_url'</span>], width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>))</span>
<span id="cb59-7">    display(Markdown(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"[Preview the song](</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>song[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'preview_url'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>))</span>
<span id="cb59-8">    display(Markdown(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"**Reason:** </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>song[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reason'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>))</span>
<span id="cb59-9">    display(Markdown(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"----"</span>))</span></code></pre></div>
<section id="mazhai-kuruvi" class="level3 cell-output cell-output-display">
<h3 class="anchored" data-anchor-id="mazhai-kuruvi">Mazhai Kuruvi</h3>
</section>
<div class="cell-output cell-output-display">
<p><strong>Artist:</strong> A.R. Rahman</p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Album:</strong> Chekka Chivantha Vaanam (Original Motion Picture Soundtrack)</p>
</div>
<div class="cell-output cell-output-display">
<img src="https://arunprakash.ai/posts/openai-parallel-function-calling-handson-tools/https:/i.scdn.co/image/ab67616d0000b2735234d8419de0ffdccc8c27a7" width="200">
</div>
<div class="cell-output cell-output-display">
<p><a href="https://p.scdn.co/mp3-preview/771e747c73fc6cd5914a4e447f9daf3bd74e38a5?cid=706a549bcf8a4575b6e1dd3fc24f5f95">Preview the song</a></p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Reason:</strong> This song has a soothing melody that resonates well with a cloudy and peaceful atmosphere.</p>
</div>
<div class="cell-output cell-output-display">
<hr>
</div>
<section id="nenjukulle" class="level3 cell-output cell-output-display">
<h3 class="anchored" data-anchor-id="nenjukulle">Nenjukulle</h3>
</section>
<div class="cell-output cell-output-display">
<p><strong>Artist:</strong> A.R. Rahman, Shakthisree Gopalan</p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Album:</strong> Kadal (Original Motion Picture Soundtrack)</p>
</div>
<div class="cell-output cell-output-display">
<img src="https://arunprakash.ai/posts/openai-parallel-function-calling-handson-tools/https:/i.scdn.co/image/ab67616d0000b273d3d692e38621d741606588e7" width="200">
</div>
<div class="cell-output cell-output-display">
<p><a href="https://p.scdn.co/mp3-preview/d48678e7eef2bebd5a099d2b6b1ff5dd299ff102?cid=706a549bcf8a4575b6e1dd3fc24f5f95">Preview the song</a></p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Reason:</strong> The backdrop of the ocean in the lyrics, combined with the cloudy weather theme, provides a tranquil listening experience.</p>
</div>
<div class="cell-output cell-output-display">
<hr>
</div>
<section id="uyire-uyire" class="level3 cell-output cell-output-display">
<h3 class="anchored" data-anchor-id="uyire-uyire">Uyire Uyire</h3>
</section>
<div class="cell-output cell-output-display">
<p><strong>Artist:</strong> Hariharan, Bombay Jayashri</p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Album:</strong> Bombay (Original Motion Picture Soundtrack)</p>
</div>
<div class="cell-output cell-output-display">
<img src="https://arunprakash.ai/posts/openai-parallel-function-calling-handson-tools/https:/i.scdn.co/image/ab67616d0000b2738b895bdb8ccefee6ab65114b" width="200">
</div>
<div class="cell-output cell-output-display">
<p><a href="https://p.scdn.co/mp3-preview/c4e812236497ce1f72610be2af10740ad6ecead6?cid=706a549bcf8a4575b6e1dd3fc24f5f95">Preview the song</a></p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Reason:</strong> Its lyrical depth and the warmth of the composition blend nicely with the introspective mood of a cloudy day.</p>
</div>
<div class="cell-output cell-output-display">
<hr>
</div>
<section id="vaseegara" class="level3 cell-output cell-output-display">
<h3 class="anchored" data-anchor-id="vaseegara">Vaseegara</h3>
</section>
<div class="cell-output cell-output-display">
<p><strong>Artist:</strong> Bombay Jayashri</p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Album:</strong> Minnalae (Original Motion Picture Soundtrack)</p>
</div>
<div class="cell-output cell-output-display">
<img src="https://arunprakash.ai/posts/openai-parallel-function-calling-handson-tools/https:/i.scdn.co/image/ab67616d0000b273102f02fa7e7ded2bc5f65653" width="200">
</div>
<div class="cell-output cell-output-display">
<p><a href="https://p.scdn.co/mp3-preview/2db5c05f48a7214b56c8eed843103ae3f241e00e?cid=706a549bcf8a4575b6e1dd3fc24f5f95">Preview the song</a></p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Reason:</strong> This classic love ballad with its serene mood is perfect for a cloudy day lounging.</p>
</div>
<div class="cell-output cell-output-display">
<hr>
</div>
<section id="aaromale" class="level3 cell-output cell-output-display">
<h3 class="anchored" data-anchor-id="aaromale">Aaromale</h3>
</section>
<div class="cell-output cell-output-display">
<p><strong>Artist:</strong> Alphons Joseph</p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Album:</strong> Vinnaithaandi Varuvaayaa (Original Motion Picture Soundtrack)</p>
</div>
<div class="cell-output cell-output-display">
<img src="https://arunprakash.ai/posts/openai-parallel-function-calling-handson-tools/https:/i.scdn.co/image/ab67616d0000b27397838a7eeb5f477cfc6707a5" width="200">
</div>
<div class="cell-output cell-output-display">
<p><a href="https://p.scdn.co/mp3-preview/ed07e1b3e3fe14b55e29c10c5413dd9e04fbe1e5?cid=706a549bcf8a4575b6e1dd3fc24f5f95">Preview the song</a></p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Reason:</strong> A refreshing song that’s well-suited for when the clouds are out and you crave an uplifting atmosphere.</p>
</div>
<div class="cell-output cell-output-display">
<hr>
</div>
</div>
</section>
<section id="putting-it-all-together" class="level1">
<h1>Putting it all together</h1>
<div class="cell" data-execution_count="37">
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb60-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> generate_weather_music(city):</span>
<span id="cb60-2">    messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb60-3">        {</span>
<span id="cb60-4">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>,</span>
<span id="cb60-5">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A Song Suggestions Assistant based on local weather in metric and local language"</span></span>
<span id="cb60-6">        },</span>
<span id="cb60-7">        {</span>
<span id="cb60-8">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>,</span>
<span id="cb60-9">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"""I am in </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>city<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, suggest 5 songs based on their current weather and their local language</span></span>
<span id="cb60-10"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">            and display their album details such as album cover, artist, and preview link.</span></span>
<span id="cb60-11"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">            return a json object with keys as song, artist, album, album_cover_url, and preview_url and reason</span></span>
<span id="cb60-12"></span>
<span id="cb60-13"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">            key as song_suggestions and value as a list of json objects with keys as song, artist, album, album_cover_url, preview_url, and reason</span></span>
<span id="cb60-14"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">            """</span></span>
<span id="cb60-15">        }</span>
<span id="cb60-16">    ]</span>
<span id="cb60-17">    tools <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> available_tools</span>
<span id="cb60-18">    response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb60-19">        model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span>,</span>
<span id="cb60-20">        messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>messages,</span>
<span id="cb60-21">        tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tools,</span>
<span id="cb60-22">        tool_choice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>,</span>
<span id="cb60-23">        temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span></span>
<span id="cb60-24">    )</span>
<span id="cb60-25">    response_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message</span>
<span id="cb60-26">    tool_calls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response_message.tool_calls</span>
<span id="cb60-27"></span>
<span id="cb60-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> tool_calls:</span>
<span id="cb60-29">        function_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tool_calls[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].function.name</span>
<span id="cb60-30">        function_args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(tool_calls[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].function.arguments)</span>
<span id="cb60-31">        function_response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> available_functions[function_name](<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>function_args)</span>
<span id="cb60-32"></span>
<span id="cb60-33">        messages.append(response_message)</span>
<span id="cb60-34">        messages.append(</span>
<span id="cb60-35">            {</span>
<span id="cb60-36">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: tool_calls[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb60-37">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool"</span>,</span>
<span id="cb60-38">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: function_name,</span>
<span id="cb60-39">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: function_response,</span>
<span id="cb60-40">            }</span>
<span id="cb60-41">        )</span>
<span id="cb60-42"></span>
<span id="cb60-43">        second_response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb60-44">            model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span>,</span>
<span id="cb60-45">            messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>messages,</span>
<span id="cb60-46">            tools<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>available_tools,</span>
<span id="cb60-47">            tool_choice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>,</span>
<span id="cb60-48">        )</span>
<span id="cb60-49"></span>
<span id="cb60-50">        response_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> second_response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message</span>
<span id="cb60-51">        tool_calls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response_message.tool_calls</span>
<span id="cb60-52"></span>
<span id="cb60-53">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> tool_calls:</span>
<span id="cb60-54">            messages.append(response_message)</span>
<span id="cb60-55">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> tool <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tool_calls:</span>
<span id="cb60-56">                function_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tool.function.name</span>
<span id="cb60-57">                function_args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(tool.function.arguments)</span>
<span id="cb60-58">                function_response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> available_functions[function_name](<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>function_args)</span>
<span id="cb60-59"></span>
<span id="cb60-60">                messages.append(</span>
<span id="cb60-61">                    {</span>
<span id="cb60-62">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool_call_id"</span>: tool.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>,</span>
<span id="cb60-63">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tool"</span>,</span>
<span id="cb60-64">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"name"</span>: function_name,</span>
<span id="cb60-65">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: function_response,</span>
<span id="cb60-66">                    }</span>
<span id="cb60-67">                )</span>
<span id="cb60-68"></span>
<span id="cb60-69">            third_response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb60-70">                model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-4-1106-preview"</span>,</span>
<span id="cb60-71">                messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>messages,</span>
<span id="cb60-72">                response_format<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"json_object"</span>}</span>
<span id="cb60-73">            )</span>
<span id="cb60-74"></span>
<span id="cb60-75">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> third_response</span></code></pre></div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/openai-parallel-function-calling-handson-tools/function_calling_files/figure-html/d4f93f74-1-image.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image.png</figcaption>
</figure>
</div>
<div class="cell" data-execution_count="38">
<div class="sourceCode cell-code" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb61-1">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_weather_music(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sydney"</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="39">
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb62-1">song_suggestions_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> result.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message.content</span></code></pre></div>
</div>
<div class="cell" data-execution_count="40">
<div class="sourceCode cell-code" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb63-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(song_suggestions_json)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="40">
<pre><code>str</code></pre>
</div>
</div>
<div class="cell" data-execution_count="41">
<div class="sourceCode cell-code" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb65-1">song_suggestions_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(song_suggestions_json)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="42">
<div class="sourceCode cell-code" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb66-1">song_suggestions_json </span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="42">
<pre><code>{'song_suggestions': [{'song': 'Over the Rainbow',
   'artist': "Israel Kamakawiwo'ole",
   'album': 'Alone In Iz World',
   'album_cover_url': 'https://i.scdn.co/image/ab67616d0000b27356c868c8c85e7e4e62bd9ec1',
   'preview_url': 'https://p.scdn.co/mp3-preview/2b0ebc854ece09122c1918aeff6af258493defe9?cid=706a549bcf8a4575b6e1dd3fc24f5f95',
   'reason': "This classic song's soothing ukulele and gentle vocals perfectly match the peacefulness of an overcast day."},
  {'song': 'Sweater Weather',
   'artist': 'The Neighbourhood',
   'album': 'I Love You.',
   'album_cover_url': 'https://i.scdn.co/image/ab67616d0000b2738265a736a1eb838ad5a0b921',
   'preview_url': 'https://p.scdn.co/mp3-preview/877602f424a9dea277b13301ffc516f9fd1fbe7e?cid=706a549bcf8a4575b6e1dd3fc24f5f95',
   'reason': "The title itself and the song's vibe are a nod to the cozy feel of the current Sydney weather."},
  {'song': 'Set Fire to the Rain',
   'artist': 'Adele',
   'album': '21',
   'album_cover_url': 'https://i.scdn.co/image/ab67616d0000b2732118bf9b198b05a95ded6300',
   'preview_url': 'https://p.scdn.co/mp3-preview/6fc68c105e091645376471727960d2ba3cd0ee01?cid=706a549bcf8a4575b6e1dd3fc24f5f95',
   'reason': "Though it's not raining, the cloudy skies can bring about the feeling captured by this powerful yet soulful song."},
  {'song': 'Cloudy Day',
   'artist': 'Tones And I',
   'album': 'Cloudy Day',
   'album_cover_url': 'https://i.scdn.co/image/ab67616d0000b273d2cf6639f08099bdb14e388d',
   'preview_url': 'https://p.scdn.co/mp3-preview/9c49fc0dfef73b4f91d444309b06450c9e30fee5?cid=706a549bcf8a4575b6e1dd3fc24f5f95',
   'reason': 'This song has a fitting title and an uplifting tone that can bring positivity to a cloudy day.'},
  {'song': 'Cloudbusting',
   'artist': 'Kate Bush',
   'album': 'Hounds Of Love',
   'album_cover_url': 'https://i.scdn.co/image/ab67616d0000b273ad08f4b38efbff0c0da0f252',
   'preview_url': 'https://p.scdn.co/mp3-preview/0156aec767cfcbe6bfc80bb9c8ad931169a3d910?cid=706a549bcf8a4575b6e1dd3fc24f5f95',
   'reason': 'An evocative track that seamlessly aligns with the overcast weather in Sydney, capturing the theme of moving through introspective moments.'}]}</code></pre>
</div>
</div>
<div class="cell" data-execution_count="43">
<div class="sourceCode cell-code" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb68-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> song <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> song_suggestions_json[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"song_suggestions"</span>]:</span>
<span id="cb68-2">    display(Markdown(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"### </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>song[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'song'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>))</span>
<span id="cb68-3">    display(Markdown(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"**Artist:** </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>song[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'artist'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>))</span>
<span id="cb68-4">    display(Markdown(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"**Album:** </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>song[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'album'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>))</span>
<span id="cb68-5">    display(Image(url<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>song[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'album_cover_url'</span>], width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>))</span>
<span id="cb68-6">    display(Markdown(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"[Preview the song](</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>song[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'preview_url'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>))</span>
<span id="cb68-7">    display(Markdown(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"**Reason:** </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>song[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reason'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>))</span>
<span id="cb68-8">    display(Markdown(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"----"</span>))</span></code></pre></div>
<section id="over-the-rainbow" class="level3 cell-output cell-output-display">
<h3 class="anchored" data-anchor-id="over-the-rainbow">Over the Rainbow</h3>
</section>
<div class="cell-output cell-output-display">
<p><strong>Artist:</strong> Israel Kamakawiwo’ole</p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Album:</strong> Alone In Iz World</p>
</div>
<div class="cell-output cell-output-display">
<img src="https://arunprakash.ai/posts/openai-parallel-function-calling-handson-tools/https:/i.scdn.co/image/ab67616d0000b27356c868c8c85e7e4e62bd9ec1" width="200">
</div>
<div class="cell-output cell-output-display">
<p><a href="https://p.scdn.co/mp3-preview/2b0ebc854ece09122c1918aeff6af258493defe9?cid=706a549bcf8a4575b6e1dd3fc24f5f95">Preview the song</a></p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Reason:</strong> This classic song’s soothing ukulele and gentle vocals perfectly match the peacefulness of an overcast day.</p>
</div>
<div class="cell-output cell-output-display">
<hr>
</div>
<section id="sweater-weather" class="level3 cell-output cell-output-display">
<h3 class="anchored" data-anchor-id="sweater-weather">Sweater Weather</h3>
</section>
<div class="cell-output cell-output-display">
<p><strong>Artist:</strong> The Neighbourhood</p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Album:</strong> I Love You.</p>
</div>
<div class="cell-output cell-output-display">
<img src="https://arunprakash.ai/posts/openai-parallel-function-calling-handson-tools/https:/i.scdn.co/image/ab67616d0000b2738265a736a1eb838ad5a0b921" width="200">
</div>
<div class="cell-output cell-output-display">
<p><a href="https://p.scdn.co/mp3-preview/877602f424a9dea277b13301ffc516f9fd1fbe7e?cid=706a549bcf8a4575b6e1dd3fc24f5f95">Preview the song</a></p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Reason:</strong> The title itself and the song’s vibe are a nod to the cozy feel of the current Sydney weather.</p>
</div>
<div class="cell-output cell-output-display">
<hr>
</div>
<section id="set-fire-to-the-rain" class="level3 cell-output cell-output-display">
<h3 class="anchored" data-anchor-id="set-fire-to-the-rain">Set Fire to the Rain</h3>
</section>
<div class="cell-output cell-output-display">
<p><strong>Artist:</strong> Adele</p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Album:</strong> 21</p>
</div>
<div class="cell-output cell-output-display">
<img src="https://arunprakash.ai/posts/openai-parallel-function-calling-handson-tools/https:/i.scdn.co/image/ab67616d0000b2732118bf9b198b05a95ded6300" width="200">
</div>
<div class="cell-output cell-output-display">
<p><a href="https://p.scdn.co/mp3-preview/6fc68c105e091645376471727960d2ba3cd0ee01?cid=706a549bcf8a4575b6e1dd3fc24f5f95">Preview the song</a></p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Reason:</strong> Though it’s not raining, the cloudy skies can bring about the feeling captured by this powerful yet soulful song.</p>
</div>
<div class="cell-output cell-output-display">
<hr>
</div>
<section id="cloudy-day" class="level3 cell-output cell-output-display">
<h3 class="anchored" data-anchor-id="cloudy-day">Cloudy Day</h3>
</section>
<div class="cell-output cell-output-display">
<p><strong>Artist:</strong> Tones And I</p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Album:</strong> Cloudy Day</p>
</div>
<div class="cell-output cell-output-display">
<img src="https://arunprakash.ai/posts/openai-parallel-function-calling-handson-tools/https:/i.scdn.co/image/ab67616d0000b273d2cf6639f08099bdb14e388d" width="200">
</div>
<div class="cell-output cell-output-display">
<p><a href="https://p.scdn.co/mp3-preview/9c49fc0dfef73b4f91d444309b06450c9e30fee5?cid=706a549bcf8a4575b6e1dd3fc24f5f95">Preview the song</a></p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Reason:</strong> This song has a fitting title and an uplifting tone that can bring positivity to a cloudy day.</p>
</div>
<div class="cell-output cell-output-display">
<hr>
</div>
<section id="cloudbusting" class="level3 cell-output cell-output-display">
<h3 class="anchored" data-anchor-id="cloudbusting">Cloudbusting</h3>
</section>
<div class="cell-output cell-output-display">
<p><strong>Artist:</strong> Kate Bush</p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Album:</strong> Hounds Of Love</p>
</div>
<div class="cell-output cell-output-display">
<img src="https://arunprakash.ai/posts/openai-parallel-function-calling-handson-tools/https:/i.scdn.co/image/ab67616d0000b273ad08f4b38efbff0c0da0f252" width="200">
</div>
<div class="cell-output cell-output-display">
<p><a href="https://p.scdn.co/mp3-preview/0156aec767cfcbe6bfc80bb9c8ad931169a3d910?cid=706a549bcf8a4575b6e1dd3fc24f5f95">Preview the song</a></p>
</div>
<div class="cell-output cell-output-display">
<p><strong>Reason:</strong> An evocative track that seamlessly aligns with the overcast weather in Sydney, capturing the theme of moving through introspective moments.</p>
</div>
<div class="cell-output cell-output-display">
<hr>
</div>
</div>



</section>

<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>llm</category>
  <category>openai</category>
  <category>function_calling</category>
  <guid>https://arunprakash.ai/posts/openai-parallel-function-calling-handson-tools/function_calling.html</guid>
  <pubDate>Tue, 02 Jan 2024 14:00:00 GMT</pubDate>
  <media:content url="https://arunprakash.ai/posts/openai-parallel-function-calling-handson-tools/music.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Understanding OpenAI ChatCompletion Model Parameters</title>
  <dc:creator>Arun Prakash</dc:creator>
  <link>https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature.html</link>
  <description><![CDATA[ 




<p>In this notebook, we will go through different parameters in LLM that control the token generation process</p>
<ul>
<li>temperature</li>
<li>top_p</li>
<li>frequency_penalty</li>
<li>presence_penalty</li>
</ul>
<p>In each parameter, we will explore different range of values and discuss about openai’s default values and recommendations. Then in the final section we will go through <strong>some real examples</strong> to understand how these parameters affect the token generation process.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature_files/figure-html/19bcc853-1-IMG_F4CC52CE7F7F-1.jpeg" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption class="figure-caption">IMG_F4CC52CE7F7F-1.jpeg</figcaption>
</figure>
</div>
<p>I have written two helper functions <code>highlight_openai_response</code> and <code>highlight</code> for highlighting the probabilities of the tokens generated by the model. Less probable tokens are highlighted in white and more probable tokens are highlighted in green.</p>
<div class="cell" data-execution_count="52">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1">question <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">What is machine learning? Explain it to a five year old.</span></span>
<span id="cb1-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Answer within 100 words, 3 paragraphs</span></span>
<span id="cb1-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-6"></span>
<span id="cb1-7">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt-3.5-turbo"</span></span>
<span id="cb1-8"></span>
<span id="cb1-9"></span></code></pre></div>
</div>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> HTML</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.colors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mcolors</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-5"></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> highlight_openai_response(response):</span>
<span id="cb2-8">    messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message.content</span>
<span id="cb2-9">    probabilities <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-10"></span>
<span id="cb2-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> res <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].logprobs.content:</span>
<span id="cb2-12">        probabilities.append(np.exp(res.logprob))</span>
<span id="cb2-13"></span>
<span id="cb2-14">    highlight(messages, probabilities)</span>
<span id="cb2-15"></span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> highlight(text, probabilities):</span>
<span id="cb2-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split the text into words, preserving newlines and spaces</span></span>
<span id="cb2-19">    words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> text.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>):</span>
<span id="cb2-21">        words.extend([(word, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> word <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> line.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)])</span>
<span id="cb2-22"></span>
<span id="cb2-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the last element if it is a newline, added due to the split</span></span>
<span id="cb2-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> words[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>:</span>
<span id="cb2-25">        words.pop()</span>
<span id="cb2-26"></span>
<span id="cb2-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure probabilities list matches the number of non-empty words</span></span>
<span id="cb2-28">    normalized_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, p), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> probabilities]</span>
<span id="cb2-29"></span>
<span id="cb2-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use a Seaborn color palette and map probabilities to colors</span></span>
<span id="cb2-31">    palette <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sns.light_palette(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>, as_cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb2-32"></span>
<span id="cb2-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start building the HTML string using the 'pre' tag to preserve whitespace</span></span>
<span id="cb2-34">    html_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;pre style='font-family: inherit; white-space: pre-wrap; word-break: break-all;'&gt;"</span></span>
<span id="cb2-35"></span>
<span id="cb2-36"></span>
<span id="cb2-37">    prob_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Index for the current probability</span></span>
<span id="cb2-38"></span>
<span id="cb2-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> word, space <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> words:</span>
<span id="cb2-40">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> word <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> word <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If the element is not a space or newline</span></span>
<span id="cb2-41">            rgba_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> palette(normalized_probs[prob_index])</span>
<span id="cb2-42">            hex_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mcolors.to_hex(rgba_color)</span>
<span id="cb2-43">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the text color to black and the background color to the word's color</span></span>
<span id="cb2-44">            html_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"&lt;span style='background-color: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>hex_color<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">; color: black;'&gt;</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>word<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/span&gt;"</span></span>
<span id="cb2-45">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> space:</span>
<span id="cb2-46">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the space's background color to the word's color</span></span>
<span id="cb2-47">                html_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"&lt;span style='background-color: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>hex_color<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">; color: black;'&gt;</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>space<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;/span&gt;"</span></span>
<span id="cb2-48">            prob_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-49">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> word <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>:</span>
<span id="cb2-50">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a newline in HTML, and reset the color for the next line</span></span>
<span id="cb2-51">            html_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;br&gt;"</span></span>
<span id="cb2-52">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb2-53">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This case handles multiple spaces in a row</span></span>
<span id="cb2-54">            previous_hex_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mcolors.to_hex(</span>
<span id="cb2-55">                palette(normalized_probs[prob_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb2-56">            )</span>
<span id="cb2-57">            html_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> (</span>
<span id="cb2-58">                <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"&lt;span style='background-color: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>previous_hex_color<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">;'&gt; &lt;/span&gt;"</span></span>
<span id="cb2-59">            )</span>
<span id="cb2-60"></span>
<span id="cb2-61">    html_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;/pre&gt;"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Close the 'pre' tag</span></span>
<span id="cb2-62"></span>
<span id="cb2-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the HTML string</span></span>
<span id="cb2-64">    display(HTML(html_string))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">highlight(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello I am Arun"</span>, [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>])</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="font-family: inherit; white-space: pre-wrap; word-break: break-all;"><span style="background-color: #178b17; color: black;">Hello</span><span style="background-color: #178b17; color: black;"> </span><span style="background-color: #2f972f; color: black;">I</span><span style="background-color: #2f972f; color: black;"> </span><span style="background-color: #5eae5e; color: black;">am</span><span style="background-color: #5eae5e; color: black;"> </span><span style="background-color: #8dc58d; color: black;">Arun</span><span style="background-color: #8dc58d; color: black;"> </span></pre>
</div>
</div>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb4-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dotenv <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_dotenv</span>
<span id="cb4-3">load_dotenv()</span>
<span id="cb4-4">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OPENAI_API_KEY"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.getenv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OPENAI_API_KEY"</span>)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> openai <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> OpenAI, __version__</span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"OpenAI version: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>__version__<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb5-3">client <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OpenAI()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>OpenAI version: 1.5.0</code></pre>
</div>
</div>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span></span></code></pre></div>
</div>
<section id="tokens" class="level1">
<h1>Tokens</h1>
<p>In large language models (LLMs), tokens are the smallest units of text that the model processes and generates. They can represent individual characters, words, subwords, or even larger linguistic units, depending on the specific tokenization approach used. Tokens act as a bridge between the raw text data and the numerical representations that LLMs can work with.</p>
<p>In the context of OpenAI, tokens are the basic units of text processed by their language models, such as GPT-3. OpenAI employs Byte-Pair Encoding (BPE) for tokenization, which is a method initially designed for text compression. BPE identifies the most frequent pairs of characters or tokens and merges them to form new tokens, thus optimizing the tokenization process for efficiency and effectiveness in representing the text data. This approach allows the model to handle a wide range of vocabulary, including rare words or phrases, by breaking them down into subword units.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature_files/figure-html/c89b30da-1-image.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image.png</figcaption>
</figure>
</div>
<p>source https://platform.openai.com/tokenizer</p>
<p>In openai chat completion APIs, four parameter controls the token generation process. They are</p>
<ul>
<li>temperature</li>
<li>top_p</li>
<li>frequency_penalty</li>
<li>presence_penalty</li>
</ul>
</section>
<section id="temperature" class="level1">
<h1>Temperature</h1>
<p>In large language models, temperature is a parameter that controls the randomness of predictions by scaling the logits before applying the softmax function. A low temperature makes the model more confident and conservative, favoring more likely predictions, while a high temperature increases diversity and creativity, allowing for less probable outcomes.</p>
<p>Temperature adjusts the probability distribution of the next word. A higher temperature increases randomness, while a lower one makes the model more deterministic.</p>
<p>Purpose: It controls the level of unpredictability in the output.</p>
<p>The temperature adjustment equation in LaTeX format is as follows:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AP'(w_i)%20=%20%5Cfrac%7BP(w_i)%5E%7B%5Cfrac%7B1%7D%7BT%7D%7D%7D%7B%5Csum_%7Bj=1%7D%5E%7BV%7D%20P(w_j)%5E%7B%5Cfrac%7B1%7D%7BT%7D%7D%7D%0A"></p>
<p>Here, <img src="https://latex.codecogs.com/png.latex?P(w_i)"> is the original probability of the word <img src="https://latex.codecogs.com/png.latex?w_i">, <img src="https://latex.codecogs.com/png.latex?T"> is the temperature, <img src="https://latex.codecogs.com/png.latex?P'(w_i)"> is the adjusted probability of the word, and <img src="https://latex.codecogs.com/png.latex?V"> is the vocabulary size (the total number of words over which the probabilities are distributed). This equation shows how each original probability <img src="https://latex.codecogs.com/png.latex?P(w_i)"> is raised to the power of the reciprocal of the temperature, and then normalized by dividing by the sum of all such adjusted probabilities to ensure that the adjusted probabilities sum to 1.</p>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.9</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>0.368437494723581</code></pre>
</div>
</div>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>0.06652540281931184</code></pre>
</div>
</div>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb12-2"></span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Base probabilities for 20 words</span></span>
<span id="cb12-4">base_probabilities <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb12-5">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.19</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.12</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.10</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.09</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.08</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.07</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.06</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.04</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.03</span>,</span>
<span id="cb12-6">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.03</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.03</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb12-7">]</span>
<span id="cb12-8"></span>
<span id="cb12-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Temperatures</span></span>
<span id="cb12-10">high_temperature <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.9</span></span>
<span id="cb12-11">low_temperature <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span></span>
<span id="cb12-12"></span>
<span id="cb12-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjusted probabilities with high temperature</span></span>
<span id="cb12-14">adjusted_probabilities_high <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> high_temperature) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> base_probabilities]</span>
<span id="cb12-15"></span>
<span id="cb12-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjusted probabilities with low temperature</span></span>
<span id="cb12-17">adjusted_probabilities_low <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> low_temperature) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> base_probabilities]</span>
<span id="cb12-18"></span>
<span id="cb12-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Normalizing the adjusted probabilities for high temperature</span></span>
<span id="cb12-20">sum_adjusted_probabilities_high <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(adjusted_probabilities_high)</span>
<span id="cb12-21">normalized_probabilities_high <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> sum_adjusted_probabilities_high <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> adjusted_probabilities_high]</span>
<span id="cb12-22"></span>
<span id="cb12-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Normalizing the adjusted probabilities for low temperature</span></span>
<span id="cb12-24">sum_adjusted_probabilities_low <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(adjusted_probabilities_low)</span>
<span id="cb12-25">normalized_probabilities_low <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> sum_adjusted_probabilities_low <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> adjusted_probabilities_low]</span>
<span id="cb12-26"></span>
<span id="cb12-27">words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"word</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)]</span>
<span id="cb12-28"></span>
<span id="cb12-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a DataFrame with the words and their probabilities, adjusted for high and low temperatures</span></span>
<span id="cb12-30">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({</span>
<span id="cb12-31">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"word"</span>: words,</span>
<span id="cb12-32">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"base_probability"</span>: base_probabilities,</span>
<span id="cb12-33">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"adjusted_probability_high=1.9"</span>: adjusted_probabilities_high,</span>
<span id="cb12-34">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normalized_probabilities_high=1.9"</span>: normalized_probabilities_high,</span>
<span id="cb12-35">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"adjusted_probability_low=0.4"</span>: adjusted_probabilities_low,</span>
<span id="cb12-36">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normalized_probabilities_low=0.4"</span>: normalized_probabilities_low</span>
<span id="cb12-37">})</span>
<span id="cb12-38"></span>
<span id="cb12-39">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">word</th>
<th data-quarto-table-cell-role="th">base_probability</th>
<th data-quarto-table-cell-role="th">adjusted_probability_high=1.9</th>
<th data-quarto-table-cell-role="th">normalized_probabilities_high=1.9</th>
<th data-quarto-table-cell-role="th">adjusted_probability_low=0.4</th>
<th data-quarto-table-cell-role="th">normalized_probabilities_low=0.4</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>word0</td>
<td>0.19</td>
<td>0.417250</td>
<td>0.111183</td>
<td>0.015736</td>
<td>0.493728</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>word1</td>
<td>0.12</td>
<td>0.327611</td>
<td>0.087298</td>
<td>0.004988</td>
<td>0.156515</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>word2</td>
<td>0.10</td>
<td>0.297635</td>
<td>0.079310</td>
<td>0.003162</td>
<td>0.099221</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>word3</td>
<td>0.09</td>
<td>0.281580</td>
<td>0.075032</td>
<td>0.002430</td>
<td>0.076245</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>word4</td>
<td>0.08</td>
<td>0.264654</td>
<td>0.070522</td>
<td>0.001810</td>
<td>0.056797</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>word5</td>
<td>0.07</td>
<td>0.246693</td>
<td>0.065736</td>
<td>0.001296</td>
<td>0.040677</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>word6</td>
<td>0.06</td>
<td>0.227469</td>
<td>0.060613</td>
<td>0.000882</td>
<td>0.027668</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>word7</td>
<td>0.05</td>
<td>0.206656</td>
<td>0.055067</td>
<td>0.000559</td>
<td>0.017540</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>word8</td>
<td>0.04</td>
<td>0.183756</td>
<td>0.048965</td>
<td>0.000320</td>
<td>0.010040</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>word9</td>
<td>0.03</td>
<td>0.157937</td>
<td>0.042085</td>
<td>0.000156</td>
<td>0.004891</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>word10</td>
<td>0.03</td>
<td>0.157937</td>
<td>0.042085</td>
<td>0.000156</td>
<td>0.004891</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>word11</td>
<td>0.03</td>
<td>0.157937</td>
<td>0.042085</td>
<td>0.000156</td>
<td>0.004891</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">12</td>
<td>word12</td>
<td>0.02</td>
<td>0.127587</td>
<td>0.033998</td>
<td>0.000057</td>
<td>0.001775</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">13</td>
<td>word13</td>
<td>0.02</td>
<td>0.127587</td>
<td>0.033998</td>
<td>0.000057</td>
<td>0.001775</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">14</td>
<td>word14</td>
<td>0.02</td>
<td>0.127587</td>
<td>0.033998</td>
<td>0.000057</td>
<td>0.001775</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">15</td>
<td>word15</td>
<td>0.01</td>
<td>0.088587</td>
<td>0.023605</td>
<td>0.000010</td>
<td>0.000314</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">16</td>
<td>word16</td>
<td>0.01</td>
<td>0.088587</td>
<td>0.023605</td>
<td>0.000010</td>
<td>0.000314</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">17</td>
<td>word17</td>
<td>0.01</td>
<td>0.088587</td>
<td>0.023605</td>
<td>0.000010</td>
<td>0.000314</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">18</td>
<td>word18</td>
<td>0.01</td>
<td>0.088587</td>
<td>0.023605</td>
<td>0.000010</td>
<td>0.000314</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">19</td>
<td>word19</td>
<td>0.01</td>
<td>0.088587</td>
<td>0.023605</td>
<td>0.000010</td>
<td>0.000314</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"base_probability"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>1.0</code></pre>
</div>
</div>
<p>As we can see that the base probabilities decrease progressively from <code>word0</code> to <code>word19</code>, starting at 0.19 and going down to 0.01. However, after the adjustment, the probabilities are closer to each other, indicating that the temperature scaling has made the less likely words more probable and the more probable words less dominant.</p>
<p>For example, <code>word0</code> has its probability decreased from 0.19 to about 0.11, while <code>word19</code> has its probability slightly increased from 0.01 to about 0.024. This adjustment serves to flatten the probability distribution, making the model less certain and more explorative in its word choices.</p>
<p>The adjusted probabilities are also normalized, as their sum should equal 1 to represent a valid probability distribution. This adjustment allows for a less deterministic and more varied text generation, which can be useful for generating more diverse and creative text outputs.</p>
<p>The temperature adjustment has effectively reduced the likelihood of the most probable word being selected and increased the likelihood of less probable words, thus adding variability to the text generation process.</p>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot the probabilities</span></span>
<span id="cb15-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb15-3">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb15-4">plt.plot(words, base_probabilities, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Base Probabilities"</span>)</span>
<span id="cb15-5">plt.plot(words, normalized_probabilities_high, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"High Temperature"</span>)</span>
<span id="cb15-6">plt.plot(words, normalized_probabilities_low, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Low Temperature"</span>)</span>
<span id="cb15-7">plt.xticks(rotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb15-8">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Words"</span>)</span>
<span id="cb15-9">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Probability"</span>)</span>
<span id="cb15-10">plt.legend()</span>
<span id="cb15-11">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature_files/figure-html/cell-12-output-1.png" class="img-fluid"></p>
</div>
</div>
<section id="temperature-0-deterministic" class="level3">
<h3 class="anchored" data-anchor-id="temperature-0-deterministic">Temperature : 0( Deterministic)</h3>
<div class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"></span>
<span id="cb16-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb16-3">  model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb16-4">  messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb16-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a helpful assistant."</span>},</span>
<span id="cb16-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: question}</span>
<span id="cb16-7">  ],</span>
<span id="cb16-8">  logprobs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb16-9">  temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb16-10">  seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed</span>
<span id="cb16-11">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message.content)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Machine learning is like having a super smart robot friend that can learn things on its own. Just like how you learn new things by practicing and trying different things, machine learning is when a computer program learns from lots of examples and gets better at doing a task. For example, if you show the robot friend lots of pictures of cats and dogs, it can learn to tell the difference between them. It's like magic, but really it's just the computer using math and patterns to figure things out.</code></pre>
</div>
</div>
<div class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].logprobs.content[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># first 5 tokens</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>[ChatCompletionTokenLogprob(token='Machine', bytes=[77, 97, 99, 104, 105, 110, 101], logprob=-0.001537835, top_logprobs=[]),
 ChatCompletionTokenLogprob(token=' learning', bytes=[32, 108, 101, 97, 114, 110, 105, 110, 103], logprob=-0.00058532227, top_logprobs=[]),
 ChatCompletionTokenLogprob(token=' is', bytes=[32, 105, 115], logprob=-0.00044044392, top_logprobs=[]),
 ChatCompletionTokenLogprob(token=' like', bytes=[32, 108, 105, 107, 101], logprob=-0.31134152, top_logprobs=[]),
 ChatCompletionTokenLogprob(token=' having', bytes=[32, 104, 97, 118, 105, 110, 103], logprob=-1.0659788, top_logprobs=[])]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span></code></pre></div>
</div>
<div class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb22-2"></span>
<span id="cb22-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> res <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].logprobs.content:</span>
<span id="cb22-4">    probs.append(np.exp(res.logprob))</span></code></pre></div>
</div>
<div class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">plt.hist(probs)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-2">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Probability"</span>)</span>
<span id="cb23-3">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>)</span>
<span id="cb23-4">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature_files/figure-html/cell-18-output-1.png" class="img-fluid"></p>
</div>
</div>
<div class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">response.system_fingerprint</span></code></pre></div>
</div>
<div class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">highlight_openai_response(response)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="font-family: inherit; white-space: pre-wrap; word-break: break-all;"><span style="background-color: #008000; color: black;">Machine</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">learning</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">is</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #3f9f3f; color: black;">like</span><span style="background-color: #3f9f3f; color: black;"> </span><span style="background-color: #9acb9a; color: black;">having</span><span style="background-color: #9acb9a; color: black;"> </span><span style="background-color: #008000; color: black;">a</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #8fc68f; color: black;">super</span><span style="background-color: #8fc68f; color: black;"> </span><span style="background-color: #108810; color: black;">smart</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #63b163; color: black;">robot</span><span style="background-color: #63b163; color: black;"> </span><span style="background-color: #1e8f1e; color: black;">friend</span><span style="background-color: #1e8f1e; color: black;"> </span><span style="background-color: #72b872; color: black;">that</span><span style="background-color: #72b872; color: black;"> </span><span style="background-color: #2a952a; color: black;">can</span><span style="background-color: #2a952a; color: black;"> </span><span style="background-color: #018001; color: black;">learn</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #61af61; color: black;">things</span><span style="background-color: #61af61; color: black;"> </span><span style="background-color: #65b265; color: black;">on</span><span style="background-color: #65b265; color: black;"> </span><span style="background-color: #008000; color: black;">its</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">own.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #198c19; color: black;">Just</span><span style="background-color: #198c19; color: black;"> </span><span style="background-color: #5cad5c; color: black;">like</span><span style="background-color: #5cad5c; color: black;"> </span><span style="background-color: #008000; color: black;">how</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #8dc58d; color: black;">you</span><span style="background-color: #8dc58d; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">learn</span><span style="background-color: #1d8e1d; color: black;"> </span><span style="background-color: #028102; color: black;">new</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #399c39; color: black;">things</span><span style="background-color: #399c39; color: black;"> </span><span style="background-color: #038103; color: black;">by</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #279327; color: black;">practicing</span><span style="background-color: #279327; color: black;"> </span><span style="background-color: #53a953; color: black;">and</span><span style="background-color: #53a953; color: black;"> </span><span style="background-color: #46a246; color: black;">trying</span><span style="background-color: #46a246; color: black;"> </span><span style="background-color: #40a040; color: black;">different</span><span style="background-color: #40a040; color: black;"> </span><span style="background-color: #41a041; color: black;">things,</span><span style="background-color: #41a041; color: black;"> </span><span style="background-color: #43a143; color: black;">machine</span><span style="background-color: #43a143; color: black;"> </span><span style="background-color: #008000; color: black;">learning</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #369b36; color: black;">is</span><span style="background-color: #369b36; color: black;"> </span><span style="background-color: #008000; color: black;">when</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #70b770; color: black;">a</span><span style="background-color: #70b770; color: black;"> </span><span style="background-color: #349a34; color: black;">computer</span><span style="background-color: #349a34; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">program</span><span style="background-color: #1d8e1d; color: black;"> </span><span style="background-color: #028102; color: black;">learns</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #48a348; color: black;">from</span><span style="background-color: #48a348; color: black;"> </span><span style="background-color: #4ba54a; color: black;">lots</span><span style="background-color: #4ba54a; color: black;"> </span><span style="background-color: #96c996; color: black;">of</span><span style="background-color: #96c996; color: black;"> </span><span style="background-color: #359a35; color: black;">examples</span><span style="background-color: #359a35; color: black;"> </span><span style="background-color: #2b952b; color: black;">and</span><span style="background-color: #2b952b; color: black;"> </span><span style="background-color: #3f9f3f; color: black;">gets</span><span style="background-color: #3f9f3f; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">better</span><span style="background-color: #1d8e1d; color: black;"> </span><span style="background-color: #1e8f1e; color: black;">at</span><span style="background-color: #1e8f1e; color: black;"> </span><span style="background-color: #0d860d; color: black;">doing</span><span style="background-color: #0d860d; color: black;"> </span><span style="background-color: #0c860c; color: black;">a</span><span style="background-color: #0c860c; color: black;"> </span><span style="background-color: #1b8d1b; color: black;">task.</span><span style="background-color: #1b8d1b; color: black;"> </span><span style="background-color: #6db56d; color: black;">For</span><span style="background-color: #6db56d; color: black;"> </span><span style="background-color: #349934; color: black;">example,</span><span style="background-color: #349934; color: black;"> </span><span style="background-color: #70b770; color: black;">if</span><span style="background-color: #70b770; color: black;"> </span><span style="background-color: #84c084; color: black;">you</span><span style="background-color: #84c084; color: black;"> </span><span style="background-color: #008000; color: black;">show</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #50a750; color: black;">robot</span><span style="background-color: #50a750; color: black;"> </span><span style="background-color: #3d9e3d; color: black;">friend</span><span style="background-color: #3d9e3d; color: black;"> </span><span style="background-color: #2d962d; color: black;">lots</span><span style="background-color: #2d962d; color: black;"> </span><span style="background-color: #339933; color: black;">of</span><span style="background-color: #339933; color: black;"> </span><span style="background-color: #84c184; color: black;">pictures</span><span style="background-color: #84c184; color: black;"> </span><span style="background-color: #168b16; color: black;">of</span><span style="background-color: #168b16; color: black;"> </span><span style="background-color: #379b37; color: black;">cats</span><span style="background-color: #379b37; color: black;"> </span><span style="background-color: #008000; color: black;">and</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">dogs,</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">it</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #51a851; color: black;">can</span><span style="background-color: #51a851; color: black;"> </span><span style="background-color: #118811; color: black;">learn</span><span style="background-color: #118811; color: black;"> </span><span style="background-color: #0f870f; color: black;">to</span><span style="background-color: #0f870f; color: black;"> </span><span style="background-color: #369b36; color: black;">tell</span><span style="background-color: #369b36; color: black;"> </span><span style="background-color: #018001; color: black;">the</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #1a8d1a; color: black;">difference</span><span style="background-color: #1a8d1a; color: black;"> </span><span style="background-color: #078407; color: black;">between</span><span style="background-color: #078407; color: black;"> </span><span style="background-color: #088408; color: black;">them.</span><span style="background-color: #088408; color: black;"> </span><span style="background-color: #098509; color: black;">It's</span><span style="background-color: #098509; color: black;"> </span><span style="background-color: #269226; color: black;">like</span><span style="background-color: #269226; color: black;"> </span><span style="background-color: #008000; color: black;">magic,</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #038103; color: black;">but</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #078407; color: black;">really</span><span style="background-color: #078407; color: black;"> </span><span style="background-color: #66b266; color: black;">it's</span><span style="background-color: #66b266; color: black;"> </span><span style="background-color: #65b265; color: black;">just</span><span style="background-color: #65b265; color: black;"> </span><span style="background-color: #68b368; color: black;">the</span><span style="background-color: #68b368; color: black;"> </span><span style="background-color: #49a449; color: black;">computer</span><span style="background-color: #49a449; color: black;"> </span><span style="background-color: #8fc68f; color: black;">using</span><span style="background-color: #8fc68f; color: black;"> </span><span style="background-color: #70b770; color: black;">math</span><span style="background-color: #70b770; color: black;"> </span><span style="background-color: #2f972f; color: black;">and</span><span style="background-color: #2f972f; color: black;"> </span><span style="background-color: #62b062; color: black;">patterns</span><span style="background-color: #62b062; color: black;"> </span><span style="background-color: #078407; color: black;">to</span><span style="background-color: #078407; color: black;"> </span><span style="background-color: #018001; color: black;">figure</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #0a850a; color: black;">things</span><span style="background-color: #0a850a; color: black;"> </span><span style="background-color: #7abc7a; color: black;">out.</span><span style="background-color: #7abc7a; color: black;"> </span></pre>
</div>
</div>
</section>
</section>
<section id="high-temperature-more-randomness" class="level1">
<h1>High Temperature ( More Randomness)</h1>
<div class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"></span>
<span id="cb26-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb26-3">  model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb26-4">  messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb26-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a helpful assistant."</span>},</span>
<span id="cb26-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: question}</span>
<span id="cb26-7">  ],</span>
<span id="cb26-8">  logprobs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb26-9">  temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.6</span>,</span>
<span id="cb26-10">  seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed</span>
<span id="cb26-11">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">highlight_openai_response(response)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="font-family: inherit; white-space: pre-wrap; word-break: break-all;"><span style="background-color: #008000; color: black;">Machine</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">learning</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">is</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #c4e0c4; color: black;">when</span><span style="background-color: #c4e0c4; color: black;"> </span><span style="background-color: #eaf2ea; color: black;">computer</span><span style="background-color: #eaf2ea; color: black;"> </span><span style="background-color: #068306; color: black;">programs</span><span style="background-color: #068306; color: black;"> </span><span style="background-color: #a1cfa1; color: black;">can</span><span style="background-color: #a1cfa1; color: black;"> </span><span style="background-color: #048204; color: black;">learn</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #56aa56; color: black;">and</span><span style="background-color: #56aa56; color: black;"> </span><span style="background-color: #c8e2c8; color: black;">improve</span><span style="background-color: #c8e2c8; color: black;"> </span><span style="background-color: #96c996; color: black;">by</span><span style="background-color: #96c996; color: black;"> </span><span style="background-color: #008000; color: black;">themselves.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000;"> </span><br><span style="background-color: #008000;"> </span><br><span style="background-color: #a0cea0; color: black;">Imagine</span><span style="background-color: #a0cea0; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">you</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #219021; color: black;">have</span><span style="background-color: #219021; color: black;"> </span><span style="background-color: #048204; color: black;">a</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #038103; color: black;">puzzle</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #008000; color: black;">toy</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">with</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">pictures</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #7dbd7d; color: black;">on</span><span style="background-color: #7dbd7d; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">it.</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #a6d2a6; color: black;">At</span><span style="background-color: #a6d2a6; color: black;"> </span><span style="background-color: #0b850b; color: black;">first</span><span style="background-color: #0b850b; color: black;"> </span><span style="background-color: #369b36; color: black;">it's</span><span style="background-color: #369b36; color: black;"> </span><span style="background-color: #339933; color: black;">all</span><span style="background-color: #339933; color: black;"> </span><span style="background-color: #018001; color: black;">mixed</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">up</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #3a9c3a; color: black;">and</span><span style="background-color: #3a9c3a; color: black;"> </span><span style="background-color: #6cb56c; color: black;">you</span><span style="background-color: #6cb56c; color: black;"> </span><span style="background-color: #1c8e1c; color: black;">don't</span><span style="background-color: #1c8e1c; color: black;"> </span><span style="background-color: #008000; color: black;">know</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #54a954; color: black;">how</span><span style="background-color: #54a954; color: black;"> </span><span style="background-color: #068306; color: black;">to</span><span style="background-color: #068306; color: black;"> </span><span style="background-color: #239123; color: black;">make</span><span style="background-color: #239123; color: black;"> </span><span style="background-color: #008000; color: black;">it</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">right.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #9bcc9b; color: black;">When</span><span style="background-color: #9bcc9b; color: black;"> </span><span style="background-color: #058205; color: black;">you</span><span style="background-color: #058205; color: black;"> </span><span style="background-color: #eaf2ea; color: black;">start</span><span style="background-color: #eaf2ea; color: black;"> </span><span style="background-color: #cae3ca; color: black;">solving</span><span style="background-color: #cae3ca; color: black;"> </span><span style="background-color: #8ac48a; color: black;">it</span><span style="background-color: #8ac48a; color: black;"> </span><span style="background-color: #008000; color: black;">a</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">few</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #008000; color: black;">times,</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #a5d1a5; color: black;">you</span><span style="background-color: #a5d1a5; color: black;"> </span><span style="background-color: #e7f1e7; color: black;">start</span><span style="background-color: #e7f1e7; color: black;"> </span><span style="background-color: #2b952b; color: black;">getting</span><span style="background-color: #2b952b; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">better</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #259225; color: black;">and</span><span style="background-color: #259225; color: black;"> </span><span style="background-color: #008000; color: black;">can</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #018001; color: black;">finish</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #0e870e; color: black;">the</span><span style="background-color: #0e870e; color: black;"> </span><span style="background-color: #b0d6b0; color: black;">puzzle</span><span style="background-color: #b0d6b0; color: black;"> </span><span style="background-color: #deedde; color: black;">faster.</span><span style="background-color: #deedde; color: black;"> </span><span style="background-color: #0b850b; color: black;">That's</span><span style="background-color: #0b850b; color: black;"> </span><span style="background-color: #349a34; color: black;">how</span><span style="background-color: #349a34; color: black;"> </span><span style="background-color: #e4f0e4; color: black;">machines</span><span style="background-color: #e4f0e4; color: black;"> </span><span style="background-color: #d7e9d7; color: black;">work</span><span style="background-color: #d7e9d7; color: black;"> </span><span style="background-color: #e5f0e5; color: black;">too,</span><span style="background-color: #e5f0e5; color: black;"> </span><span style="background-color: #028102; color: black;">they</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #1a8d1a; color: black;">start</span><span style="background-color: #1a8d1a; color: black;"> </span><span style="background-color: #118911; color: black;">with</span><span style="background-color: #118911; color: black;"> </span><span style="background-color: #58ab58; color: black;">learning</span><span style="background-color: #58ab58; color: black;"> </span><span style="background-color: #028102; color: black;">puzzles</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #a3d0a3; color: black;">and</span><span style="background-color: #a3d0a3; color: black;"> </span><span style="background-color: #e0eedf; color: black;">every</span><span style="background-color: #e0eedf; color: black;"> </span><span style="background-color: #eaf2ea; color: black;">time</span><span style="background-color: #eaf2ea; color: black;"> </span><span style="background-color: #088408; color: black;">they</span><span style="background-color: #088408; color: black;"> </span><span style="background-color: #dfeddf; color: black;">make</span><span style="background-color: #dfeddf; color: black;"> </span><span style="background-color: #a5d1a5; color: black;">a</span><span style="background-color: #a5d1a5; color: black;"> </span><span style="background-color: #a4d0a4; color: black;">mistake,</span><span style="background-color: #a4d0a4; color: black;"> </span><span style="background-color: #3c9d3c; color: black;">they</span><span style="background-color: #3c9d3c; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">remember</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">that</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #46a246; color: black;">and</span><span style="background-color: #46a246; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">try</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #008000; color: black;">not</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">to</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #e8f2e8; color: black;">make</span><span style="background-color: #e8f2e8; color: black;"> </span><span style="background-color: #0f870f; color: black;">the</span><span style="background-color: #0f870f; color: black;"> </span><span style="background-color: #028102; color: black;">same</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #0e870e; color: black;">mistake</span><span style="background-color: #0e870e; color: black;"> </span><span style="background-color: #018001; color: black;">again.</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #e9f2e9; color: black;">They</span><span style="background-color: #e9f2e9; color: black;"> </span><span style="background-color: #e6f1e6; color: black;">keep</span><span style="background-color: #e6f1e6; color: black;"> </span><span style="background-color: #65b265; color: black;">getting</span><span style="background-color: #65b265; color: black;"> </span><span style="background-color: #168b16; color: black;">better</span><span style="background-color: #168b16; color: black;"> </span><span style="background-color: #8ac48a; color: black;">and</span><span style="background-color: #8ac48a; color: black;"> </span><span style="background-color: #008000; color: black;">better!</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #3b9d3b; color: black;">They</span><span style="background-color: #3b9d3b; color: black;"> </span><span style="background-color: #79bc79; color: black;">can</span><span style="background-color: #79bc79; color: black;"> </span><span style="background-color: #008000; color: black;">use</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">what</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #078407; color: black;">they</span><span style="background-color: #078407; color: black;"> </span><span style="background-color: #1b8d1b; color: black;">have</span><span style="background-color: #1b8d1b; color: black;"> </span><span style="background-color: #a9d3a9; color: black;">learned</span><span style="background-color: #a9d3a9; color: black;"> </span><span style="background-color: #128912; color: black;">to</span><span style="background-color: #128912; color: black;"> </span><span style="background-color: #9acb9a; color: black;">help</span><span style="background-color: #9acb9a; color: black;"> </span><span style="background-color: #389b38; color: black;">us,</span><span style="background-color: #389b38; color: black;"> </span><span style="background-color: #2c962c; color: black;">like</span><span style="background-color: #2c962c; color: black;"> </span><span style="background-color: #1f8f1f; color: black;">find</span><span style="background-color: #1f8f1f; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">things</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #e8f2e8; color: black;">on</span><span style="background-color: #e8f2e8; color: black;"> </span><span style="background-color: #2b952b; color: black;">the</span><span style="background-color: #2b952b; color: black;"> </span><span style="background-color: #cde5cd; color: black;">internet</span><span style="background-color: #cde5cd; color: black;"> </span><span style="background-color: #b9dbb9; color: black;">or</span><span style="background-color: #b9dbb9; color: black;"> </span><span style="background-color: #008000; color: black;">even</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #d3e7d3; color: black;">drive</span><span style="background-color: #d3e7d3; color: black;"> </span><span style="background-color: #008000; color: black;">cars.</span><span style="background-color: #008000; color: black;"> </span></pre>
</div>
</div>
<div class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb28-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> res <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].logprobs.content:</span>
<span id="cb28-3">    probs.append(np.exp(res.logprob))</span>
<span id="cb28-4"></span>
<span id="cb28-5">plt.hist(probs)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-6">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Probability"</span>)</span>
<span id="cb28-7">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>)</span>
<span id="cb28-8">plt.show()</span>
<span id="cb28-9"></span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature_files/figure-html/cell-23-output-1.png" class="img-fluid"></p>
</div>
</div>
</section>
<section id="temperature-1-default" class="level1">
<h1>Temperature : 1 ( Default)</h1>
<div class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"></span>
<span id="cb29-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb29-3">  model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb29-4">  messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb29-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a helpful assistant."</span>},</span>
<span id="cb29-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: question}</span>
<span id="cb29-7">  ],</span>
<span id="cb29-8">  logprobs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb29-9">  temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb29-10">  seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed</span>
<span id="cb29-11">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">highlight_openai_response(response)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="font-family: inherit; white-space: pre-wrap; word-break: break-all;"><span style="background-color: #008000; color: black;">Machine</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">learning</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">is</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #c4e0c4; color: black;">when</span><span style="background-color: #c4e0c4; color: black;"> </span><span style="background-color: #349934; color: black;">computers</span><span style="background-color: #349934; color: black;"> </span><span style="background-color: #50a750; color: black;">learn</span><span style="background-color: #50a750; color: black;"> </span><span style="background-color: #c9e2c8; color: black;">things</span><span style="background-color: #c9e2c8; color: black;"> </span><span style="background-color: #67b267; color: black;">on</span><span style="background-color: #67b267; color: black;"> </span><span style="background-color: #008000; color: black;">their</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">own,</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #57ab57; color: black;">just</span><span style="background-color: #57ab57; color: black;"> </span><span style="background-color: #81bf81; color: black;">like</span><span style="background-color: #81bf81; color: black;"> </span><span style="background-color: #008000; color: black;">how</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #2f972f; color: black;">you</span><span style="background-color: #2f972f; color: black;"> </span><span style="background-color: #369b36; color: black;">learn</span><span style="background-color: #369b36; color: black;"> </span><span style="background-color: #008000; color: black;">new</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #1e8f1e; color: black;">things.</span><span style="background-color: #1e8f1e; color: black;"> </span><span style="background-color: #008000; color: black;">Imagine</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #afd6af; color: black;">you</span><span style="background-color: #afd6af; color: black;"> </span><span style="background-color: #83c083; color: black;">have</span><span style="background-color: #83c083; color: black;"> </span><span style="background-color: #128912; color: black;">a</span><span style="background-color: #128912; color: black;"> </span><span style="background-color: #058205; color: black;">special</span><span style="background-color: #058205; color: black;"> </span><span style="background-color: #018001; color: black;">toy</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #b3d8b3; color: black;">that</span><span style="background-color: #b3d8b3; color: black;"> </span><span style="background-color: #86c286; color: black;">can</span><span style="background-color: #86c286; color: black;"> </span><span style="background-color: #078407; color: black;">remember</span><span style="background-color: #078407; color: black;"> </span><span style="background-color: #1f8f1f; color: black;">things</span><span style="background-color: #1f8f1f; color: black;"> </span><span style="background-color: #e8f2e8; color: black;">it</span><span style="background-color: #e8f2e8; color: black;"> </span><span style="background-color: #9fce9f; color: black;">sees</span><span style="background-color: #9fce9f; color: black;"> </span><span style="background-color: #e5f0e5; color: black;">and</span><span style="background-color: #e5f0e5; color: black;"> </span><span style="background-color: #1f8f1f; color: black;">hears.</span><span style="background-color: #1f8f1f; color: black;"> </span><span style="background-color: #55a955; color: black;">When</span><span style="background-color: #55a955; color: black;"> </span><span style="background-color: #349a34; color: black;">you</span><span style="background-color: #349a34; color: black;"> </span><span style="background-color: #058205; color: black;">show</span><span style="background-color: #058205; color: black;"> </span><span style="background-color: #a5d1a5; color: black;">it</span><span style="background-color: #a5d1a5; color: black;"> </span><span style="background-color: #068306; color: black;">a</span><span style="background-color: #068306; color: black;"> </span><span style="background-color: #0b850b; color: black;">picture</span><span style="background-color: #0b850b; color: black;"> </span><span style="background-color: #399c39; color: black;">of</span><span style="background-color: #399c39; color: black;"> </span><span style="background-color: #1c8e1c; color: black;">a</span><span style="background-color: #1c8e1c; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">cat</span><span style="background-color: #1d8e1d; color: black;"> </span><span style="background-color: #018001; color: black;">and</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #0a850a; color: black;">tell</span><span style="background-color: #0a850a; color: black;"> </span><span style="background-color: #57ab57; color: black;">it</span><span style="background-color: #57ab57; color: black;"> </span><span style="background-color: #68b368; color: black;">"this</span><span style="background-color: #68b368; color: black;"> </span><span style="background-color: #4ba54b; color: black;">is</span><span style="background-color: #4ba54b; color: black;"> </span><span style="background-color: #008000; color: black;">a</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #a6d2a6; color: black;">cat,"</span><span style="background-color: #a6d2a6; color: black;"> </span><span style="background-color: #56aa56; color: black;">the</span><span style="background-color: #56aa56; color: black;"> </span><span style="background-color: #008000; color: black;">toy</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">remembers</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">that.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #3b9d3b; color: black;">Then,</span><span style="background-color: #3b9d3b; color: black;"> </span><span style="background-color: #a6d2a6; color: black;">when</span><span style="background-color: #a6d2a6; color: black;"> </span><span style="background-color: #008000; color: black;">you</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #399c39; color: black;">show</span><span style="background-color: #399c39; color: black;"> </span><span style="background-color: #43a143; color: black;">it</span><span style="background-color: #43a143; color: black;"> </span><span style="background-color: #4ca54c; color: black;">another</span><span style="background-color: #4ca54c; color: black;"> </span><span style="background-color: #239123; color: black;">picture</span><span style="background-color: #239123; color: black;"> </span><span style="background-color: #0c860c; color: black;">of</span><span style="background-color: #0c860c; color: black;"> </span><span style="background-color: #188c18; color: black;">a</span><span style="background-color: #188c18; color: black;"> </span><span style="background-color: #0b850b; color: black;">cat</span><span style="background-color: #0b850b; color: black;"> </span><span style="background-color: #008000; color: black;">without</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #018001; color: black;">telling</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #86c286; color: black;">it</span><span style="background-color: #86c286; color: black;"> </span><span style="background-color: #008000; color: black;">anything,</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #2d962d; color: black;">the</span><span style="background-color: #2d962d; color: black;"> </span><span style="background-color: #018001; color: black;">toy</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #048204; color: black;">can</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #dcecdc; color: black;">recognize</span><span style="background-color: #dcecdc; color: black;"> </span><span style="background-color: #138913; color: black;">that</span><span style="background-color: #138913; color: black;"> </span><span style="background-color: #008000; color: black;">it's</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #85c185; color: black;">a</span><span style="background-color: #85c185; color: black;"> </span><span style="background-color: #008000; color: black;">cat</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #1c8e1c; color: black;">too!</span><span style="background-color: #1c8e1c; color: black;"> </span><span style="background-color: #008000; color: black;">This</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #229122; color: black;">is</span><span style="background-color: #229122; color: black;"> </span><span style="background-color: #c9e3c9; color: black;">because</span><span style="background-color: #c9e3c9; color: black;"> </span><span style="background-color: #56aa56; color: black;">the</span><span style="background-color: #56aa56; color: black;"> </span><span style="background-color: #008000; color: black;">toy</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #3d9e3d; color: black;">learned</span><span style="background-color: #3d9e3d; color: black;"> </span><span style="background-color: #138913; color: black;">from</span><span style="background-color: #138913; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #96c996; color: black;">first</span><span style="background-color: #96c996; color: black;"> </span><span style="background-color: #7bbc7b; color: black;">picture.</span><span style="background-color: #7bbc7b; color: black;"> </span><span style="background-color: #7bbc7b;"> </span><br><span style="background-color: #7bbc7b;"> </span><br><span style="background-color: #dcecdc; color: black;">Machine</span><span style="background-color: #dcecdc; color: black;"> </span><span style="background-color: #018001; color: black;">learning</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #63b163; color: black;">is</span><span style="background-color: #63b163; color: black;"> </span><span style="background-color: #128912; color: black;">like</span><span style="background-color: #128912; color: black;"> </span><span style="background-color: #008000; color: black;">that</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #8fc68f; color: black;">toy,</span><span style="background-color: #8fc68f; color: black;"> </span><span style="background-color: #369b36; color: black;">but</span><span style="background-color: #369b36; color: black;"> </span><span style="background-color: #038103; color: black;">with</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #018001; color: black;">big</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #028102; color: black;">computers.</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #62b062; color: black;">They</span><span style="background-color: #62b062; color: black;"> </span><span style="background-color: #8dc58d; color: black;">can</span><span style="background-color: #8dc58d; color: black;"> </span><span style="background-color: #a3d0a3; color: black;">learn</span><span style="background-color: #a3d0a3; color: black;"> </span><span style="background-color: #008000; color: black;">from</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #4ca54c; color: black;">lots</span><span style="background-color: #4ca54c; color: black;"> </span><span style="background-color: #3a9c3a; color: black;">of</span><span style="background-color: #3a9c3a; color: black;"> </span><span style="background-color: #75b975; color: black;">pictures,</span><span style="background-color: #75b975; color: black;"> </span><span style="background-color: #84c184; color: black;">sounds,</span><span style="background-color: #84c184; color: black;"> </span><span style="background-color: #209020; color: black;">and</span><span style="background-color: #209020; color: black;"> </span><span style="background-color: #028102; color: black;">information</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #c4e0c4; color: black;">to</span><span style="background-color: #c4e0c4; color: black;"> </span><span style="background-color: #c6e1c6; color: black;">understand</span><span style="background-color: #c6e1c6; color: black;"> </span><span style="background-color: #289328; color: black;">things</span><span style="background-color: #289328; color: black;"> </span><span style="background-color: #54a954; color: black;">all</span><span style="background-color: #54a954; color: black;"> </span><span style="background-color: #66b266; color: black;">by</span><span style="background-color: #66b266; color: black;"> </span><span style="background-color: #2b952b; color: black;">themselves.</span><span style="background-color: #2b952b; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">The</span><span style="background-color: #1d8e1d; color: black;"> </span><span style="background-color: #279327; color: black;">more</span><span style="background-color: #279327; color: black;"> </span><span style="background-color: #0a850a; color: black;">they</span><span style="background-color: #0a850a; color: black;"> </span><span style="background-color: #56aa56; color: black;">learn,</span><span style="background-color: #56aa56; color: black;"> </span><span style="background-color: #1e8f1e; color: black;">the</span><span style="background-color: #1e8f1e; color: black;"> </span><span style="background-color: #5eae5e; color: black;">smarter</span><span style="background-color: #5eae5e; color: black;"> </span><span style="background-color: #048204; color: black;">they</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #008000; color: black;">become.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #42a042; color: black;">They</span><span style="background-color: #42a042; color: black;"> </span><span style="background-color: #b9dbb9; color: black;">can</span><span style="background-color: #b9dbb9; color: black;"> </span><span style="background-color: #4fa74f; color: black;">even</span><span style="background-color: #4fa74f; color: black;"> </span><span style="background-color: #b4d8b4; color: black;">help</span><span style="background-color: #b4d8b4; color: black;"> </span><span style="background-color: #7ebe7e; color: black;">us</span><span style="background-color: #7ebe7e; color: black;"> </span><span style="background-color: #e0eee0; color: black;">do</span><span style="background-color: #e0eee0; color: black;"> </span><span style="background-color: #088408; color: black;">things</span><span style="background-color: #088408; color: black;"> </span><span style="background-color: #008000; color: black;">like</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #028102; color: black;">finding</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #eaf2ea; color: black;">answers</span><span style="background-color: #eaf2ea; color: black;"> </span><span style="background-color: #138913; color: black;">to</span><span style="background-color: #138913; color: black;"> </span><span style="background-color: #4ea64e; color: black;">questions,</span><span style="background-color: #4ea64e; color: black;"> </span><span style="background-color: #018001; color: black;">predicting</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #008000; color: black;">what</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">might</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #91c791; color: black;">happen</span><span style="background-color: #91c791; color: black;"> </span><span style="background-color: #018001; color: black;">next,</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #309730; color: black;">and</span><span style="background-color: #309730; color: black;"> </span><span style="background-color: #89c389; color: black;">making</span><span style="background-color: #89c389; color: black;"> </span><span style="background-color: #389b38; color: black;">decisions.</span><span style="background-color: #389b38; color: black;"> </span><span style="background-color: #028102; color: black;">It's</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #9ccd9c; color: black;">like</span><span style="background-color: #9ccd9c; color: black;"> </span><span style="background-color: #389b38; color: black;">having</span><span style="background-color: #389b38; color: black;"> </span><span style="background-color: #86c286; color: black;">a</span><span style="background-color: #86c286; color: black;"> </span><span style="background-color: #7abc7a; color: black;">really</span><span style="background-color: #7abc7a; color: black;"> </span><span style="background-color: #2d962d; color: black;">smart</span><span style="background-color: #2d962d; color: black;"> </span><span style="background-color: #289428; color: black;">friend</span><span style="background-color: #289428; color: black;"> </span><span style="background-color: #b2d7b2; color: black;">who</span><span style="background-color: #b2d7b2; color: black;"> </span><span style="background-color: #e5f0e5; color: black;">knows</span><span style="background-color: #e5f0e5; color: black;"> </span><span style="background-color: #178b17; color: black;">so</span><span style="background-color: #178b17; color: black;"> </span><span style="background-color: #239123; color: black;">many</span><span style="background-color: #239123; color: black;"> </span><span style="background-color: #63b163; color: black;">things!</span><span style="background-color: #63b163; color: black;"> </span></pre>
</div>
</div>
<div class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb31-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> res <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].logprobs.content:</span>
<span id="cb31-3">    probs.append(np.exp(res.logprob))</span>
<span id="cb31-4"></span>
<span id="cb31-5">plt.hist(probs)</span>
<span id="cb31-6">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Probability"</span>)</span>
<span id="cb31-7">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>)</span>
<span id="cb31-8">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature_files/figure-html/cell-26-output-1.png" class="img-fluid"></p>
</div>
</div>
</section>
<section id="openai-recommendations-for-temperature" class="level1">
<h1>OpenAI Recommendations for Temperature</h1>
<p><img src="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature_files/figure-html/4751115b-1-image-3.png" class="img-fluid" alt="image-3.png"> - default is 1 - range: 0 to 2 <img src="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature_files/figure-html/4751115b-2-image.png" class="img-fluid" alt="image.png"></p>
</section>
<section id="top-p-nucleus-sampling" class="level1">
<h1>Top-P (Nucleus Sampling)</h1>
<p>Top-p sampling, also known as nucleus sampling, is a technique used in large language models to control the diversity and quality of generated text. It involves selecting tokens from the most probable options, where the sum of their probabilities determines the selection.</p>
<p>The “top p” parameter acts as a filter, controlling how many different words or phrases the model considers when predicting the next word. The lower the value of <code>p</code>, the more deterministic the responses generated by the model are.</p>
<p>This method helps balance between diversity and high-probability words, ensuring the output is both diverse and contextually relevant.</p>
<div class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">df_p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'word'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'base_probability'</span>]].copy()</span>
<span id="cb32-2"></span>
<span id="cb32-3">df_p[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cumulative_probability'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_p[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'base_probability'</span>].cumsum()</span>
<span id="cb32-4"></span>
<span id="cb32-5">df_p</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="26">
<div>


<table class="dataframe table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">word</th>
<th data-quarto-table-cell-role="th">base_probability</th>
<th data-quarto-table-cell-role="th">cumulative_probability</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>word0</td>
<td>0.19</td>
<td>0.19</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>word1</td>
<td>0.12</td>
<td>0.31</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>word2</td>
<td>0.10</td>
<td>0.41</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>word3</td>
<td>0.09</td>
<td>0.50</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>word4</td>
<td>0.08</td>
<td>0.58</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>word5</td>
<td>0.07</td>
<td>0.65</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>word6</td>
<td>0.06</td>
<td>0.71</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>word7</td>
<td>0.05</td>
<td>0.76</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>word8</td>
<td>0.04</td>
<td>0.80</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>word9</td>
<td>0.03</td>
<td>0.83</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>word10</td>
<td>0.03</td>
<td>0.86</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>word11</td>
<td>0.03</td>
<td>0.89</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">12</td>
<td>word12</td>
<td>0.02</td>
<td>0.91</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">13</td>
<td>word13</td>
<td>0.02</td>
<td>0.93</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">14</td>
<td>word14</td>
<td>0.02</td>
<td>0.95</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">15</td>
<td>word15</td>
<td>0.01</td>
<td>0.96</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">16</td>
<td>word16</td>
<td>0.01</td>
<td>0.97</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">17</td>
<td>word17</td>
<td>0.01</td>
<td>0.98</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">18</td>
<td>word18</td>
<td>0.01</td>
<td>0.99</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">19</td>
<td>word19</td>
<td>0.01</td>
<td>1.00</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">df_p.style.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'background: yellow'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> x.cumulative_probability <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> x], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="27">
<style type="text/css">
#T_b7719_row0_col0, #T_b7719_row0_col1, #T_b7719_row0_col2, #T_b7719_row1_col0, #T_b7719_row1_col1, #T_b7719_row1_col2, #T_b7719_row2_col0, #T_b7719_row2_col1, #T_b7719_row2_col2, #T_b7719_row3_col0, #T_b7719_row3_col1, #T_b7719_row3_col2, #T_b7719_row4_col0, #T_b7719_row4_col1, #T_b7719_row4_col2, #T_b7719_row5_col0, #T_b7719_row5_col1, #T_b7719_row5_col2, #T_b7719_row6_col0, #T_b7719_row6_col1, #T_b7719_row6_col2, #T_b7719_row7_col0, #T_b7719_row7_col1, #T_b7719_row7_col2, #T_b7719_row8_col0, #T_b7719_row8_col1, #T_b7719_row8_col2 {
  background: yellow;
}
</style>

<table id="T_b7719" data-quarto-postprocess="true" class="table table-sm table-striped small">
<thead>
<tr class="header">
<th class="blank level0" data-quarto-table-cell-role="th">&nbsp;</th>
<th id="T_b7719_level0_col0" class="col_heading level0 col0" data-quarto-table-cell-role="th">word</th>
<th id="T_b7719_level0_col1" class="col_heading level0 col1" data-quarto-table-cell-role="th">base_probability</th>
<th id="T_b7719_level0_col2" class="col_heading level0 col2" data-quarto-table-cell-role="th">cumulative_probability</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td id="T_b7719_level0_row0" class="row_heading level0 row0" data-quarto-table-cell-role="th">0</td>
<td id="T_b7719_row0_col0" class="data row0 col0">word0</td>
<td id="T_b7719_row0_col1" class="data row0 col1">0.190000</td>
<td id="T_b7719_row0_col2" class="data row0 col2">0.190000</td>
</tr>
<tr class="even">
<td id="T_b7719_level0_row1" class="row_heading level0 row1" data-quarto-table-cell-role="th">1</td>
<td id="T_b7719_row1_col0" class="data row1 col0">word1</td>
<td id="T_b7719_row1_col1" class="data row1 col1">0.120000</td>
<td id="T_b7719_row1_col2" class="data row1 col2">0.310000</td>
</tr>
<tr class="odd">
<td id="T_b7719_level0_row2" class="row_heading level0 row2" data-quarto-table-cell-role="th">2</td>
<td id="T_b7719_row2_col0" class="data row2 col0">word2</td>
<td id="T_b7719_row2_col1" class="data row2 col1">0.100000</td>
<td id="T_b7719_row2_col2" class="data row2 col2">0.410000</td>
</tr>
<tr class="even">
<td id="T_b7719_level0_row3" class="row_heading level0 row3" data-quarto-table-cell-role="th">3</td>
<td id="T_b7719_row3_col0" class="data row3 col0">word3</td>
<td id="T_b7719_row3_col1" class="data row3 col1">0.090000</td>
<td id="T_b7719_row3_col2" class="data row3 col2">0.500000</td>
</tr>
<tr class="odd">
<td id="T_b7719_level0_row4" class="row_heading level0 row4" data-quarto-table-cell-role="th">4</td>
<td id="T_b7719_row4_col0" class="data row4 col0">word4</td>
<td id="T_b7719_row4_col1" class="data row4 col1">0.080000</td>
<td id="T_b7719_row4_col2" class="data row4 col2">0.580000</td>
</tr>
<tr class="even">
<td id="T_b7719_level0_row5" class="row_heading level0 row5" data-quarto-table-cell-role="th">5</td>
<td id="T_b7719_row5_col0" class="data row5 col0">word5</td>
<td id="T_b7719_row5_col1" class="data row5 col1">0.070000</td>
<td id="T_b7719_row5_col2" class="data row5 col2">0.650000</td>
</tr>
<tr class="odd">
<td id="T_b7719_level0_row6" class="row_heading level0 row6" data-quarto-table-cell-role="th">6</td>
<td id="T_b7719_row6_col0" class="data row6 col0">word6</td>
<td id="T_b7719_row6_col1" class="data row6 col1">0.060000</td>
<td id="T_b7719_row6_col2" class="data row6 col2">0.710000</td>
</tr>
<tr class="even">
<td id="T_b7719_level0_row7" class="row_heading level0 row7" data-quarto-table-cell-role="th">7</td>
<td id="T_b7719_row7_col0" class="data row7 col0">word7</td>
<td id="T_b7719_row7_col1" class="data row7 col1">0.050000</td>
<td id="T_b7719_row7_col2" class="data row7 col2">0.760000</td>
</tr>
<tr class="odd">
<td id="T_b7719_level0_row8" class="row_heading level0 row8" data-quarto-table-cell-role="th">8</td>
<td id="T_b7719_row8_col0" class="data row8 col0">word8</td>
<td id="T_b7719_row8_col1" class="data row8 col1">0.040000</td>
<td id="T_b7719_row8_col2" class="data row8 col2">0.800000</td>
</tr>
<tr class="even">
<td id="T_b7719_level0_row9" class="row_heading level0 row9" data-quarto-table-cell-role="th">9</td>
<td id="T_b7719_row9_col0" class="data row9 col0">word9</td>
<td id="T_b7719_row9_col1" class="data row9 col1">0.030000</td>
<td id="T_b7719_row9_col2" class="data row9 col2">0.830000</td>
</tr>
<tr class="odd">
<td id="T_b7719_level0_row10" class="row_heading level0 row10" data-quarto-table-cell-role="th">10</td>
<td id="T_b7719_row10_col0" class="data row10 col0">word10</td>
<td id="T_b7719_row10_col1" class="data row10 col1">0.030000</td>
<td id="T_b7719_row10_col2" class="data row10 col2">0.860000</td>
</tr>
<tr class="even">
<td id="T_b7719_level0_row11" class="row_heading level0 row11" data-quarto-table-cell-role="th">11</td>
<td id="T_b7719_row11_col0" class="data row11 col0">word11</td>
<td id="T_b7719_row11_col1" class="data row11 col1">0.030000</td>
<td id="T_b7719_row11_col2" class="data row11 col2">0.890000</td>
</tr>
<tr class="odd">
<td id="T_b7719_level0_row12" class="row_heading level0 row12" data-quarto-table-cell-role="th">12</td>
<td id="T_b7719_row12_col0" class="data row12 col0">word12</td>
<td id="T_b7719_row12_col1" class="data row12 col1">0.020000</td>
<td id="T_b7719_row12_col2" class="data row12 col2">0.910000</td>
</tr>
<tr class="even">
<td id="T_b7719_level0_row13" class="row_heading level0 row13" data-quarto-table-cell-role="th">13</td>
<td id="T_b7719_row13_col0" class="data row13 col0">word13</td>
<td id="T_b7719_row13_col1" class="data row13 col1">0.020000</td>
<td id="T_b7719_row13_col2" class="data row13 col2">0.930000</td>
</tr>
<tr class="odd">
<td id="T_b7719_level0_row14" class="row_heading level0 row14" data-quarto-table-cell-role="th">14</td>
<td id="T_b7719_row14_col0" class="data row14 col0">word14</td>
<td id="T_b7719_row14_col1" class="data row14 col1">0.020000</td>
<td id="T_b7719_row14_col2" class="data row14 col2">0.950000</td>
</tr>
<tr class="even">
<td id="T_b7719_level0_row15" class="row_heading level0 row15" data-quarto-table-cell-role="th">15</td>
<td id="T_b7719_row15_col0" class="data row15 col0">word15</td>
<td id="T_b7719_row15_col1" class="data row15 col1">0.010000</td>
<td id="T_b7719_row15_col2" class="data row15 col2">0.960000</td>
</tr>
<tr class="odd">
<td id="T_b7719_level0_row16" class="row_heading level0 row16" data-quarto-table-cell-role="th">16</td>
<td id="T_b7719_row16_col0" class="data row16 col0">word16</td>
<td id="T_b7719_row16_col1" class="data row16 col1">0.010000</td>
<td id="T_b7719_row16_col2" class="data row16 col2">0.970000</td>
</tr>
<tr class="even">
<td id="T_b7719_level0_row17" class="row_heading level0 row17" data-quarto-table-cell-role="th">17</td>
<td id="T_b7719_row17_col0" class="data row17 col0">word17</td>
<td id="T_b7719_row17_col1" class="data row17 col1">0.010000</td>
<td id="T_b7719_row17_col2" class="data row17 col2">0.980000</td>
</tr>
<tr class="odd">
<td id="T_b7719_level0_row18" class="row_heading level0 row18" data-quarto-table-cell-role="th">18</td>
<td id="T_b7719_row18_col0" class="data row18 col0">word18</td>
<td id="T_b7719_row18_col1" class="data row18 col1">0.010000</td>
<td id="T_b7719_row18_col2" class="data row18 col2">0.990000</td>
</tr>
<tr class="even">
<td id="T_b7719_level0_row19" class="row_heading level0 row19" data-quarto-table-cell-role="th">19</td>
<td id="T_b7719_row19_col0" class="data row19 col0">word19</td>
<td id="T_b7719_row19_col1" class="data row19 col1">0.010000</td>
<td id="T_b7719_row19_col2" class="data row19 col2">1.000000</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">df_p[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"base_probability"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="28">
<pre><code>1.0</code></pre>
</div>
</div>
<section id="high-top-p-includes-more-tokens-to-sample" class="level3">
<h3 class="anchored" data-anchor-id="high-top-p-includes-more-tokens-to-sample">High Top-P ( Includes more tokens to sample)</h3>
<div class="cell" data-execution_count="29">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"></span>
<span id="cb36-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb36-3">  model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb36-4">  messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb36-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a helpful assistant."</span>},</span>
<span id="cb36-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: question}</span>
<span id="cb36-7">  ],</span>
<span id="cb36-8">  logprobs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb36-9">  top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb36-10">  seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed</span>
<span id="cb36-11">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].message.content)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Machine learning is when computers learn things on their own, just like how you learn new things. Imagine you have a special toy that can remember things it sees and hears. When you show it a picture of a cat and tell it "this is a cat," the toy remembers that. Then, when you show it another picture of a cat without telling it anything, the toy can recognize that it's a cat too! This is because the toy learned from the first picture. 

Machine learning is like that toy, but with big computers. They can learn from lots of pictures, sounds, and information to understand things all by themselves. The more they learn, the smarter they become. They can even help us do things like finding answers to questions, predicting what might happen next, and making decisions. It's like having a really smart friend who knows so many things!</code></pre>
</div>
</div>
<div class="cell" data-execution_count="31">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1">highlight_openai_response(response)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="font-family: inherit; white-space: pre-wrap; word-break: break-all;"><span style="background-color: #008000; color: black;">Machine</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">learning</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">is</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #c4e0c4; color: black;">when</span><span style="background-color: #c4e0c4; color: black;"> </span><span style="background-color: #349934; color: black;">computers</span><span style="background-color: #349934; color: black;"> </span><span style="background-color: #50a750; color: black;">learn</span><span style="background-color: #50a750; color: black;"> </span><span style="background-color: #c9e2c8; color: black;">things</span><span style="background-color: #c9e2c8; color: black;"> </span><span style="background-color: #67b267; color: black;">on</span><span style="background-color: #67b267; color: black;"> </span><span style="background-color: #008000; color: black;">their</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">own,</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #58ab58; color: black;">just</span><span style="background-color: #58ab58; color: black;"> </span><span style="background-color: #81bf81; color: black;">like</span><span style="background-color: #81bf81; color: black;"> </span><span style="background-color: #008000; color: black;">how</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #339933; color: black;">you</span><span style="background-color: #339933; color: black;"> </span><span style="background-color: #369b36; color: black;">learn</span><span style="background-color: #369b36; color: black;"> </span><span style="background-color: #008000; color: black;">new</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">things.</span><span style="background-color: #1d8e1d; color: black;"> </span><span style="background-color: #008000; color: black;">Imagine</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #afd6af; color: black;">you</span><span style="background-color: #afd6af; color: black;"> </span><span style="background-color: #83c083; color: black;">have</span><span style="background-color: #83c083; color: black;"> </span><span style="background-color: #128912; color: black;">a</span><span style="background-color: #128912; color: black;"> </span><span style="background-color: #058205; color: black;">special</span><span style="background-color: #058205; color: black;"> </span><span style="background-color: #018001; color: black;">toy</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #b3d8b3; color: black;">that</span><span style="background-color: #b3d8b3; color: black;"> </span><span style="background-color: #86c286; color: black;">can</span><span style="background-color: #86c286; color: black;"> </span><span style="background-color: #078407; color: black;">remember</span><span style="background-color: #078407; color: black;"> </span><span style="background-color: #209020; color: black;">things</span><span style="background-color: #209020; color: black;"> </span><span style="background-color: #e8f2e8; color: black;">it</span><span style="background-color: #e8f2e8; color: black;"> </span><span style="background-color: #9fce9f; color: black;">sees</span><span style="background-color: #9fce9f; color: black;"> </span><span style="background-color: #e5f0e5; color: black;">and</span><span style="background-color: #e5f0e5; color: black;"> </span><span style="background-color: #1f8f1f; color: black;">hears.</span><span style="background-color: #1f8f1f; color: black;"> </span><span style="background-color: #55a955; color: black;">When</span><span style="background-color: #55a955; color: black;"> </span><span style="background-color: #359a35; color: black;">you</span><span style="background-color: #359a35; color: black;"> </span><span style="background-color: #058205; color: black;">show</span><span style="background-color: #058205; color: black;"> </span><span style="background-color: #a5d1a5; color: black;">it</span><span style="background-color: #a5d1a5; color: black;"> </span><span style="background-color: #068306; color: black;">a</span><span style="background-color: #068306; color: black;"> </span><span style="background-color: #0b850b; color: black;">picture</span><span style="background-color: #0b850b; color: black;"> </span><span style="background-color: #389b38; color: black;">of</span><span style="background-color: #389b38; color: black;"> </span><span style="background-color: #1b8d1b; color: black;">a</span><span style="background-color: #1b8d1b; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">cat</span><span style="background-color: #1d8e1d; color: black;"> </span><span style="background-color: #018001; color: black;">and</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #0a850a; color: black;">tell</span><span style="background-color: #0a850a; color: black;"> </span><span style="background-color: #57ab57; color: black;">it</span><span style="background-color: #57ab57; color: black;"> </span><span style="background-color: #67b267; color: black;">"this</span><span style="background-color: #67b267; color: black;"> </span><span style="background-color: #4ba54b; color: black;">is</span><span style="background-color: #4ba54b; color: black;"> </span><span style="background-color: #008000; color: black;">a</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #a6d2a6; color: black;">cat,"</span><span style="background-color: #a6d2a6; color: black;"> </span><span style="background-color: #56aa56; color: black;">the</span><span style="background-color: #56aa56; color: black;"> </span><span style="background-color: #008000; color: black;">toy</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">remembers</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">that.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #3a9c3a; color: black;">Then,</span><span style="background-color: #3a9c3a; color: black;"> </span><span style="background-color: #a7d2a7; color: black;">when</span><span style="background-color: #a7d2a7; color: black;"> </span><span style="background-color: #008000; color: black;">you</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #399c39; color: black;">show</span><span style="background-color: #399c39; color: black;"> </span><span style="background-color: #42a042; color: black;">it</span><span style="background-color: #42a042; color: black;"> </span><span style="background-color: #4ba54b; color: black;">another</span><span style="background-color: #4ba54b; color: black;"> </span><span style="background-color: #229122; color: black;">picture</span><span style="background-color: #229122; color: black;"> </span><span style="background-color: #0c860c; color: black;">of</span><span style="background-color: #0c860c; color: black;"> </span><span style="background-color: #188c18; color: black;">a</span><span style="background-color: #188c18; color: black;"> </span><span style="background-color: #0a850a; color: black;">cat</span><span style="background-color: #0a850a; color: black;"> </span><span style="background-color: #008000; color: black;">without</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #018001; color: black;">telling</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #85c185; color: black;">it</span><span style="background-color: #85c185; color: black;"> </span><span style="background-color: #008000; color: black;">anything,</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #2d962d; color: black;">the</span><span style="background-color: #2d962d; color: black;"> </span><span style="background-color: #018001; color: black;">toy</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #048204; color: black;">can</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #dcecdc; color: black;">recognize</span><span style="background-color: #dcecdc; color: black;"> </span><span style="background-color: #128912; color: black;">that</span><span style="background-color: #128912; color: black;"> </span><span style="background-color: #008000; color: black;">it's</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #86c286; color: black;">a</span><span style="background-color: #86c286; color: black;"> </span><span style="background-color: #008000; color: black;">cat</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">too!</span><span style="background-color: #1d8e1d; color: black;"> </span><span style="background-color: #008000; color: black;">This</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #239123; color: black;">is</span><span style="background-color: #239123; color: black;"> </span><span style="background-color: #c9e3c9; color: black;">because</span><span style="background-color: #c9e3c9; color: black;"> </span><span style="background-color: #54a954; color: black;">the</span><span style="background-color: #54a954; color: black;"> </span><span style="background-color: #008000; color: black;">toy</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #3e9e3e; color: black;">learned</span><span style="background-color: #3e9e3e; color: black;"> </span><span style="background-color: #118911; color: black;">from</span><span style="background-color: #118911; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #98ca98; color: black;">first</span><span style="background-color: #98ca98; color: black;"> </span><span style="background-color: #78bb78; color: black;">picture.</span><span style="background-color: #78bb78; color: black;"> </span><span style="background-color: #78bb78;"> </span><br><span style="background-color: #78bb78;"> </span><br><span style="background-color: #dcecdc; color: black;">Machine</span><span style="background-color: #dcecdc; color: black;"> </span><span style="background-color: #018001; color: black;">learning</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #66b266; color: black;">is</span><span style="background-color: #66b266; color: black;"> </span><span style="background-color: #128912; color: black;">like</span><span style="background-color: #128912; color: black;"> </span><span style="background-color: #008000; color: black;">that</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #8fc68f; color: black;">toy,</span><span style="background-color: #8fc68f; color: black;"> </span><span style="background-color: #369b36; color: black;">but</span><span style="background-color: #369b36; color: black;"> </span><span style="background-color: #038103; color: black;">with</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #018001; color: black;">big</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #028102; color: black;">computers.</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #56aa56; color: black;">They</span><span style="background-color: #56aa56; color: black;"> </span><span style="background-color: #90c790; color: black;">can</span><span style="background-color: #90c790; color: black;"> </span><span style="background-color: #a5d1a5; color: black;">learn</span><span style="background-color: #a5d1a5; color: black;"> </span><span style="background-color: #008000; color: black;">from</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #4ba54b; color: black;">lots</span><span style="background-color: #4ba54b; color: black;"> </span><span style="background-color: #3a9c3a; color: black;">of</span><span style="background-color: #3a9c3a; color: black;"> </span><span style="background-color: #78bb78; color: black;">pictures,</span><span style="background-color: #78bb78; color: black;"> </span><span style="background-color: #84c184; color: black;">sounds,</span><span style="background-color: #84c184; color: black;"> </span><span style="background-color: #209020; color: black;">and</span><span style="background-color: #209020; color: black;"> </span><span style="background-color: #028102; color: black;">information</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #c3e0c3; color: black;">to</span><span style="background-color: #c3e0c3; color: black;"> </span><span style="background-color: #c6e1c6; color: black;">understand</span><span style="background-color: #c6e1c6; color: black;"> </span><span style="background-color: #279327; color: black;">things</span><span style="background-color: #279327; color: black;"> </span><span style="background-color: #53a953; color: black;">all</span><span style="background-color: #53a953; color: black;"> </span><span style="background-color: #62b062; color: black;">by</span><span style="background-color: #62b062; color: black;"> </span><span style="background-color: #2b952b; color: black;">themselves.</span><span style="background-color: #2b952b; color: black;"> </span><span style="background-color: #1c8e1c; color: black;">The</span><span style="background-color: #1c8e1c; color: black;"> </span><span style="background-color: #239123; color: black;">more</span><span style="background-color: #239123; color: black;"> </span><span style="background-color: #0a850a; color: black;">they</span><span style="background-color: #0a850a; color: black;"> </span><span style="background-color: #55a955; color: black;">learn,</span><span style="background-color: #55a955; color: black;"> </span><span style="background-color: #209020; color: black;">the</span><span style="background-color: #209020; color: black;"> </span><span style="background-color: #5cad5c; color: black;">smarter</span><span style="background-color: #5cad5c; color: black;"> </span><span style="background-color: #048204; color: black;">they</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #008000; color: black;">become.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #3f9f3f; color: black;">They</span><span style="background-color: #3f9f3f; color: black;"> </span><span style="background-color: #b5d9b5; color: black;">can</span><span style="background-color: #b5d9b5; color: black;"> </span><span style="background-color: #4fa74f; color: black;">even</span><span style="background-color: #4fa74f; color: black;"> </span><span style="background-color: #b3d8b3; color: black;">help</span><span style="background-color: #b3d8b3; color: black;"> </span><span style="background-color: #7fbe7f; color: black;">us</span><span style="background-color: #7fbe7f; color: black;"> </span><span style="background-color: #e0eee0; color: black;">do</span><span style="background-color: #e0eee0; color: black;"> </span><span style="background-color: #088408; color: black;">things</span><span style="background-color: #088408; color: black;"> </span><span style="background-color: #008000; color: black;">like</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #028102; color: black;">finding</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #eaf2ea; color: black;">answers</span><span style="background-color: #eaf2ea; color: black;"> </span><span style="background-color: #148a14; color: black;">to</span><span style="background-color: #148a14; color: black;"> </span><span style="background-color: #4da64d; color: black;">questions,</span><span style="background-color: #4da64d; color: black;"> </span><span style="background-color: #018001; color: black;">predicting</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #008000; color: black;">what</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">might</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #92c892; color: black;">happen</span><span style="background-color: #92c892; color: black;"> </span><span style="background-color: #018001; color: black;">next,</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #319831; color: black;">and</span><span style="background-color: #319831; color: black;"> </span><span style="background-color: #87c287; color: black;">making</span><span style="background-color: #87c287; color: black;"> </span><span style="background-color: #359a35; color: black;">decisions.</span><span style="background-color: #359a35; color: black;"> </span><span style="background-color: #028102; color: black;">It's</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #9ece9e; color: black;">like</span><span style="background-color: #9ece9e; color: black;"> </span><span style="background-color: #379b37; color: black;">having</span><span style="background-color: #379b37; color: black;"> </span><span style="background-color: #86c286; color: black;">a</span><span style="background-color: #86c286; color: black;"> </span><span style="background-color: #7abc7a; color: black;">really</span><span style="background-color: #7abc7a; color: black;"> </span><span style="background-color: #2c962c; color: black;">smart</span><span style="background-color: #2c962c; color: black;"> </span><span style="background-color: #289428; color: black;">friend</span><span style="background-color: #289428; color: black;"> </span><span style="background-color: #b3d8b3; color: black;">who</span><span style="background-color: #b3d8b3; color: black;"> </span><span style="background-color: #e5f0e5; color: black;">knows</span><span style="background-color: #e5f0e5; color: black;"> </span><span style="background-color: #178b17; color: black;">so</span><span style="background-color: #178b17; color: black;"> </span><span style="background-color: #229122; color: black;">many</span><span style="background-color: #229122; color: black;"> </span><span style="background-color: #61af61; color: black;">things!</span><span style="background-color: #61af61; color: black;"> </span></pre>
</div>
</div>
<div class="cell" data-execution_count="32">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1">response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].logprobs.content[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># first 5 tokens</span></span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="32">
<pre><code>[ChatCompletionTokenLogprob(token='Machine', bytes=[77, 97, 99, 104, 105, 110, 101], logprob=-0.0015492603, top_logprobs=[]),
 ChatCompletionTokenLogprob(token=' learning', bytes=[32, 108, 101, 97, 114, 110, 105, 110, 103], logprob=-0.0005857991, top_logprobs=[]),
 ChatCompletionTokenLogprob(token=' is', bytes=[32, 105, 115], logprob=-0.00047642877, top_logprobs=[]),
 ChatCompletionTokenLogprob(token=' when', bytes=[32, 119, 104, 101, 110], logprob=-1.7854097, top_logprobs=[]),
 ChatCompletionTokenLogprob(token=' computers', bytes=[32, 99, 111, 109, 112, 117, 116, 101, 114, 115], logprob=-0.25018257, top_logprobs=[])]</code></pre>
</div>
</div>
<div class="cell" data-execution_count="33">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1">probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb42-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> res <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].logprobs.content:</span>
<span id="cb42-3">    probs.append(np.exp(res.logprob))</span>
<span id="cb42-4"></span>
<span id="cb42-5">plt.hist(probs)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb42-6">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Probability"</span>)</span>
<span id="cb42-7">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>)</span>
<span id="cb42-8">plt.show()</span>
<span id="cb42-9"></span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature_files/figure-html/cell-34-output-1.png" class="img-fluid"></p>
</div>
</div>
</section>
</section>
<section id="low-top-p-more-deterministic" class="level1">
<h1>Low Top-P ( More Deterministic)</h1>
<div class="cell" data-execution_count="34">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1"></span>
<span id="cb43-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb43-3">  model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb43-4">  messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb43-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a helpful assistant."</span>},</span>
<span id="cb43-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: question}</span>
<span id="cb43-7">  ],</span>
<span id="cb43-8">  logprobs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb43-9">  top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb43-10">  seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed</span>
<span id="cb43-11">)</span></code></pre></div>
</div>
<div class="cell" data-execution_count="35">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1">highlight_openai_response(response)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="font-family: inherit; white-space: pre-wrap; word-break: break-all;"><span style="background-color: #008000; color: black;">Machine</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">learning</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">is</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #3f9f3f; color: black;">like</span><span style="background-color: #3f9f3f; color: black;"> </span><span style="background-color: #9acb9a; color: black;">having</span><span style="background-color: #9acb9a; color: black;"> </span><span style="background-color: #008000; color: black;">a</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #91c791; color: black;">super</span><span style="background-color: #91c791; color: black;"> </span><span style="background-color: #0f870f; color: black;">smart</span><span style="background-color: #0f870f; color: black;"> </span><span style="background-color: #62b062; color: black;">robot</span><span style="background-color: #62b062; color: black;"> </span><span style="background-color: #1e8f1e; color: black;">friend</span><span style="background-color: #1e8f1e; color: black;"> </span><span style="background-color: #72b872; color: black;">that</span><span style="background-color: #72b872; color: black;"> </span><span style="background-color: #2a952a; color: black;">can</span><span style="background-color: #2a952a; color: black;"> </span><span style="background-color: #018001; color: black;">learn</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #61af61; color: black;">things</span><span style="background-color: #61af61; color: black;"> </span><span style="background-color: #65b265; color: black;">on</span><span style="background-color: #65b265; color: black;"> </span><span style="background-color: #008000; color: black;">its</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">own.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #198c19; color: black;">Just</span><span style="background-color: #198c19; color: black;"> </span><span style="background-color: #5cad5c; color: black;">like</span><span style="background-color: #5cad5c; color: black;"> </span><span style="background-color: #008000; color: black;">how</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #8cc58c; color: black;">you</span><span style="background-color: #8cc58c; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">learn</span><span style="background-color: #1d8e1d; color: black;"> </span><span style="background-color: #028102; color: black;">new</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #3d9e3d; color: black;">things</span><span style="background-color: #3d9e3d; color: black;"> </span><span style="background-color: #038103; color: black;">by</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #289328; color: black;">practicing</span><span style="background-color: #289328; color: black;"> </span><span style="background-color: #53a953; color: black;">and</span><span style="background-color: #53a953; color: black;"> </span><span style="background-color: #47a347; color: black;">trying</span><span style="background-color: #47a347; color: black;"> </span><span style="background-color: #40a040; color: black;">different</span><span style="background-color: #40a040; color: black;"> </span><span style="background-color: #40a040; color: black;">things,</span><span style="background-color: #40a040; color: black;"> </span><span style="background-color: #42a042; color: black;">machine</span><span style="background-color: #42a042; color: black;"> </span><span style="background-color: #008000; color: black;">learning</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #359a35; color: black;">is</span><span style="background-color: #359a35; color: black;"> </span><span style="background-color: #008000; color: black;">when</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #70b770; color: black;">a</span><span style="background-color: #70b770; color: black;"> </span><span style="background-color: #349a34; color: black;">computer</span><span style="background-color: #349a34; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">program</span><span style="background-color: #1d8e1d; color: black;"> </span><span style="background-color: #028102; color: black;">learns</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #48a348; color: black;">from</span><span style="background-color: #48a348; color: black;"> </span><span style="background-color: #4ba54a; color: black;">lots</span><span style="background-color: #4ba54a; color: black;"> </span><span style="background-color: #97ca97; color: black;">of</span><span style="background-color: #97ca97; color: black;"> </span><span style="background-color: #359a35; color: black;">examples</span><span style="background-color: #359a35; color: black;"> </span><span style="background-color: #2b952b; color: black;">and</span><span style="background-color: #2b952b; color: black;"> </span><span style="background-color: #40a040; color: black;">gets</span><span style="background-color: #40a040; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">better</span><span style="background-color: #1d8e1d; color: black;"> </span><span style="background-color: #1e8f1e; color: black;">at</span><span style="background-color: #1e8f1e; color: black;"> </span><span style="background-color: #0d860d; color: black;">doing</span><span style="background-color: #0d860d; color: black;"> </span><span style="background-color: #0c860c; color: black;">a</span><span style="background-color: #0c860c; color: black;"> </span><span style="background-color: #1b8d1b; color: black;">task.</span><span style="background-color: #1b8d1b; color: black;"> </span><span style="background-color: #6eb66e; color: black;">For</span><span style="background-color: #6eb66e; color: black;"> </span><span style="background-color: #349934; color: black;">example,</span><span style="background-color: #349934; color: black;"> </span><span style="background-color: #71b771; color: black;">if</span><span style="background-color: #71b771; color: black;"> </span><span style="background-color: #84c084; color: black;">you</span><span style="background-color: #84c084; color: black;"> </span><span style="background-color: #008000; color: black;">show</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #50a750; color: black;">robot</span><span style="background-color: #50a750; color: black;"> </span><span style="background-color: #3d9e3d; color: black;">friend</span><span style="background-color: #3d9e3d; color: black;"> </span><span style="background-color: #2d962d; color: black;">lots</span><span style="background-color: #2d962d; color: black;"> </span><span style="background-color: #339933; color: black;">of</span><span style="background-color: #339933; color: black;"> </span><span style="background-color: #90c790; color: black;">pictures</span><span style="background-color: #90c790; color: black;"> </span><span style="background-color: #148a14; color: black;">of</span><span style="background-color: #148a14; color: black;"> </span><span style="background-color: #399c39; color: black;">cats</span><span style="background-color: #399c39; color: black;"> </span><span style="background-color: #008000; color: black;">and</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">dogs,</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">it</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #50a750; color: black;">can</span><span style="background-color: #50a750; color: black;"> </span><span style="background-color: #108810; color: black;">learn</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #0f870f; color: black;">to</span><span style="background-color: #0f870f; color: black;"> </span><span style="background-color: #349a34; color: black;">tell</span><span style="background-color: #349a34; color: black;"> </span><span style="background-color: #018001; color: black;">the</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #1c8e1c; color: black;">difference</span><span style="background-color: #1c8e1c; color: black;"> </span><span style="background-color: #078407; color: black;">between</span><span style="background-color: #078407; color: black;"> </span><span style="background-color: #088408; color: black;">them.</span><span style="background-color: #088408; color: black;"> </span><span style="background-color: #0b850b; color: black;">It's</span><span style="background-color: #0b850b; color: black;"> </span><span style="background-color: #289328; color: black;">like</span><span style="background-color: #289328; color: black;"> </span><span style="background-color: #008000; color: black;">magic,</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #038103; color: black;">but</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #088408; color: black;">really</span><span style="background-color: #088408; color: black;"> </span><span style="background-color: #6ab46a; color: black;">it's</span><span style="background-color: #6ab46a; color: black;"> </span><span style="background-color: #66b266; color: black;">just</span><span style="background-color: #66b266; color: black;"> </span><span style="background-color: #6ab46a; color: black;">the</span><span style="background-color: #6ab46a; color: black;"> </span><span style="background-color: #4da64d; color: black;">computer</span><span style="background-color: #4da64d; color: black;"> </span><span style="background-color: #90c790; color: black;">using</span><span style="background-color: #90c790; color: black;"> </span><span style="background-color: #6cb56c; color: black;">math</span><span style="background-color: #6cb56c; color: black;"> </span><span style="background-color: #2f972f; color: black;">and</span><span style="background-color: #2f972f; color: black;"> </span><span style="background-color: #5bad5b; color: black;">patterns</span><span style="background-color: #5bad5b; color: black;"> </span><span style="background-color: #088408; color: black;">to</span><span style="background-color: #088408; color: black;"> </span><span style="background-color: #018001; color: black;">figure</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #0e870e; color: black;">things</span><span style="background-color: #0e870e; color: black;"> </span><span style="background-color: #7fbe7f; color: black;">out.</span><span style="background-color: #7fbe7f; color: black;"> </span></pre>
</div>
</div>
<div class="cell" data-execution_count="36">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1">probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb45-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> res <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> response.choices[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].logprobs.content:</span>
<span id="cb45-3">    probs.append(np.exp(res.logprob))</span>
<span id="cb45-4"></span>
<span id="cb45-5">plt.hist(probs)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb45-6">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Probability"</span>)</span>
<span id="cb45-7">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Count"</span>)</span>
<span id="cb45-8">plt.show()</span>
<span id="cb45-9"></span></code></pre></div>
<div class="cell-output cell-output-display">
<p><img src="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature_files/figure-html/cell-37-output-1.png" class="img-fluid"></p>
</div>
</div>
</section>
<section id="openai-recommendations-for-top-p" class="level1">
<h1>OpenAI Recommendations for Top-P</h1>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature_files/figure-html/b4a4ee2b-1-image.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image.png</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature_files/figure-html/c9db31b4-1-image-2.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image-2.png</figcaption>
</figure>
</div>
</section>
<section id="interactions-between-temperature-and-top-p" class="level1">
<h1>Interactions between Temperature and Top-P</h1>
<p>Let’s experiment the interactions between temperature and top-p</p>
<ul>
<li>High Temperature and High Top-P</li>
<li>High Temperature and Low Top-P</li>
<li>Low Temperature and High Top-P</li>
<li>Low Temperature and Low Top-P</li>
</ul>
<section id="high-temperature-high-top-p" class="level3">
<h3 class="anchored" data-anchor-id="high-temperature-high-top-p">High Temperature, High Top-P</h3>
<div class="cell" data-execution_count="53">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1"></span>
<span id="cb46-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb46-3">  model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb46-4">  messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb46-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a helpful assistant."</span>},</span>
<span id="cb46-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: question}</span>
<span id="cb46-7">  ],</span>
<span id="cb46-8">  logprobs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb46-9">  top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb46-10">  temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.6</span>,</span>
<span id="cb46-11">  seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed</span>
<span id="cb46-12">)</span>
<span id="cb46-13">highlight_openai_response(response)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="font-family: inherit; white-space: pre-wrap; word-break: break-all;"><span style="background-color: #008000; color: black;">Machine</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">learning</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">is</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #c3e0c3; color: black;">when</span><span style="background-color: #c3e0c3; color: black;"> </span><span style="background-color: #eaf2ea; color: black;">computer</span><span style="background-color: #eaf2ea; color: black;"> </span><span style="background-color: #068306; color: black;">programs</span><span style="background-color: #068306; color: black;"> </span><span style="background-color: #a1cfa1; color: black;">can</span><span style="background-color: #a1cfa1; color: black;"> </span><span style="background-color: #058205; color: black;">learn</span><span style="background-color: #058205; color: black;"> </span><span style="background-color: #57ab57; color: black;">and</span><span style="background-color: #57ab57; color: black;"> </span><span style="background-color: #c9e2c8; color: black;">improve</span><span style="background-color: #c9e2c8; color: black;"> </span><span style="background-color: #95c995; color: black;">by</span><span style="background-color: #95c995; color: black;"> </span><span style="background-color: #008000; color: black;">themselves.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000;"> </span><br><span style="background-color: #008000;"> </span><br><span style="background-color: #a1cfa1; color: black;">Imagine</span><span style="background-color: #a1cfa1; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">you</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #209020; color: black;">have</span><span style="background-color: #209020; color: black;"> </span><span style="background-color: #048204; color: black;">a</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #038103; color: black;">puzzle</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #008000; color: black;">toy</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">with</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">pictures</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #7abc7a; color: black;">on</span><span style="background-color: #7abc7a; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">it.</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #aad3aa; color: black;">At</span><span style="background-color: #aad3aa; color: black;"> </span><span style="background-color: #0b850b; color: black;">first</span><span style="background-color: #0b850b; color: black;"> </span><span style="background-color: #389b38; color: black;">it's</span><span style="background-color: #389b38; color: black;"> </span><span style="background-color: #359a35; color: black;">all</span><span style="background-color: #359a35; color: black;"> </span><span style="background-color: #018001; color: black;">mixed</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">up</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #369b36; color: black;">and</span><span style="background-color: #369b36; color: black;"> </span><span style="background-color: #6db66d; color: black;">you</span><span style="background-color: #6db66d; color: black;"> </span><span style="background-color: #198c19; color: black;">don't</span><span style="background-color: #198c19; color: black;"> </span><span style="background-color: #008000; color: black;">know</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #52a852; color: black;">how</span><span style="background-color: #52a852; color: black;"> </span><span style="background-color: #068306; color: black;">to</span><span style="background-color: #068306; color: black;"> </span><span style="background-color: #239123; color: black;">make</span><span style="background-color: #239123; color: black;"> </span><span style="background-color: #008000; color: black;">it</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">right.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #9bcc9b; color: black;">When</span><span style="background-color: #9bcc9b; color: black;"> </span><span style="background-color: #058205; color: black;">you</span><span style="background-color: #058205; color: black;"> </span><span style="background-color: #eaf2ea; color: black;">start</span><span style="background-color: #eaf2ea; color: black;"> </span><span style="background-color: #c9e2c8; color: black;">solving</span><span style="background-color: #c9e2c8; color: black;"> </span><span style="background-color: #82c082; color: black;">it</span><span style="background-color: #82c082; color: black;"> </span><span style="background-color: #008000; color: black;">a</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">few</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #018001; color: black;">times,</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #a3d0a3; color: black;">you</span><span style="background-color: #a3d0a3; color: black;"> </span><span style="background-color: #e8f2e8; color: black;">start</span><span style="background-color: #e8f2e8; color: black;"> </span><span style="background-color: #2c962c; color: black;">getting</span><span style="background-color: #2c962c; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">better</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #339933; color: black;">and</span><span style="background-color: #339933; color: black;"> </span><span style="background-color: #008000; color: black;">can</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #018001; color: black;">finish</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #0f870f; color: black;">the</span><span style="background-color: #0f870f; color: black;"> </span><span style="background-color: #b2d7b1; color: black;">puzzle</span><span style="background-color: #b2d7b1; color: black;"> </span><span style="background-color: #ddecdd; color: black;">faster.</span><span style="background-color: #ddecdd; color: black;"> </span><span style="background-color: #ddecdd;"> </span><br><span style="background-color: #ddecdd;"> </span><br><span style="background-color: #0a850a; color: black;">Machine</span><span style="background-color: #0a850a; color: black;"> </span><span style="background-color: #349a34; color: black;">learning</span><span style="background-color: #349a34; color: black;"> </span><span style="background-color: #e2efe2; color: black;">works</span><span style="background-color: #e2efe2; color: black;"> </span><span style="background-color: #d6e9d6; color: black;">a</span><span style="background-color: #d6e9d6; color: black;"> </span><span style="background-color: #e5f0e5; color: black;">bit</span><span style="background-color: #e5f0e5; color: black;"> </span><span style="background-color: #028102; color: black;">like</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #1b8d1b; color: black;">that.</span><span style="background-color: #1b8d1b; color: black;"> </span><span style="background-color: #118911; color: black;">It's</span><span style="background-color: #118911; color: black;"> </span><span style="background-color: #cbe4cb; color: black;">like</span><span style="background-color: #cbe4cb; color: black;"> </span><span style="background-color: #47a347; color: black;">a</span><span style="background-color: #47a347; color: black;"> </span><span style="background-color: #008000; color: black;">really</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #d9ead9; color: black;">smart</span><span style="background-color: #d9ead9; color: black;"> </span><span style="background-color: #d7e9d7; color: black;">program</span><span style="background-color: #d7e9d7; color: black;"> </span><span style="background-color: #138913; color: black;">that</span><span style="background-color: #138913; color: black;"> </span><span style="background-color: #008000; color: black;">learns</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #048204; color: black;">from</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #309730; color: black;">doing</span><span style="background-color: #309730; color: black;"> </span><span style="background-color: #cee5ce; color: black;">things</span><span style="background-color: #cee5ce; color: black;"> </span><span style="background-color: #229122; color: black;">over</span><span style="background-color: #229122; color: black;"> </span><span style="background-color: #74b974; color: black;">and</span><span style="background-color: #74b974; color: black;"> </span><span style="background-color: #94c994; color: black;">over</span><span style="background-color: #94c994; color: black;"> </span><span style="background-color: #eaf2ea; color: black;">again.</span><span style="background-color: #eaf2ea; color: black;"> </span><span style="background-color: #088408; color: black;">It</span><span style="background-color: #088408; color: black;"> </span><span style="background-color: #e8f2e8; color: black;">gets</span><span style="background-color: #e8f2e8; color: black;"> </span><span style="background-color: #008000; color: black;">more</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #deedde; color: black;">and</span><span style="background-color: #deedde; color: black;"> </span><span style="background-color: #309730; color: black;">more</span><span style="background-color: #309730; color: black;"> </span><span style="background-color: #b4d8b4; color: black;">powerful,</span><span style="background-color: #b4d8b4; color: black;"> </span><span style="background-color: #259225; color: black;">by</span><span style="background-color: #259225; color: black;"> </span><span style="background-color: #2a952a; color: black;">learning</span><span style="background-color: #2a952a; color: black;"> </span><span style="background-color: #008000; color: black;">from</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">its</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #239123; color: black;">own</span><span style="background-color: #239123; color: black;"> </span><span style="background-color: #1f8f1f; color: black;">experiences!</span><span style="background-color: #1f8f1f; color: black;"> </span><span style="background-color: #1a8d1a; color: black;">So</span><span style="background-color: #1a8d1a; color: black;"> </span><span style="background-color: #b0d6b0; color: black;">just</span><span style="background-color: #b0d6b0; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">like</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #178b17; color: black;">you,</span><span style="background-color: #178b17; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">computer</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #e3efe3; color: black;">program</span><span style="background-color: #e3efe3; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">gets</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #badbba; color: black;">better</span><span style="background-color: #badbba; color: black;"> </span><span style="background-color: #178b17; color: black;">and</span><span style="background-color: #178b17; color: black;"> </span><span style="background-color: #188c18; color: black;">better</span><span style="background-color: #188c18; color: black;"> </span><span style="background-color: #add5ad; color: black;">at</span><span style="background-color: #add5ad; color: black;"> </span><span style="background-color: #c2dfc2; color: black;">solving</span><span style="background-color: #c2dfc2; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">the</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #c9e2c8; color: black;">problems</span><span style="background-color: #c9e2c8; color: black;"> </span><span style="background-color: #d1e6d1; color: black;">it</span><span style="background-color: #d1e6d1; color: black;"> </span><span style="background-color: #008000; color: black;">faces.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #1a8d1a; color: black;">Isn’t</span><span style="background-color: #1a8d1a; color: black;"> </span><span style="background-color: #dbebdb; color: black;">that</span><span style="background-color: #dbebdb; color: black;"> </span><span style="background-color: #84c184; color: black;">amazing?!</span><span style="background-color: #84c184; color: black;"> </span></pre>
</div>
</div>
</section>
<section id="high-temperature-low-top-p" class="level3">
<h3 class="anchored" data-anchor-id="high-temperature-low-top-p">High Temperature, Low Top-P</h3>
<div class="cell" data-execution_count="38">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1"></span>
<span id="cb47-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb47-3">  model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb47-4">  messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb47-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a helpful assistant."</span>},</span>
<span id="cb47-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: question}</span>
<span id="cb47-7">  ],</span>
<span id="cb47-8">  logprobs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb47-9">  top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb47-10">  temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,</span>
<span id="cb47-11">  seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed</span>
<span id="cb47-12">)</span>
<span id="cb47-13">highlight_openai_response(response)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="font-family: inherit; white-space: pre-wrap; word-break: break-all;"><span style="background-color: #008000; color: black;">Machine</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">learning</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">is</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #3f9f3f; color: black;">like</span><span style="background-color: #3f9f3f; color: black;"> </span><span style="background-color: #9bcc9b; color: black;">having</span><span style="background-color: #9bcc9b; color: black;"> </span><span style="background-color: #008000; color: black;">a</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #91c791; color: black;">super</span><span style="background-color: #91c791; color: black;"> </span><span style="background-color: #108810; color: black;">smart</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #63b163; color: black;">robot</span><span style="background-color: #63b163; color: black;"> </span><span style="background-color: #1e8f1e; color: black;">friend</span><span style="background-color: #1e8f1e; color: black;"> </span><span style="background-color: #72b872; color: black;">that</span><span style="background-color: #72b872; color: black;"> </span><span style="background-color: #2a952a; color: black;">can</span><span style="background-color: #2a952a; color: black;"> </span><span style="background-color: #018001; color: black;">learn</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #61af61; color: black;">things</span><span style="background-color: #61af61; color: black;"> </span><span style="background-color: #65b265; color: black;">on</span><span style="background-color: #65b265; color: black;"> </span><span style="background-color: #008000; color: black;">its</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">own.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #198c19; color: black;">Just</span><span style="background-color: #198c19; color: black;"> </span><span style="background-color: #5cad5c; color: black;">like</span><span style="background-color: #5cad5c; color: black;"> </span><span style="background-color: #008000; color: black;">how</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #8dc58d; color: black;">you</span><span style="background-color: #8dc58d; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">learn</span><span style="background-color: #1d8e1d; color: black;"> </span><span style="background-color: #028102; color: black;">new</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #3a9c3a; color: black;">things</span><span style="background-color: #3a9c3a; color: black;"> </span><span style="background-color: #038103; color: black;">by</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #279327; color: black;">practicing</span><span style="background-color: #279327; color: black;"> </span><span style="background-color: #53a953; color: black;">and</span><span style="background-color: #53a953; color: black;"> </span><span style="background-color: #46a246; color: black;">trying</span><span style="background-color: #46a246; color: black;"> </span><span style="background-color: #40a040; color: black;">different</span><span style="background-color: #40a040; color: black;"> </span><span style="background-color: #41a041; color: black;">things,</span><span style="background-color: #41a041; color: black;"> </span><span style="background-color: #43a143; color: black;">machine</span><span style="background-color: #43a143; color: black;"> </span><span style="background-color: #008000; color: black;">learning</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #359a35; color: black;">is</span><span style="background-color: #359a35; color: black;"> </span><span style="background-color: #008000; color: black;">when</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #70b770; color: black;">a</span><span style="background-color: #70b770; color: black;"> </span><span style="background-color: #359a35; color: black;">computer</span><span style="background-color: #359a35; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">program</span><span style="background-color: #1d8e1d; color: black;"> </span><span style="background-color: #028102; color: black;">learns</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #48a348; color: black;">from</span><span style="background-color: #48a348; color: black;"> </span><span style="background-color: #4ba54a; color: black;">lots</span><span style="background-color: #4ba54a; color: black;"> </span><span style="background-color: #98ca98; color: black;">of</span><span style="background-color: #98ca98; color: black;"> </span><span style="background-color: #359a35; color: black;">examples</span><span style="background-color: #359a35; color: black;"> </span><span style="background-color: #2b952b; color: black;">and</span><span style="background-color: #2b952b; color: black;"> </span><span style="background-color: #3e9e3e; color: black;">gets</span><span style="background-color: #3e9e3e; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">better</span><span style="background-color: #1d8e1d; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">at</span><span style="background-color: #1d8e1d; color: black;"> </span><span style="background-color: #0d860d; color: black;">doing</span><span style="background-color: #0d860d; color: black;"> </span><span style="background-color: #0b850b; color: black;">a</span><span style="background-color: #0b850b; color: black;"> </span><span style="background-color: #1b8d1b; color: black;">task.</span><span style="background-color: #1b8d1b; color: black;"> </span><span style="background-color: #6db56d; color: black;">For</span><span style="background-color: #6db56d; color: black;"> </span><span style="background-color: #349934; color: black;">example,</span><span style="background-color: #349934; color: black;"> </span><span style="background-color: #70b770; color: black;">if</span><span style="background-color: #70b770; color: black;"> </span><span style="background-color: #84c084; color: black;">you</span><span style="background-color: #84c084; color: black;"> </span><span style="background-color: #008000; color: black;">show</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #4fa74f; color: black;">robot</span><span style="background-color: #4fa74f; color: black;"> </span><span style="background-color: #3d9e3d; color: black;">friend</span><span style="background-color: #3d9e3d; color: black;"> </span><span style="background-color: #2c962c; color: black;">lots</span><span style="background-color: #2c962c; color: black;"> </span><span style="background-color: #339933; color: black;">of</span><span style="background-color: #339933; color: black;"> </span><span style="background-color: #84c184; color: black;">pictures</span><span style="background-color: #84c184; color: black;"> </span><span style="background-color: #168b16; color: black;">of</span><span style="background-color: #168b16; color: black;"> </span><span style="background-color: #389b38; color: black;">cats</span><span style="background-color: #389b38; color: black;"> </span><span style="background-color: #008000; color: black;">and</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">dogs,</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">it</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #51a851; color: black;">can</span><span style="background-color: #51a851; color: black;"> </span><span style="background-color: #118811; color: black;">learn</span><span style="background-color: #118811; color: black;"> </span><span style="background-color: #108810; color: black;">to</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #349a34; color: black;">tell</span><span style="background-color: #349a34; color: black;"> </span><span style="background-color: #018001; color: black;">the</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #1a8d1a; color: black;">difference</span><span style="background-color: #1a8d1a; color: black;"> </span><span style="background-color: #078407; color: black;">between</span><span style="background-color: #078407; color: black;"> </span><span style="background-color: #088408; color: black;">them.</span><span style="background-color: #088408; color: black;"> </span><span style="background-color: #098509; color: black;">It's</span><span style="background-color: #098509; color: black;"> </span><span style="background-color: #259225; color: black;">like</span><span style="background-color: #259225; color: black;"> </span><span style="background-color: #008000; color: black;">magic,</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #038103; color: black;">but</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #088408; color: black;">really</span><span style="background-color: #088408; color: black;"> </span><span style="background-color: #66b266; color: black;">it's</span><span style="background-color: #66b266; color: black;"> </span><span style="background-color: #65b265; color: black;">just</span><span style="background-color: #65b265; color: black;"> </span><span style="background-color: #72b872; color: black;">the</span><span style="background-color: #72b872; color: black;"> </span><span style="background-color: #49a449; color: black;">computer</span><span style="background-color: #49a449; color: black;"> </span><span style="background-color: #90c790; color: black;">using</span><span style="background-color: #90c790; color: black;"> </span><span style="background-color: #70b770; color: black;">math</span><span style="background-color: #70b770; color: black;"> </span><span style="background-color: #2f972f; color: black;">and</span><span style="background-color: #2f972f; color: black;"> </span><span style="background-color: #62b062; color: black;">patterns</span><span style="background-color: #62b062; color: black;"> </span><span style="background-color: #078407; color: black;">to</span><span style="background-color: #078407; color: black;"> </span><span style="background-color: #018001; color: black;">figure</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #0a850a; color: black;">things</span><span style="background-color: #0a850a; color: black;"> </span><span style="background-color: #7abc7a; color: black;">out.</span><span style="background-color: #7abc7a; color: black;"> </span></pre>
</div>
</div>
</section>
<section id="low-temperature-high-top-p" class="level3">
<h3 class="anchored" data-anchor-id="low-temperature-high-top-p">Low Temperature, High Top-P</h3>
<div class="cell" data-execution_count="39">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb48-1"></span>
<span id="cb48-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb48-3">  model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb48-4">  messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb48-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a helpful assistant."</span>},</span>
<span id="cb48-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: question}</span>
<span id="cb48-7">  ],</span>
<span id="cb48-8">  logprobs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb48-9">  top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb48-10">  temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb48-11">  seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed</span>
<span id="cb48-12">)</span>
<span id="cb48-13">highlight_openai_response(response)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="font-family: inherit; white-space: pre-wrap; word-break: break-all;"><span style="background-color: #008000; color: black;">Machine</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">learning</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">is</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #3f9f3f; color: black;">like</span><span style="background-color: #3f9f3f; color: black;"> </span><span style="background-color: #98ca98; color: black;">having</span><span style="background-color: #98ca98; color: black;"> </span><span style="background-color: #008000; color: black;">a</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #90c790; color: black;">super</span><span style="background-color: #90c790; color: black;"> </span><span style="background-color: #108810; color: black;">smart</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #63b163; color: black;">robot</span><span style="background-color: #63b163; color: black;"> </span><span style="background-color: #1e8f1e; color: black;">friend</span><span style="background-color: #1e8f1e; color: black;"> </span><span style="background-color: #6eb66e; color: black;">that</span><span style="background-color: #6eb66e; color: black;"> </span><span style="background-color: #2e972e; color: black;">can</span><span style="background-color: #2e972e; color: black;"> </span><span style="background-color: #018001; color: black;">learn</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #5dae5d; color: black;">things</span><span style="background-color: #5dae5d; color: black;"> </span><span style="background-color: #66b266; color: black;">on</span><span style="background-color: #66b266; color: black;"> </span><span style="background-color: #008000; color: black;">its</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">own.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #198c19; color: black;">It's</span><span style="background-color: #198c19; color: black;"> </span><span style="background-color: #bbdcbb; color: black;">like</span><span style="background-color: #bbdcbb; color: black;"> </span><span style="background-color: #59ac59; color: black;">when</span><span style="background-color: #59ac59; color: black;"> </span><span style="background-color: #7bbc7b; color: black;">you</span><span style="background-color: #7bbc7b; color: black;"> </span><span style="background-color: #319831; color: black;">play</span><span style="background-color: #319831; color: black;"> </span><span style="background-color: #018001; color: black;">a</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #75b975; color: black;">game</span><span style="background-color: #75b975; color: black;"> </span><span style="background-color: #44a144; color: black;">and</span><span style="background-color: #44a144; color: black;"> </span><span style="background-color: #209020; color: black;">get</span><span style="background-color: #209020; color: black;"> </span><span style="background-color: #3e9e3e; color: black;">better</span><span style="background-color: #3e9e3e; color: black;"> </span><span style="background-color: #89c389; color: black;">each</span><span style="background-color: #89c389; color: black;"> </span><span style="background-color: #018001; color: black;">time</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #6cb56c; color: black;">because</span><span style="background-color: #6cb56c; color: black;"> </span><span style="background-color: #008000; color: black;">you</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #68b368; color: black;">remember</span><span style="background-color: #68b368; color: black;"> </span><span style="background-color: #008000; color: black;">what</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #0c860c; color: black;">you</span><span style="background-color: #0c860c; color: black;"> </span><span style="background-color: #0a850a; color: black;">did</span><span style="background-color: #0a850a; color: black;"> </span><span style="background-color: #88c388; color: black;">before.</span><span style="background-color: #88c388; color: black;"> </span><span style="background-color: #018001; color: black;">But</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #178b17; color: black;">instead</span><span style="background-color: #178b17; color: black;"> </span><span style="background-color: #048204; color: black;">of</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #57ab57; color: black;">a</span><span style="background-color: #57ab57; color: black;"> </span><span style="background-color: #389b38; color: black;">game,</span><span style="background-color: #389b38; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #319831; color: black;">robot</span><span style="background-color: #319831; color: black;"> </span><span style="background-color: #0b850b; color: black;">friend</span><span style="background-color: #0b850b; color: black;"> </span><span style="background-color: #008000; color: black;">learns</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #229122; color: black;">from</span><span style="background-color: #229122; color: black;"> </span><span style="background-color: #048204; color: black;">lots</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #118811; color: black;">of</span><span style="background-color: #118811; color: black;"> </span><span style="background-color: #269226; color: black;">information</span><span style="background-color: #269226; color: black;"> </span><span style="background-color: #0a850a; color: black;">and</span><span style="background-color: #0a850a; color: black;"> </span><span style="background-color: #259225; color: black;">figures</span><span style="background-color: #259225; color: black;"> </span><span style="background-color: #61b061; color: black;">out</span><span style="background-color: #61b061; color: black;"> </span><span style="background-color: #1c8e1c; color: black;">patterns</span><span style="background-color: #1c8e1c; color: black;"> </span><span style="background-color: #3c9d3c; color: black;">and</span><span style="background-color: #3c9d3c; color: black;"> </span><span style="background-color: #86c286; color: black;">rules.</span><span style="background-color: #86c286; color: black;"> </span><span style="background-color: #058205; color: black;">Then</span><span style="background-color: #058205; color: black;"> </span><span style="background-color: #48a348; color: black;">it</span><span style="background-color: #48a348; color: black;"> </span><span style="background-color: #91c791; color: black;">can</span><span style="background-color: #91c791; color: black;"> </span><span style="background-color: #078407; color: black;">use</span><span style="background-color: #078407; color: black;"> </span><span style="background-color: #5eae5e; color: black;">what</span><span style="background-color: #5eae5e; color: black;"> </span><span style="background-color: #6fb76f; color: black;">it</span><span style="background-color: #6fb76f; color: black;"> </span><span style="background-color: #77ba77; color: black;">learned</span><span style="background-color: #77ba77; color: black;"> </span><span style="background-color: #349934; color: black;">to</span><span style="background-color: #349934; color: black;"> </span><span style="background-color: #068306; color: black;">make</span><span style="background-color: #068306; color: black;"> </span><span style="background-color: #67b267; color: black;">predictions</span><span style="background-color: #67b267; color: black;"> </span><span style="background-color: #008000; color: black;">or</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #068306; color: black;">do</span><span style="background-color: #068306; color: black;"> </span><span style="background-color: #008000; color: black;">tasks</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #95c995; color: black;">without</span><span style="background-color: #95c995; color: black;"> </span><span style="background-color: #3e9e3e; color: black;">being</span><span style="background-color: #3e9e3e; color: black;"> </span><span style="background-color: #148a14; color: black;">told</span><span style="background-color: #148a14; color: black;"> </span><span style="background-color: #83c083; color: black;">exactly</span><span style="background-color: #83c083; color: black;"> </span><span style="background-color: #74b974; color: black;">what</span><span style="background-color: #74b974; color: black;"> </span><span style="background-color: #3e9e3e; color: black;">to</span><span style="background-color: #3e9e3e; color: black;"> </span><span style="background-color: #3a9c3a; color: black;">do.</span><span style="background-color: #3a9c3a; color: black;"> </span><span style="background-color: #028102; color: black;">It's</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #289428; color: black;">like</span><span style="background-color: #289428; color: black;"> </span><span style="background-color: #018001; color: black;">having</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #008000; color: black;">a</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">really</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #259225; color: black;">clever</span><span style="background-color: #259225; color: black;"> </span><span style="background-color: #279327; color: black;">friend</span><span style="background-color: #279327; color: black;"> </span><span style="background-color: #018001; color: black;">who</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #61af61; color: black;">can</span><span style="background-color: #61af61; color: black;"> </span><span style="background-color: #128912; color: black;">help</span><span style="background-color: #128912; color: black;"> </span><span style="background-color: #018001; color: black;">you</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #4ca54c; color: black;">with</span><span style="background-color: #4ca54c; color: black;"> </span><span style="background-color: #4ba54b; color: black;">all</span><span style="background-color: #4ba54b; color: black;"> </span><span style="background-color: #5cad5c; color: black;">sorts</span><span style="background-color: #5cad5c; color: black;"> </span><span style="background-color: #399c39; color: black;">of</span><span style="background-color: #399c39; color: black;"> </span><span style="background-color: #118911; color: black;">things!</span><span style="background-color: #118911; color: black;"> </span></pre>
</div>
</div>
</section>
<section id="low-temperature-low-top-p" class="level3">
<h3 class="anchored" data-anchor-id="low-temperature-low-top-p">Low Temperature, Low Top-P</h3>
<div class="cell" data-execution_count="40">
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1"></span>
<span id="cb49-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb49-3">  model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb49-4">  messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb49-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a helpful assistant."</span>},</span>
<span id="cb49-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: question}</span>
<span id="cb49-7">  ],</span>
<span id="cb49-8">  logprobs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb49-9">  top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb49-10">  temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb49-11">  seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed</span>
<span id="cb49-12">)</span>
<span id="cb49-13">highlight_openai_response(response)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="font-family: inherit; white-space: pre-wrap; word-break: break-all;"><span style="background-color: #008000; color: black;">Machine</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">learning</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">is</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #3f9f3f; color: black;">like</span><span style="background-color: #3f9f3f; color: black;"> </span><span style="background-color: #98ca98; color: black;">having</span><span style="background-color: #98ca98; color: black;"> </span><span style="background-color: #008000; color: black;">a</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #90c790; color: black;">super</span><span style="background-color: #90c790; color: black;"> </span><span style="background-color: #108810; color: black;">smart</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #63b163; color: black;">robot</span><span style="background-color: #63b163; color: black;"> </span><span style="background-color: #1e8f1e; color: black;">friend</span><span style="background-color: #1e8f1e; color: black;"> </span><span style="background-color: #6eb66e; color: black;">that</span><span style="background-color: #6eb66e; color: black;"> </span><span style="background-color: #2e972e; color: black;">can</span><span style="background-color: #2e972e; color: black;"> </span><span style="background-color: #018001; color: black;">learn</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #5dae5d; color: black;">things</span><span style="background-color: #5dae5d; color: black;"> </span><span style="background-color: #66b266; color: black;">on</span><span style="background-color: #66b266; color: black;"> </span><span style="background-color: #008000; color: black;">its</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">own.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #198c19; color: black;">Just</span><span style="background-color: #198c19; color: black;"> </span><span style="background-color: #5bad5b; color: black;">like</span><span style="background-color: #5bad5b; color: black;"> </span><span style="background-color: #008000; color: black;">how</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #8fc68f; color: black;">you</span><span style="background-color: #8fc68f; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">learn</span><span style="background-color: #1d8e1d; color: black;"> </span><span style="background-color: #028102; color: black;">new</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #399c39; color: black;">things</span><span style="background-color: #399c39; color: black;"> </span><span style="background-color: #038103; color: black;">by</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #279327; color: black;">practicing</span><span style="background-color: #279327; color: black;"> </span><span style="background-color: #58ab58; color: black;">and</span><span style="background-color: #58ab58; color: black;"> </span><span style="background-color: #46a246; color: black;">trying</span><span style="background-color: #46a246; color: black;"> </span><span style="background-color: #40a040; color: black;">different</span><span style="background-color: #40a040; color: black;"> </span><span style="background-color: #3f9f3f; color: black;">things,</span><span style="background-color: #3f9f3f; color: black;"> </span><span style="background-color: #42a042; color: black;">machine</span><span style="background-color: #42a042; color: black;"> </span><span style="background-color: #008000; color: black;">learning</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #369b36; color: black;">is</span><span style="background-color: #369b36; color: black;"> </span><span style="background-color: #008000; color: black;">when</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #70b770; color: black;">a</span><span style="background-color: #70b770; color: black;"> </span><span style="background-color: #349a34; color: black;">computer</span><span style="background-color: #349a34; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">program</span><span style="background-color: #1d8e1d; color: black;"> </span><span style="background-color: #028102; color: black;">learns</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #47a347; color: black;">from</span><span style="background-color: #47a347; color: black;"> </span><span style="background-color: #4ba54a; color: black;">lots</span><span style="background-color: #4ba54a; color: black;"> </span><span style="background-color: #99cb99; color: black;">of</span><span style="background-color: #99cb99; color: black;"> </span><span style="background-color: #359a35; color: black;">examples</span><span style="background-color: #359a35; color: black;"> </span><span style="background-color: #279327; color: black;">and</span><span style="background-color: #279327; color: black;"> </span><span style="background-color: #41a041; color: black;">gets</span><span style="background-color: #41a041; color: black;"> </span><span style="background-color: #1c8e1c; color: black;">better</span><span style="background-color: #1c8e1c; color: black;"> </span><span style="background-color: #1e8f1e; color: black;">at</span><span style="background-color: #1e8f1e; color: black;"> </span><span style="background-color: #0d860d; color: black;">doing</span><span style="background-color: #0d860d; color: black;"> </span><span style="background-color: #0c860c; color: black;">a</span><span style="background-color: #0c860c; color: black;"> </span><span style="background-color: #1b8d1b; color: black;">task.</span><span style="background-color: #1b8d1b; color: black;"> </span><span style="background-color: #6db66d; color: black;">For</span><span style="background-color: #6db66d; color: black;"> </span><span style="background-color: #349934; color: black;">example,</span><span style="background-color: #349934; color: black;"> </span><span style="background-color: #73b873; color: black;">if</span><span style="background-color: #73b873; color: black;"> </span><span style="background-color: #8ac48a; color: black;">you</span><span style="background-color: #8ac48a; color: black;"> </span><span style="background-color: #008000; color: black;">show</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #4fa74f; color: black;">robot</span><span style="background-color: #4fa74f; color: black;"> </span><span style="background-color: #3d9e3d; color: black;">friend</span><span style="background-color: #3d9e3d; color: black;"> </span><span style="background-color: #2e972e; color: black;">lots</span><span style="background-color: #2e972e; color: black;"> </span><span style="background-color: #339933; color: black;">of</span><span style="background-color: #339933; color: black;"> </span><span style="background-color: #84c184; color: black;">pictures</span><span style="background-color: #84c184; color: black;"> </span><span style="background-color: #168b16; color: black;">of</span><span style="background-color: #168b16; color: black;"> </span><span style="background-color: #379b37; color: black;">cats</span><span style="background-color: #379b37; color: black;"> </span><span style="background-color: #008000; color: black;">and</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">dogs,</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">it</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #51a851; color: black;">can</span><span style="background-color: #51a851; color: black;"> </span><span style="background-color: #108810; color: black;">learn</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #108810; color: black;">to</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #359a35; color: black;">tell</span><span style="background-color: #359a35; color: black;"> </span><span style="background-color: #018001; color: black;">the</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #1a8d1a; color: black;">difference</span><span style="background-color: #1a8d1a; color: black;"> </span><span style="background-color: #078407; color: black;">between</span><span style="background-color: #078407; color: black;"> </span><span style="background-color: #088408; color: black;">them.</span><span style="background-color: #088408; color: black;"> </span><span style="background-color: #098509; color: black;">It's</span><span style="background-color: #098509; color: black;"> </span><span style="background-color: #249224; color: black;">like</span><span style="background-color: #249224; color: black;"> </span><span style="background-color: #008000; color: black;">magic,</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #038103; color: black;">but</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #088408; color: black;">really</span><span style="background-color: #088408; color: black;"> </span><span style="background-color: #68b368; color: black;">it's</span><span style="background-color: #68b368; color: black;"> </span><span style="background-color: #66b266; color: black;">just</span><span style="background-color: #66b266; color: black;"> </span><span style="background-color: #78bb78; color: black;">a</span><span style="background-color: #78bb78; color: black;"> </span><span style="background-color: #49a449; color: black;">computer</span><span style="background-color: #49a449; color: black;"> </span><span style="background-color: #93c893; color: black;">using</span><span style="background-color: #93c893; color: black;"> </span><span style="background-color: #72b872; color: black;">math</span><span style="background-color: #72b872; color: black;"> </span><span style="background-color: #2c962c; color: black;">to</span><span style="background-color: #2c962c; color: black;"> </span><span style="background-color: #63b163; color: black;">learn</span><span style="background-color: #63b163; color: black;"> </span><span style="background-color: #078407; color: black;">and</span><span style="background-color: #078407; color: black;"> </span><span style="background-color: #018001; color: black;">make</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #0a850a; color: black;">decisions.</span><span style="background-color: #0a850a; color: black;"> </span></pre>
</div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature_files/figure-html/663a1ef7-1-image.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image.png</figcaption>
</figure>
</div>
</section>
</section>
<section id="frequency-penalty" class="level1">
<h1>Frequency Penalty</h1>
<p>Frequency Penalty is used to reduce the likelihood of a token being selected again if it has already appeared in the generated text.</p>
<p>It ranges from -2.0 to 2.0, where positive values discourage repetition by penalizing tokens that occur frequently, and negative values can increase the likelihood of repetition. This helps control the diversity of the generated content and prevent verbatim repetition.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature_files/figure-html/b694768e-1-image.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image.png</figcaption>
</figure>
</div>
<p>In the above example, we can see recommendations such as National Park appeared twice in the generated text. We can use frequency penalty to reduce the likelihood of a token being selected again if it has already appeared in the generated text.</p>
<div class="cell" data-execution_count="41">
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb50-1">question <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb50-2"></span>
<span id="cb50-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Write 10 slogans for ChatGPT</span></span>
<span id="cb50-4"></span>
<span id="cb50-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span></code></pre></div>
</div>
<div class="cell" data-execution_count="42">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1"></span>
<span id="cb51-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb51-3">  model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb51-4">  messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb51-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a helpful assistant."</span>},</span>
<span id="cb51-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: question}</span>
<span id="cb51-7">  ],</span>
<span id="cb51-8">  logprobs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb51-9">  temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb51-10">  seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed</span>
<span id="cb51-11">)</span>
<span id="cb51-12">highlight_openai_response(response)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="font-family: inherit; white-space: pre-wrap; word-break: break-all;"><span style="background-color: #008000; color: black;">1.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"Unleash</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #cce4cc; color: black;">Power</span><span style="background-color: #cce4cc; color: black;"> </span><span style="background-color: #008000; color: black;">of</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chat</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #5cad5c; color: black;">with</span><span style="background-color: #5cad5c; color: black;"> </span><span style="background-color: #b3d8b3; color: black;">ChatGPT!"</span><span style="background-color: #b3d8b3; color: black;"> </span><br><span style="background-color: #008000; color: black;">2.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #63b163; color: black;">"ChatGPT:</span><span style="background-color: #63b163; color: black;"> </span><span style="background-color: #b0d6b0; color: black;">Your</span><span style="background-color: #b0d6b0; color: black;"> </span><span style="background-color: #008000; color: black;">Trusted</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Conversational</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Companion!"</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #108810; color: black;">3.</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #008000; color: black;">"Get</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Instant</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Answers</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #53a953; color: black;">with</span><span style="background-color: #53a953; color: black;"> </span><span style="background-color: #028102; color: black;">ChatGPT</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #008000; color: black;">-</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #038103; color: black;">Chat</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #50a750; color: black;">smarter,</span><span style="background-color: #50a750; color: black;"> </span><span style="background-color: #e8f2e8; color: black;">not</span><span style="background-color: #e8f2e8; color: black;"> </span><span style="background-color: #8dc58d; color: black;">harder!"</span><span style="background-color: #8dc58d; color: black;"> </span><br><span style="background-color: #008000; color: black;">4.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #349a34; color: black;">"Break</span><span style="background-color: #349a34; color: black;"> </span><span style="background-color: #5aac5a; color: black;">the</span><span style="background-color: #5aac5a; color: black;"> </span><span style="background-color: #008000; color: black;">Ice</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">with</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">ChatGPT</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #e9f2e9; color: black;">-</span><span style="background-color: #e9f2e9; color: black;"> </span><span style="background-color: #daebda; color: black;">The</span><span style="background-color: #daebda; color: black;"> </span><span style="background-color: #279327; color: black;">Ultimate</span><span style="background-color: #279327; color: black;"> </span><span style="background-color: #b5d9b5; color: black;">Conversation</span><span style="background-color: #b5d9b5; color: black;"> </span><span style="background-color: #068306; color: black;">Starter!"</span><span style="background-color: #068306; color: black;"> </span><br><span style="background-color: #008000; color: black;">5.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"ChatGPT:</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #a3d0a3; color: black;">With</span><span style="background-color: #a3d0a3; color: black;"> </span><span style="background-color: #c9e3c9; color: black;">every</span><span style="background-color: #c9e3c9; color: black;"> </span><span style="background-color: #c9e3c9; color: black;">chat,</span><span style="background-color: #c9e3c9; color: black;"> </span><span style="background-color: #068306; color: black;">we'll</span><span style="background-color: #068306; color: black;"> </span><span style="background-color: #158a15; color: black;">wow</span><span style="background-color: #158a15; color: black;"> </span><span style="background-color: #008000; color: black;">you!"</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #008000; color: black;">6.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"ChatGPT:</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Making</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Conversations</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">Magical!"</span><span style="background-color: #ebf3eb; color: black;"> </span><br><span style="background-color: #229122; color: black;">7.</span><span style="background-color: #229122; color: black;"> </span><span style="background-color: #cfe5cf; color: black;">"Experience</span><span style="background-color: #cfe5cf; color: black;"> </span><span style="background-color: #209020; color: black;">Smarter</span><span style="background-color: #209020; color: black;"> </span><span style="background-color: #008000; color: black;">Chats</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">with</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">ChatGPT</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #088408; color: black;">-</span><span style="background-color: #088408; color: black;"> </span><span style="background-color: #cde5cd; color: black;">Your</span><span style="background-color: #cde5cd; color: black;"> </span><span style="background-color: #1c8e1c; color: black;">virtual</span><span style="background-color: #1c8e1c; color: black;"> </span><span style="background-color: #45a245; color: black;">chat</span><span style="background-color: #45a245; color: black;"> </span><span style="background-color: #018001; color: black;">guru!"</span><span style="background-color: #018001; color: black;"> </span><br><span style="background-color: #008000; color: black;">8.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"Elevate</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Your</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chats</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #2f972f; color: black;">with</span><span style="background-color: #2f972f; color: black;"> </span><span style="background-color: #008000; color: black;">ChatGPT</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">-</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #1a8d1a; color: black;">Your</span><span style="background-color: #1a8d1a; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">chatbot</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #d4e8d4; color: black;">companion!"</span><span style="background-color: #d4e8d4; color: black;"> </span><br><span style="background-color: #78bb78; color: black;">9.</span><span style="background-color: #78bb78; color: black;"> </span><span style="background-color: #048204; color: black;">"ChatGPT:</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #8cc58c; color: black;">The</span><span style="background-color: #8cc58c; color: black;"> </span><span style="background-color: #ddecdd; color: black;">Perfect</span><span style="background-color: #ddecdd; color: black;"> </span><span style="background-color: #e5f0e5; color: black;">Balance</span><span style="background-color: #e5f0e5; color: black;"> </span><span style="background-color: #0d860d; color: black;">of</span><span style="background-color: #0d860d; color: black;"> </span><span style="background-color: #188c18; color: black;">Wit</span><span style="background-color: #188c18; color: black;"> </span><span style="background-color: #008000; color: black;">and</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Intelligence!"</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #008000; color: black;">10.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #77ba77; color: black;">"Unlock</span><span style="background-color: #77ba77; color: black;"> </span><span style="background-color: #048204; color: black;">the</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #008000; color: black;">Potential</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #319831; color: black;">of</span><span style="background-color: #319831; color: black;"> </span><span style="background-color: #cfe5cf; color: black;">Chat</span><span style="background-color: #cfe5cf; color: black;"> </span><span style="background-color: #1f8f1f; color: black;">with</span><span style="background-color: #1f8f1f; color: black;"> </span><span style="background-color: #008000; color: black;">ChatGPT</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #e6f1e6; color: black;">-</span><span style="background-color: #e6f1e6; color: black;"> </span><span style="background-color: #3f9f3f; color: black;">Conversations</span><span style="background-color: #3f9f3f; color: black;"> </span><span style="background-color: #008000; color: black;">made</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">effortless!"</span><span style="background-color: #008000; color: black;"> </span></pre>
</div>
</div>
<section id="high-frequency-penalty" class="level3">
<h3 class="anchored" data-anchor-id="high-frequency-penalty">High Frequency Penalty</h3>
<div class="cell" data-execution_count="43">
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb52-1"></span>
<span id="cb52-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb52-3">  model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb52-4">  messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb52-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a helpful assistant."</span>},</span>
<span id="cb52-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: question}</span>
<span id="cb52-7">  ],</span>
<span id="cb52-8">  logprobs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb52-9">  temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb52-10">  seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed,</span>
<span id="cb52-11">  frequency_penalty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb52-12">)</span>
<span id="cb52-13">highlight_openai_response(response)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="font-family: inherit; white-space: pre-wrap; word-break: break-all;"><span style="background-color: #008000; color: black;">1.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"Unleash</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #cce4cc; color: black;">Power</span><span style="background-color: #cce4cc; color: black;"> </span><span style="background-color: #008000; color: black;">of</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chat</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #5cad5c; color: black;">with</span><span style="background-color: #5cad5c; color: black;"> </span><span style="background-color: #b3d8b3; color: black;">ChatGPT!"</span><span style="background-color: #b3d8b3; color: black;"> </span><br><span style="background-color: #008000; color: black;">2.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #63b163; color: black;">"ChatGPT:</span><span style="background-color: #63b163; color: black;"> </span><span style="background-color: #b0d6b0; color: black;">Your</span><span style="background-color: #b0d6b0; color: black;"> </span><span style="background-color: #008000; color: black;">Trusted</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Conversational</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Companion."</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #108810; color: black;">3.</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #008000; color: black;">"Get</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Instant</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Answers</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #53a953; color: black;">and</span><span style="background-color: #53a953; color: black;"> </span><span style="background-color: #0c860c; color: black;">Engaging</span><span style="background-color: #0c860c; color: black;"> </span><span style="background-color: #008000; color: black;">Chats</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #038103; color: black;">with</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #50a750; color: black;">ChatGPT!"</span><span style="background-color: #50a750; color: black;"> </span><br><span style="background-color: #e8f2e8; color: black;">4.</span><span style="background-color: #e8f2e8; color: black;"> </span><span style="background-color: #8cc58c; color: black;">"Elevate</span><span style="background-color: #8cc58c; color: black;"> </span><span style="background-color: #008000; color: black;">Your</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #349a34; color: black;">Conversations</span><span style="background-color: #349a34; color: black;"> </span><span style="background-color: #47a347; color: black;">with</span><span style="background-color: #47a347; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Intelligence</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">of</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #e7f1e7; color: black;">ChatGPT."</span><span style="background-color: #e7f1e7; color: black;"> </span><br><span style="background-color: #d6e9d6; color: black;">5.</span><span style="background-color: #d6e9d6; color: black;"> </span><span style="background-color: #1f8f1f; color: black;">"Chat</span><span style="background-color: #1f8f1f; color: black;"> </span><span style="background-color: #2a952a; color: black;">Smarter,</span><span style="background-color: #2a952a; color: black;"> </span><span style="background-color: #0e870e; color: black;">With</span><span style="background-color: #0e870e; color: black;"> </span><span style="background-color: #038103; color: black;">Confidence</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #92c892; color: black;">-</span><span style="background-color: #92c892; color: black;"> </span><span style="background-color: #008000; color: black;">Made</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #068306; color: black;">Possible</span><span style="background-color: #068306; color: black;"> </span><span style="background-color: #008000; color: black;">by</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">ChatGPT!"</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #008000; color: black;">6.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #72b872; color: black;">"Discover</span><span style="background-color: #72b872; color: black;"> </span><span style="background-color: #008000; color: black;">a</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">New</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Level</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #d0e6d0; color: black;">of</span><span style="background-color: #d0e6d0; color: black;"> </span><span style="background-color: #008000; color: black;">Conversation</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Excellence</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #89c389; color: black;">with</span><span style="background-color: #89c389; color: black;"> </span><span style="background-color: #1a8d1a; color: black;">ChatGPT."</span><span style="background-color: #1a8d1a; color: black;"> </span><br><span style="background-color: #008000; color: black;">7.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #289428; color: black;">“Experience</span><span style="background-color: #289428; color: black;"> </span><span style="background-color: #2e972e; color: black;">Artificial</span><span style="background-color: #2e972e; color: black;"> </span><span style="background-color: #8ac48a; color: black;">Intelligence</span><span style="background-color: #8ac48a; color: black;"> </span><span style="background-color: #008000; color: black;">that</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Feels</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Human</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">–</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #028102; color: black;">Meet</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #008000; color: black;">chatbot</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #018001; color: black;">G.”</span><span style="background-color: #018001; color: black;"> </span><br><span style="background-color: #018001; color: black;">8.“Make</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #b1d7b1; color: black;">Every</span><span style="background-color: #b1d7b1; color: black;"> </span><span style="background-color: #269226; color: black;">Interaction</span><span style="background-color: #269226; color: black;"> </span><span style="background-color: #008000; color: black;">Count</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">–</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">Talk</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #94c994; color: black;">to</span><span style="background-color: #94c994; color: black;"> </span><span style="background-color: #51a851; color: black;">Our</span><span style="background-color: #51a851; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">Powerful</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #058205; color: black;">AI</span><span style="background-color: #058205; color: black;"> </span><span style="background-color: #008000; color: black;">Assistant!”</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #028102; color: black;">9.“Unlock</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #028102; color: black;">Boundless</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #018001; color: black;">Knowledge</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #87c287; color: black;">and</span><span style="background-color: #87c287; color: black;"> </span><span style="background-color: #008000; color: black;">Vivid</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #088408; color: black;">Imagination–</span><span style="background-color: #088408; color: black;"> </span><span style="background-color: #108810; color: black;">Say</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #d7e9d7; color: black;">Hi</span><span style="background-color: #d7e9d7; color: black;"> </span><span style="background-color: #55a955; color: black;">to</span><span style="background-color: #55a955; color: black;"> </span><span style="background-color: #3d9e3d; color: black;">Our</span><span style="background-color: #3d9e3d; color: black;"> </span><span style="background-color: #6db66d; color: black;">Intelligent</span><span style="background-color: #6db66d; color: black;"> </span><span style="background-color: #008000; color: black;">AI</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #7cbd7c; color: black;">friend!"</span><span style="background-color: #7cbd7c; color: black;"> </span><span style="background-color: #7cbd7c;"> </span><br><span style="background-color: #51a851; color: black;">10."Connect,</span><span style="background-color: #51a851; color: black;"> </span><span style="background-color: #8dc58d; color: black;">Collaborate,</span><span style="background-color: #8dc58d; color: black;"> </span><span style="background-color: #0b850b; color: black;">Converse</span><span style="background-color: #0b850b; color: black;"> </span><span style="background-color: #078407; color: black;">like</span><span style="background-color: #078407; color: black;"> </span><span style="background-color: #088408; color: black;">never</span><span style="background-color: #088408; color: black;"> </span><span style="background-color: #0c860c; color: black;">before</span><span style="background-color: #0c860c; color: black;"> </span><span style="background-color: #008000; color: black;">-</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #3b9d3b; color: black;">Powered</span><span style="background-color: #3b9d3b; color: black;"> </span><span style="background-color: #b9dbb9; color: black;">by</span><span style="background-color: #b9dbb9; color: black;"> </span><span style="background-color: #d3e7d3; color: black;">the</span><span style="background-color: #d3e7d3; color: black;"> </span><span style="background-color: #e6f1e6; color: black;">Amazingness</span><span style="background-color: #e6f1e6; color: black;"> </span><span style="background-color: #118811; color: black;">Of</span><span style="background-color: #118811; color: black;"> </span><span style="background-color: #d1e6d1; color: black;">'Yethe'"</span><span style="background-color: #d1e6d1; color: black;"> </span></pre>
</div>
</div>
</section>
<section id="low-frequency-penalty" class="level3">
<h3 class="anchored" data-anchor-id="low-frequency-penalty">Low Frequency Penalty</h3>
<div class="cell" data-execution_count="44">
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1"></span>
<span id="cb53-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb53-3">  model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb53-4">  messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb53-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a helpful assistant."</span>},</span>
<span id="cb53-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: question}</span>
<span id="cb53-7">  ],</span>
<span id="cb53-8">  logprobs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb53-9">  temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb53-10">  seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed,</span>
<span id="cb53-11">  frequency_penalty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb53-12">)</span>
<span id="cb53-13">highlight_openai_response(response)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="font-family: inherit; white-space: pre-wrap; word-break: break-all;"><span style="background-color: #008000; color: black;">1.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"Unleash</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #cbe4cb; color: black;">Power</span><span style="background-color: #cbe4cb; color: black;"> </span><span style="background-color: #008000; color: black;">of</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chat</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #5aac5a; color: black;">with</span><span style="background-color: #5aac5a; color: black;"> </span><span style="background-color: #b4d8b4; color: black;">ChatGPT!"</span><span style="background-color: #b4d8b4; color: black;"> </span><br><span style="background-color: #008000; color: black;">2.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #65b265; color: black;">"ChatGPT:</span><span style="background-color: #65b265; color: black;"> </span><span style="background-color: #b4d8b4; color: black;">Your</span><span style="background-color: #b4d8b4; color: black;"> </span><span style="background-color: #008000; color: black;">Trusted</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Conversational</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Companion!"</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #108810; color: black;">3.</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #008000; color: black;">"Get</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Instant</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Answers</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #54a954; color: black;">with</span><span style="background-color: #54a954; color: black;"> </span><span style="background-color: #018001; color: black;">ChatGPT!"</span><span style="background-color: #018001; color: black;"> </span><br><span style="background-color: #008000; color: black;">4.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #028102; color: black;">"ChatGPT:</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #4fa74f; color: black;">Making</span><span style="background-color: #4fa74f; color: black;"> </span><span style="background-color: #e8f2e8; color: black;">Conversations</span><span style="background-color: #e8f2e8; color: black;"> </span><span style="background-color: #8ec58e; color: black;">Smarter!"</span><span style="background-color: #8ec58e; color: black;"> </span><br><span style="background-color: #008000; color: black;">5.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #359a35; color: black;">"Connect,</span><span style="background-color: #359a35; color: black;"> </span><span style="background-color: #49a449; color: black;">Engage,</span><span style="background-color: #49a449; color: black;"> </span><span style="background-color: #008000; color: black;">and</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Learn</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">with</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #eaf2ea; color: black;">ChatGPT!"</span><span style="background-color: #eaf2ea; color: black;"> </span><br><span style="background-color: #ddecdd; color: black;">6.</span><span style="background-color: #ddecdd; color: black;"> </span><span style="background-color: #2c962c; color: black;">"Elevate</span><span style="background-color: #2c962c; color: black;"> </span><span style="background-color: #9dcd9d; color: black;">Your</span><span style="background-color: #9dcd9d; color: black;"> </span><span style="background-color: #048204; color: black;">Conversations</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #008000; color: black;">with</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">ChatGPT!"</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #74b974; color: black;">7.</span><span style="background-color: #74b974; color: black;"> </span><span style="background-color: #008000; color: black;">"ChatGPT:</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Your</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Virtual</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #239123; color: black;">Conversational</span><span style="background-color: #239123; color: black;"> </span><span style="background-color: #008000; color: black;">Superpower!"</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #008000; color: black;">8.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"Experience</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #d2e7d2; color: black;">the</span><span style="background-color: #d2e7d2; color: black;"> </span><span style="background-color: #138913; color: black;">Future</span><span style="background-color: #138913; color: black;"> </span><span style="background-color: #008000; color: black;">of</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #118911; color: black;">Chat</span><span style="background-color: #118911; color: black;"> </span><span style="background-color: #008000; color: black;">with</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #289328; color: black;">ChatGPT!"</span><span style="background-color: #289328; color: black;"> </span><br><span style="background-color: #008000; color: black;">9.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"ChatGPT:</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Making</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #e9f2e9; color: black;">Talk</span><span style="background-color: #e9f2e9; color: black;"> </span><span style="background-color: #61af61; color: black;">as</span><span style="background-color: #61af61; color: black;"> </span><span style="background-color: #daebda; color: black;">Intelligent</span><span style="background-color: #daebda; color: black;"> </span><span style="background-color: #008000; color: black;">as</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">You!"</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #0e870e; color: black;">10.</span><span style="background-color: #0e870e; color: black;"> </span><span style="background-color: #a3d0a3; color: black;">"ChatGPT:</span><span style="background-color: #a3d0a3; color: black;"> </span><span style="background-color: #008000; color: black;">Your</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chatbot</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Buddy</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">for</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Every</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Occasion!"</span><span style="background-color: #008000; color: black;"> </span></pre>
</div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature_files/figure-html/b77f7f89-1-image.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image.png</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature_files/figure-html/097e334e-1-image.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image.png</figcaption>
</figure>
</div>
</section>
</section>
<section id="presence-penalty" class="level1">
<h1>Presence Penalty</h1>
<p>Presence Penalty is a parameter that influences the generation of new content by penalizing tokens that have already appeared in the text. It ranges from -2.0 to 2.0, where positive values discourage repetition and encourage the model to introduce new topics, while negative values do the opposite. This penalty is applied as a one-time, additive contribution to tokens that have been used at least once, helping to ensure more diverse and creative outputs</p>
<div class="cell" data-execution_count="45">
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb54-1"></span>
<span id="cb54-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb54-3">  model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb54-4">  messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb54-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a helpful assistant."</span>},</span>
<span id="cb54-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: question}</span>
<span id="cb54-7">  ],</span>
<span id="cb54-8">  logprobs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb54-9">  temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb54-10">  seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed</span>
<span id="cb54-11">)</span>
<span id="cb54-12">highlight_openai_response(response)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="font-family: inherit; white-space: pre-wrap; word-break: break-all;"><span style="background-color: #008000; color: black;">1.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"Unleash</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #cce4cc; color: black;">Power</span><span style="background-color: #cce4cc; color: black;"> </span><span style="background-color: #008000; color: black;">of</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chat</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #5cad5c; color: black;">with</span><span style="background-color: #5cad5c; color: black;"> </span><span style="background-color: #b3d8b3; color: black;">ChatGPT!"</span><span style="background-color: #b3d8b3; color: black;"> </span><br><span style="background-color: #008000; color: black;">2.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #63b163; color: black;">"ChatGPT:</span><span style="background-color: #63b163; color: black;"> </span><span style="background-color: #b0d6b0; color: black;">Your</span><span style="background-color: #b0d6b0; color: black;"> </span><span style="background-color: #008000; color: black;">Trusted</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Conversational</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Companion!"</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #108810; color: black;">3.</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #008000; color: black;">"Get</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Instant</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Answers</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #53a953; color: black;">with</span><span style="background-color: #53a953; color: black;"> </span><span style="background-color: #028102; color: black;">ChatGPT</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #008000; color: black;">-</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #038103; color: black;">Chat</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #4fa74f; color: black;">smarter,</span><span style="background-color: #4fa74f; color: black;"> </span><span style="background-color: #e8f2e8; color: black;">not</span><span style="background-color: #e8f2e8; color: black;"> </span><span style="background-color: #8dc58d; color: black;">harder!"</span><span style="background-color: #8dc58d; color: black;"> </span><br><span style="background-color: #008000; color: black;">4.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #349934; color: black;">"Break</span><span style="background-color: #349934; color: black;"> </span><span style="background-color: #5aac5a; color: black;">the</span><span style="background-color: #5aac5a; color: black;"> </span><span style="background-color: #008000; color: black;">Ice</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">with</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">ChatGPT</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #e9f2e9; color: black;">-</span><span style="background-color: #e9f2e9; color: black;"> </span><span style="background-color: #d8ead8; color: black;">The</span><span style="background-color: #d8ead8; color: black;"> </span><span style="background-color: #259225; color: black;">Ultimate</span><span style="background-color: #259225; color: black;"> </span><span style="background-color: #b2d7b1; color: black;">Conversation</span><span style="background-color: #b2d7b1; color: black;"> </span><span style="background-color: #068306; color: black;">Starter!"</span><span style="background-color: #068306; color: black;"> </span><br><span style="background-color: #008000; color: black;">5.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"ChatGPT:</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #a6d2a6; color: black;">With</span><span style="background-color: #a6d2a6; color: black;"> </span><span style="background-color: #cce4cc; color: black;">every</span><span style="background-color: #cce4cc; color: black;"> </span><span style="background-color: #c7e1c7; color: black;">chat,</span><span style="background-color: #c7e1c7; color: black;"> </span><span style="background-color: #088408; color: black;">knowledge</span><span style="background-color: #088408; color: black;"> </span><span style="background-color: #188c18; color: black;">expands!"</span><span style="background-color: #188c18; color: black;"> </span><br><span style="background-color: #008000; color: black;">6.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #018001; color: black;">"Join</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chat</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Revolution</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">-</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #259225; color: black;">Welcome</span><span style="background-color: #259225; color: black;"> </span><span style="background-color: #d6e9d6; color: black;">to</span><span style="background-color: #d6e9d6; color: black;"> </span><span style="background-color: #1f8f1f; color: black;">ChatGPT!"</span><span style="background-color: #1f8f1f; color: black;"> </span><br><span style="background-color: #008000; color: black;">7.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"Experience</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chat</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #098509; color: black;">Brilliance</span><span style="background-color: #098509; color: black;"> </span><span style="background-color: #d0e6d0; color: black;">with</span><span style="background-color: #d0e6d0; color: black;"> </span><span style="background-color: #1c8e1c; color: black;">ChatGPT</span><span style="background-color: #1c8e1c; color: black;"> </span><span style="background-color: #3f9f3f; color: black;">-</span><span style="background-color: #3f9f3f; color: black;"> </span><span style="background-color: #018001; color: black;">Seamless</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #008000; color: black;">Conversations,</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Unmatched</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Results!"</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #008000; color: black;">8.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #2e972e; color: black;">"Chat</span><span style="background-color: #2e972e; color: black;"> </span><span style="background-color: #008000; color: black;">Smarter,</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Talk</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">Faster</span><span style="background-color: #1d8e1d; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">with</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #d5e9d5; color: black;">ChatGPT!"</span><span style="background-color: #d5e9d5; color: black;"> </span><br><span style="background-color: #8ec58e; color: black;">9.</span><span style="background-color: #8ec58e; color: black;"> </span><span style="background-color: #048204; color: black;">"ChatGPT:</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #dcecdc; color: black;">The</span><span style="background-color: #dcecdc; color: black;"> </span><span style="background-color: #5fae5f; color: black;">Intelligent</span><span style="background-color: #5fae5f; color: black;"> </span><span style="background-color: #068306; color: black;">Chatbot</span><span style="background-color: #068306; color: black;"> </span><span style="background-color: #008000; color: black;">for</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">All</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Your</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">Conversational</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #008000; color: black;">Needs!"</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #0e870e; color: black;">10.</span><span style="background-color: #0e870e; color: black;"> </span><span style="background-color: #56aa56; color: black;">"Unlock</span><span style="background-color: #56aa56; color: black;"> </span><span style="background-color: #c9e3c9; color: black;">the</span><span style="background-color: #c9e3c9; color: black;"> </span><span style="background-color: #ddecdd; color: black;">Potential</span><span style="background-color: #ddecdd; color: black;"> </span><span style="background-color: #008000; color: black;">of</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #369b36; color: black;">Chat</span><span style="background-color: #369b36; color: black;"> </span><span style="background-color: #008000; color: black;">with</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">ChatGPT</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #038103; color: black;">-</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #008000; color: black;">Conversations</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Redefined!"</span><span style="background-color: #008000; color: black;"> </span></pre>
</div>
</div>
<section id="high-presence-penalty" class="level3">
<h3 class="anchored" data-anchor-id="high-presence-penalty">High Presence Penalty</h3>
<div class="cell" data-execution_count="46">
<div class="sourceCode cell-code" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb55-1"></span>
<span id="cb55-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb55-3">  model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb55-4">  messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb55-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a helpful assistant."</span>},</span>
<span id="cb55-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: question}</span>
<span id="cb55-7">  ],</span>
<span id="cb55-8">  logprobs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb55-9">  temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb55-10">  seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed,</span>
<span id="cb55-11">  presence_penalty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span></span>
<span id="cb55-12">)</span>
<span id="cb55-13">highlight_openai_response(response)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="font-family: inherit; white-space: pre-wrap; word-break: break-all;"><span style="background-color: #008000; color: black;">1.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"Unleash</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #cce4cc; color: black;">Power</span><span style="background-color: #cce4cc; color: black;"> </span><span style="background-color: #008000; color: black;">of</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chat</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #5cad5c; color: black;">with</span><span style="background-color: #5cad5c; color: black;"> </span><span style="background-color: #b7dab7; color: black;">ChatGPT!"</span><span style="background-color: #b7dab7; color: black;"> </span><br><span style="background-color: #008000; color: black;">2.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #63b163; color: black;">"ChatGPT:</span><span style="background-color: #63b163; color: black;"> </span><span style="background-color: #b0d6b0; color: black;">Your</span><span style="background-color: #b0d6b0; color: black;"> </span><span style="background-color: #008000; color: black;">Trusted</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Conversational</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Companion."</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #108810; color: black;">3.</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #008000; color: black;">"Get</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Instant</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Answers</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #53a953; color: black;">and</span><span style="background-color: #53a953; color: black;"> </span><span style="background-color: #078407; color: black;">Engaging</span><span style="background-color: #078407; color: black;"> </span><span style="background-color: #008000; color: black;">Chats</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #028102; color: black;">with</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #4fa74f; color: black;">ChatGPT!"</span><span style="background-color: #4fa74f; color: black;"> </span><br><span style="background-color: #e8f2e8; color: black;">4.</span><span style="background-color: #e8f2e8; color: black;"> </span><span style="background-color: #8cc58c; color: black;">"Elevate</span><span style="background-color: #8cc58c; color: black;"> </span><span style="background-color: #008000; color: black;">Your</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #349934; color: black;">Conversations</span><span style="background-color: #349934; color: black;"> </span><span style="background-color: #56aa56; color: black;">with</span><span style="background-color: #56aa56; color: black;"> </span><span style="background-color: #008000; color: black;">ChatGPT's</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Intelligent</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">AI."</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #e7f1e7; color: black;">5.</span><span style="background-color: #e7f1e7; color: black;"> </span><span style="background-color: #d6e9d6; color: black;">"ChatGPT:</span><span style="background-color: #d6e9d6; color: black;"> </span><span style="background-color: #209020; color: black;">With</span><span style="background-color: #209020; color: black;"> </span><span style="background-color: #319831; color: black;">You</span><span style="background-color: #319831; color: black;"> </span><span style="background-color: #0f870f; color: black;">Every</span><span style="background-color: #0f870f; color: black;"> </span><span style="background-color: #038103; color: black;">Step</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #abd4ab; color: black;">of</span><span style="background-color: #abd4ab; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #048204; color: black;">Conversation."</span><span style="background-color: #048204; color: black;"> </span><br><span style="background-color: #008000; color: black;">6.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"Unlock</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">New</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #72b872; color: black;">Possibilities</span><span style="background-color: #72b872; color: black;"> </span><span style="background-color: #008000; color: black;">in</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Dialogue</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">with</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #d3e7d3; color: black;">ChatGPT."</span><span style="background-color: #d3e7d3; color: black;"> </span><br><span style="background-color: #008000; color: black;">7.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"Experience</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #6cb56c; color: black;">Natural</span><span style="background-color: #6cb56c; color: black;"> </span><span style="background-color: #148a14; color: black;">Language</span><span style="background-color: #148a14; color: black;"> </span><span style="background-color: #008000; color: black;">Communication</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #048204; color: black;">with</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #44a144; color: black;">ChatGPT."</span><span style="background-color: #44a144; color: black;"> </span><br><span style="background-color: #008000; color: black;">8.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"Supercharge</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #1c8e1c; color: black;">Your</span><span style="background-color: #1c8e1c; color: black;"> </span><span style="background-color: #cbe4cb; color: black;">Conversations</span><span style="background-color: #cbe4cb; color: black;"> </span><span style="background-color: #86c286; color: black;">with</span><span style="background-color: #86c286; color: black;"> </span><span style="background-color: #048204; color: black;">ChatGPT's</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #008000; color: black;">AI</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Assistant."</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #008000; color: black;">9.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #96c996; color: black;">"Chat</span><span style="background-color: #96c996; color: black;"> </span><span style="background-color: #1b8d1b; color: black;">Smarter,</span><span style="background-color: #1b8d1b; color: black;"> </span><span style="background-color: #008000; color: black;">Not</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #078407; color: black;">Harder,</span><span style="background-color: #078407; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">with</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #40a040; color: black;">ChatGPT."</span><span style="background-color: #40a040; color: black;"> </span><br><span style="background-color: #399c39; color: black;">10.</span><span style="background-color: #399c39; color: black;"> </span><span style="background-color: #008000; color: black;">"Say</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Hello</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #018001; color: black;">to</span><span style="background-color: #018001; color: black;"> </span><span style="background-color: #289328; color: black;">Seamless</span><span style="background-color: #289328; color: black;"> </span><span style="background-color: #068306; color: black;">Chats</span><span style="background-color: #068306; color: black;"> </span><span style="background-color: #008000; color: black;">and</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Intelligent</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Responses</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #b8dab8; color: black;">with</span><span style="background-color: #b8dab8; color: black;"> </span><span style="background-color: #daebda; color: black;">ChatGPT!"</span><span style="background-color: #daebda; color: black;"> </span></pre>
</div>
</div>
</section>
<section id="low-presence-penalty" class="level3">
<h3 class="anchored" data-anchor-id="low-presence-penalty">Low Presence Penalty</h3>
<div class="cell" data-execution_count="47">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb56-1"></span>
<span id="cb56-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb56-3">  model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb56-4">  messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb56-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a helpful assistant."</span>},</span>
<span id="cb56-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: question}</span>
<span id="cb56-7">  ],</span>
<span id="cb56-8">  logprobs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb56-9">  temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb56-10">  seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed,</span>
<span id="cb56-11">  presence_penalty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb56-12">)</span>
<span id="cb56-13">highlight_openai_response(response)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="font-family: inherit; white-space: pre-wrap; word-break: break-all;"><span style="background-color: #008000; color: black;">1.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"Unleash</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #cce4cc; color: black;">Power</span><span style="background-color: #cce4cc; color: black;"> </span><span style="background-color: #008000; color: black;">of</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chat</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #5cad5c; color: black;">with</span><span style="background-color: #5cad5c; color: black;"> </span><span style="background-color: #b7dab7; color: black;">ChatGPT!"</span><span style="background-color: #b7dab7; color: black;"> </span><br><span style="background-color: #008000; color: black;">2.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #63b163; color: black;">"ChatGPT:</span><span style="background-color: #63b163; color: black;"> </span><span style="background-color: #b0d6b0; color: black;">Your</span><span style="background-color: #b0d6b0; color: black;"> </span><span style="background-color: #008000; color: black;">Trusted</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Conversational</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Companion!"</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #108810; color: black;">3.</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #008000; color: black;">"ChatGPT:</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chatting</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">just</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #54a954; color: black;">got</span><span style="background-color: #54a954; color: black;"> </span><span style="background-color: #008000; color: black;">Smarter!"</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #008000; color: black;">4.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #038103; color: black;">"Connect</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #51a851; color: black;">with</span><span style="background-color: #51a851; color: black;"> </span><span style="background-color: #e8f2e8; color: black;">ChatGPT:</span><span style="background-color: #e8f2e8; color: black;"> </span><span style="background-color: #94c994; color: black;">Your</span><span style="background-color: #94c994; color: black;"> </span><span style="background-color: #008000; color: black;">Virtual</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #349934; color: black;">Chatting</span><span style="background-color: #349934; color: black;"> </span><span style="background-color: #158a15; color: black;">Guru!"</span><span style="background-color: #158a15; color: black;"> </span><br><span style="background-color: #008000; color: black;">5.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"ChatGPT:</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Arm</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #158a15; color: black;">Your</span><span style="background-color: #158a15; color: black;"> </span><span style="background-color: #008000; color: black;">Conversations</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">With</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Intelligence!"</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #d0e6d0; color: black;">6.</span><span style="background-color: #d0e6d0; color: black;"> </span><span style="background-color: #6fb76f; color: black;">"ChatGPT:</span><span style="background-color: #6fb76f; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">Chatting</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #008000; color: black;">Perfected</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #77ba77; color: black;">with</span><span style="background-color: #77ba77; color: black;"> </span><span style="background-color: #008000; color: black;">Artificial</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #118911; color: black;">Intelligence!"</span><span style="background-color: #118911; color: black;"> </span><br><span style="background-color: #008000; color: black;">7.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"ChatGPT:</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Your</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #eaf2ea; color: black;">Personal</span><span style="background-color: #eaf2ea; color: black;"> </span><span style="background-color: #9ccd9c; color: black;">Chatting</span><span style="background-color: #9ccd9c; color: black;"> </span><span style="background-color: #088408; color: black;">Assistant</span><span style="background-color: #088408; color: black;"> </span><span style="background-color: #008000; color: black;">with</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #349a34; color: black;">Power</span><span style="background-color: #349a34; color: black;"> </span><span style="background-color: #8dc58d; color: black;">of</span><span style="background-color: #8dc58d; color: black;"> </span><span style="background-color: #afd6af; color: black;">AI!"</span><span style="background-color: #afd6af; color: black;"> </span><br><span style="background-color: #78bb78; color: black;">8.</span><span style="background-color: #78bb78; color: black;"> </span><span style="background-color: #43a143; color: black;">"ChatGPT:</span><span style="background-color: #43a143; color: black;"> </span><span style="background-color: #d4e8d4; color: black;">Elevate</span><span style="background-color: #d4e8d4; color: black;"> </span><span style="background-color: #008000; color: black;">Your</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Conversations</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">to</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #138913; color: black;">Next</span><span style="background-color: #138913; color: black;"> </span><span style="background-color: #008000; color: black;">Level!"</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #008000; color: black;">9.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"ChatGPT:</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">Your</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #d7e9d7; color: black;">Smart</span><span style="background-color: #d7e9d7; color: black;"> </span><span style="background-color: #098509; color: black;">Friend</span><span style="background-color: #098509; color: black;"> </span><span style="background-color: #008000; color: black;">for</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">Engaging</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #5eae5e; color: black;">Chats!"</span><span style="background-color: #5eae5e; color: black;"> </span><br><span style="background-color: #008000; color: black;">10.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"ChatGPT:</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Intelligent</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Conversations</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #289328; color: black;">Made</span><span style="background-color: #289328; color: black;"> </span><span style="background-color: #048204; color: black;">Effortless!"</span><span style="background-color: #048204; color: black;"> </span></pre>
</div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature_files/figure-html/91ea83e2-1-image.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image.png</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature_files/figure-html/840abd40-1-image.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">image.png</figcaption>
</figure>
</div>
</section>
</section>
<section id="interaction-between-frequency-penalty-and-presence-penalty" class="level1">
<h1>Interaction between Frequency Penalty and Presence Penalty</h1>
<section id="high-frequency-penalty-and-high-presence-penalty" class="level3">
<h3 class="anchored" data-anchor-id="high-frequency-penalty-and-high-presence-penalty">High Frequency Penalty and High Presence Penalty</h3>
<div class="cell" data-execution_count="48">
<div class="sourceCode cell-code" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1"></span>
<span id="cb57-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb57-3">  model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb57-4">  messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb57-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a helpful assistant."</span>},</span>
<span id="cb57-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: question}</span>
<span id="cb57-7">  ],</span>
<span id="cb57-8">  logprobs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb57-9">  temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb57-10">  seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed,</span>
<span id="cb57-11">  presence_penalty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.8</span>,</span>
<span id="cb57-12">  frequency_penalty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.8</span></span>
<span id="cb57-13">)</span>
<span id="cb57-14">highlight_openai_response(response)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="font-family: inherit; white-space: pre-wrap; word-break: break-all;"><span style="background-color: #008000; color: black;">1.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"Unleash</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #cbe4cb; color: black;">Power</span><span style="background-color: #cbe4cb; color: black;"> </span><span style="background-color: #008000; color: black;">of</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chat</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #5aac5a; color: black;">with</span><span style="background-color: #5aac5a; color: black;"> </span><span style="background-color: #b4d8b4; color: black;">ChatGPT!"</span><span style="background-color: #b4d8b4; color: black;"> </span><br><span style="background-color: #008000; color: black;">2.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #65b265; color: black;">"ChatGPT:</span><span style="background-color: #65b265; color: black;"> </span><span style="background-color: #b4d8b4; color: black;">Your</span><span style="background-color: #b4d8b4; color: black;"> </span><span style="background-color: #048204; color: black;">Trusted</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #008000; color: black;">Conversational</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Companion."</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #108810; color: black;">3.</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #008000; color: black;">"Get</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Instant</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Answers</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #54a954; color: black;">and</span><span style="background-color: #54a954; color: black;"> </span><span style="background-color: #339933; color: black;">Engaging</span><span style="background-color: #339933; color: black;"> </span><span style="background-color: #008000; color: black;">Chats</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #028102; color: black;">with</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #4ea64e; color: black;">ChatGPT!"</span><span style="background-color: #4ea64e; color: black;"> </span><br><span style="background-color: #e8f2e8; color: black;">4.</span><span style="background-color: #e8f2e8; color: black;"> </span><span style="background-color: #8bc48b; color: black;">"Elevate</span><span style="background-color: #8bc48b; color: black;"> </span><span style="background-color: #008000; color: black;">Your</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #359a35; color: black;">Conversations</span><span style="background-color: #359a35; color: black;"> </span><span style="background-color: #2f972f; color: black;">with</span><span style="background-color: #2f972f; color: black;"> </span><span style="background-color: #008000; color: black;">AI-Powered</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">ChatGPT."</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #008000; color: black;">5.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #e6f1e6; color: black;">"Let's</span><span style="background-color: #e6f1e6; color: black;"> </span><span style="background-color: #d5e9d5; color: black;">Talk!</span><span style="background-color: #d5e9d5; color: black;"> </span><span style="background-color: #209020; color: black;">With</span><span style="background-color: #209020; color: black;"> </span><span style="background-color: #219021; color: black;">Dynamic</span><span style="background-color: #219021; color: black;"> </span><span style="background-color: #0d860d; color: black;">Dialogue</span><span style="background-color: #0d860d; color: black;"> </span><span style="background-color: #038103; color: black;">Made</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #45a245; color: black;">Easy</span><span style="background-color: #45a245; color: black;"> </span><span style="background-color: #008000; color: black;">by</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #1b8d1b; color: black;">ChatGPT."</span><span style="background-color: #1b8d1b; color: black;"> </span><br><span style="background-color: #008000; color: black;">6.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"Discover</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Smarter,</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #79bc79; color: black;">More</span><span style="background-color: #79bc79; color: black;"> </span><span style="background-color: #008000; color: black;">Natural</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chats</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Using</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #cbe4cb; color: black;">ChatGPT."</span><span style="background-color: #cbe4cb; color: black;"> </span><br><span style="background-color: #008000; color: black;">7.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"Unlock</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #cde5cd; color: black;">a</span><span style="background-color: #cde5cd; color: black;"> </span><span style="background-color: #56aa56; color: black;">World</span><span style="background-color: #56aa56; color: black;"> </span><span style="background-color: #008000; color: black;">of</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #6ab46a; color: black;">Seamless</span><span style="background-color: #6ab46a; color: black;"> </span><span style="background-color: #96c996; color: black;">Communication</span><span style="background-color: #96c996; color: black;"> </span><span style="background-color: #128912; color: black;">with</span><span style="background-color: #128912; color: black;"> </span><span style="background-color: #008000; color: black;">ChatGPT."</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000;"> </span><br><span style="background-color: #269226; color: black;">8</span><span style="background-color: #269226; color: black;"> </span><span style="background-color: #259225; color: black;">."Experience</span><span style="background-color: #259225; color: black;"> </span><span style="background-color: #008000; color: black;">Human-Like</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #068306; color: black;">Interactions</span><span style="background-color: #068306; color: black;"> </span><span style="background-color: #008000; color: black;">using</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #038103; color: black;">our</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #028102; color: black;">Advanced</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #eaf2ea; color: black;">Assistant</span><span style="background-color: #eaf2ea; color: black;"> </span><span style="background-color: #87c287; color: black;">-Chat</span><span style="background-color: #87c287; color: black;"> </span><span style="background-color: #038103; color: black;">Gpt"</span><span style="background-color: #038103; color: black;"> </span><br><span style="background-color: #80bf80; color: black;">9</span><span style="background-color: #80bf80; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">."Your</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">Virtual</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #85c185; color: black;">Conversation</span><span style="background-color: #85c185; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">Buddy</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #8ec58e; color: black;">–</span><span style="background-color: #8ec58e; color: black;"> </span><span style="background-color: #048204; color: black;">Get</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #038103; color: black;">Talking</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #048204; color: black;">With</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #038103; color: black;">Chat</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #108810; color: black;">Gpt</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #008000; color: black;">Now</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #108810; color: black;">!</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #178b17; color: black;">"</span><span style="background-color: #178b17; color: black;"> </span><br><span style="background-color: #ddecdd; color: black;">10</span><span style="background-color: #ddecdd; color: black;"> </span><span style="background-color: #e9f2e9; color: black;">."Revolutionize</span><span style="background-color: #e9f2e9; color: black;"> </span><span style="background-color: #008000; color: black;">Your</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #86c286; color: black;">Conversations</span><span style="background-color: #86c286; color: black;"> </span><span style="background-color: #3a9c3a; color: black;">w</span><span style="background-color: #3a9c3a; color: black;"> </span></pre>
</div>
</div>
</section>
<section id="low-frequency-penalty-and-low-presence-penalty" class="level3">
<h3 class="anchored" data-anchor-id="low-frequency-penalty-and-low-presence-penalty">Low Frequency Penalty and Low Presence Penalty</h3>
<div class="cell" data-execution_count="49">
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb58-1"></span>
<span id="cb58-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> client.chat.completions.create(</span>
<span id="cb58-3">  model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model,</span>
<span id="cb58-4">  messages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb58-5">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"system"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You are a helpful assistant."</span>},</span>
<span id="cb58-6">    {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"role"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"content"</span>: question}</span>
<span id="cb58-7">  ],</span>
<span id="cb58-8">  logprobs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb58-9">  temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb58-10">  seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed,</span>
<span id="cb58-11">  presence_penalty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span id="cb58-12">  frequency_penalty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb58-13">)</span>
<span id="cb58-14">highlight_openai_response(response)</span></code></pre></div>
<div class="cell-output cell-output-display">
<pre style="font-family: inherit; white-space: pre-wrap; word-break: break-all;"><span style="background-color: #008000; color: black;">1.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"Unleash</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">the</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #cce4cc; color: black;">Power</span><span style="background-color: #cce4cc; color: black;"> </span><span style="background-color: #008000; color: black;">of</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chat</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #5cad5c; color: black;">with</span><span style="background-color: #5cad5c; color: black;"> </span><span style="background-color: #b4d8b4; color: black;">ChatGPT!"</span><span style="background-color: #b4d8b4; color: black;"> </span><br><span style="background-color: #008000; color: black;">2.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #62b062; color: black;">"ChatGPT:</span><span style="background-color: #62b062; color: black;"> </span><span style="background-color: #b0d6b0; color: black;">Your</span><span style="background-color: #b0d6b0; color: black;"> </span><span style="background-color: #008000; color: black;">Trusted</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Conversational</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Companion!"</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #108810; color: black;">3.</span><span style="background-color: #108810; color: black;"> </span><span style="background-color: #008000; color: black;">"ChatGPT:</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chatting</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">just</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #53a953; color: black;">got</span><span style="background-color: #53a953; color: black;"> </span><span style="background-color: #008000; color: black;">Smarter!"</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #008000; color: black;">4.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #038103; color: black;">"Connect</span><span style="background-color: #038103; color: black;"> </span><span style="background-color: #50a750; color: black;">with</span><span style="background-color: #50a750; color: black;"> </span><span style="background-color: #e8f2e8; color: black;">ChatGPT:</span><span style="background-color: #e8f2e8; color: black;"> </span><span style="background-color: #90c790; color: black;">Chatting</span><span style="background-color: #90c790; color: black;"> </span><span style="background-color: #008000; color: black;">with</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #349934; color: black;">Intelligence!"</span><span style="background-color: #349934; color: black;"> </span><br><span style="background-color: #2c962c; color: black;">5.</span><span style="background-color: #2c962c; color: black;"> </span><span style="background-color: #008000; color: black;">"ChatGPT:</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Revolutionizing</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chatting,</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #339933; color: black;">One</span><span style="background-color: #339933; color: black;"> </span><span style="background-color: #008000; color: black;">Conversation</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">at</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">a</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #d2e7d2; color: black;">Time!"</span><span style="background-color: #d2e7d2; color: black;"> </span><br><span style="background-color: #61af61; color: black;">6.</span><span style="background-color: #61af61; color: black;"> </span><span style="background-color: #ebf3eb; color: black;">"ChatGPT:</span><span style="background-color: #ebf3eb; color: black;"> </span><span style="background-color: #008000; color: black;">Your</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #77ba77; color: black;">Virtual</span><span style="background-color: #77ba77; color: black;"> </span><span style="background-color: #008000; color: black;">Chatting</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #1d8e1d; color: black;">Expert!"</span><span style="background-color: #1d8e1d; color: black;"> </span><br><span style="background-color: #008000; color: black;">7.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"ChatGPT:</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chatting</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #e9f2e9; color: black;">with</span><span style="background-color: #e9f2e9; color: black;"> </span><span style="background-color: #c9e2c8; color: black;">Artificial</span><span style="background-color: #c9e2c8; color: black;"> </span><span style="background-color: #048204; color: black;">Intelligence</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #008000; color: black;">that</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Feels</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #4ba54b; color: black;">Human!"</span><span style="background-color: #4ba54b; color: black;"> </span><br><span style="background-color: #b8dab8; color: black;">8.</span><span style="background-color: #b8dab8; color: black;"> </span><span style="background-color: #1f8f1f; color: black;">"ChatGPT:</span><span style="background-color: #1f8f1f; color: black;"> </span><span style="background-color: #c9e3c9; color: black;">Chatting</span><span style="background-color: #c9e3c9; color: black;"> </span><span style="background-color: #b7dab7; color: black;">made</span><span style="background-color: #b7dab7; color: black;"> </span><span style="background-color: #008000; color: black;">Easy,</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chatting</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">made</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Powerful!"</span><span style="background-color: #008000; color: black;"> </span><br><span style="background-color: #289428; color: black;">9.</span><span style="background-color: #289428; color: black;"> </span><span style="background-color: #008000; color: black;">"ChatGPT:</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chatting</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">with</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #deedde; color: black;">the</span><span style="background-color: #deedde; color: black;"> </span><span style="background-color: #028102; color: black;">Next</span><span style="background-color: #028102; color: black;"> </span><span style="background-color: #b2d7b2; color: black;">Level</span><span style="background-color: #b2d7b2; color: black;"> </span><span style="background-color: #3f9f3f; color: black;">of</span><span style="background-color: #3f9f3f; color: black;"> </span><span style="background-color: #badbba; color: black;">Chatbot</span><span style="background-color: #badbba; color: black;"> </span><span style="background-color: #068306; color: black;">Technology!"</span><span style="background-color: #068306; color: black;"> </span><br><span style="background-color: #048204; color: black;">10.</span><span style="background-color: #048204; color: black;"> </span><span style="background-color: #008000; color: black;">"ChatGPT:</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Chatting.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">Redefined.</span><span style="background-color: #008000; color: black;"> </span><span style="background-color: #008000; color: black;">"</span><span style="background-color: #008000; color: black;"> </span></pre>
</div>
</div>
</section>
</section>
<section id="practical-use-cases" class="level1">
<h1>Practical Use Cases</h1>
<section id="industry-1-creative-writing-e.g.-novels-short-stories" class="level3">
<h3 class="anchored" data-anchor-id="industry-1-creative-writing-e.g.-novels-short-stories">Industry 1: Creative Writing (e.g., Novels, Short Stories)</h3>
<ol type="1">
<li><strong>Temperature</strong>: Set to 0.8-0.9. Higher temperature encourages more creative and unexpected turns of phrase, enhancing the storytelling with originality.</li>
<li><strong>Top P (Nucleus Sampling)</strong>: Set around 0.9. Allows for a good range of probable words while still fostering creativity, which is vital in creative writing.</li>
<li><strong>Frequency Penalty</strong>: Set to a moderate value (e.g., 0.5). Helps avoid excessive repetition of words/phrases, maintaining a fresh and engaging narrative.</li>
<li><strong>Presence Penalty</strong>: Set to a lower value (e.g., 0.3-0.4). Encourages some repetition of key themes or phrases, which can be a powerful tool in storytelling.</li>
</ol>
</section>
<section id="industry-2-customer-support-e.g.-chatbots-for-service-queries" class="level3">
<h3 class="anchored" data-anchor-id="industry-2-customer-support-e.g.-chatbots-for-service-queries">Industry 2: Customer Support (e.g., Chatbots for Service Queries)</h3>
<ol type="1">
<li><strong>Temperature</strong>: Set lower, around 0.3-0.4. Ensures more predictable and relevant responses, crucial for accurate customer support.</li>
<li><strong>Top P (Nucleus Sampling)</strong>: Set around 0.8. Balances the need for coherent, relevant responses while allowing for some variability to better match customer queries.</li>
<li><strong>Frequency Penalty</strong>: Moderate to high (e.g., 0.6-0.8). In customer support, avoiding repetitive phrases can enhance clarity and professionalism in responses.</li>
<li><strong>Presence Penalty</strong>: Moderate (e.g., 0.5). Helps ensure a variety of information is provided, which can be crucial in addressing diverse customer queries comprehensively.</li>
</ol>
<section id="explanation" class="level4">
<h4 class="anchored" data-anchor-id="explanation">Explanation:</h4>
<ul>
<li><strong>Creative Writing</strong>: The settings are designed to maximize creativity and originality, ensuring a rich and engaging narrative.</li>
<li><strong>Customer Support</strong>: The focus here is on accuracy, relevance, and clarity in responses, which are essential in a customer support context.</li>
</ul>



</section>
</section>
</section>

<div class="quarto-listing quarto-listing-container-default" id="listing-listing">
<div class="list quarto-listing-default">

</div>
<div class="listing-no-matching d-none">
No matching items
</div>
</div><a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>llm</category>
  <category>openai</category>
  <guid>https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/llm_temperature.html</guid>
  <pubDate>Sat, 16 Dec 2023 14:00:00 GMT</pubDate>
  <media:content url="https://arunprakash.ai/posts/understanding-openai-chatcompletion-model-parameters/IMG_F4CC52CE7F7F-1.jpeg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
